const cpx = require('cpx');
const path = require('path');
const fs = require('fs-extra')
const rimraf = require('rimraf');

// point to the root of your local patternlab folder
const patternlabFolder = "../../related-projects/pattern-lab";
const patternFiles = path.join(patternlabFolder, 'source/_patterns/**/*.scss');

const distFolder = './dist';
const cssFiles = [
  'patternlab.css',
  'patternlab.min.css',
  'patternlab-rtl.css',
  'patternlab-rtl.min.css'
];

// Copy over all files we built with the new provided patternab task (see Readme.md)
copyFiles();
//Fix some path issues
fixCSSPaths(cssFiles);


function copyFiles() {
  rimraf.sync(distFolder);
  cpx.copySync(path.join(patternlabFolder, 'package-content/**/*'),  distFolder);
  cpx.copySync('custom-styles/patternlab-minimal.css',  distFolder);

  // also bundle all scss files, just in case someone wants to import something from patternlab scss sources
  cpx.copySync(path.join(patternlabFolder, 'source/_patterns/**/*.scss'),  path.join('scss', 'patterns'));
  cpx.copySync(path.join(patternlabFolder, 'source/stylesheets/**/*.scss'),  path.join('scss', 'stylesheets'));
}

function fixCSSPaths(files) {
  files.forEach(file => {
    replaceSync(path.join(distFolder, file), /url\("\.\.\/fonts\//g, 'url("fonts/')
    replaceSync(path.join(distFolder, file), /\.\.\/\.\.\/images\/_dots\.svg/g, 'images/_dots.svg')
  })
}



function replaceSync(file, item, replacement) {
  const contents = fs.readFileSync(file, 'utf8');
  const newContents = contents.replace(item, replacement);

  if (newContents === contents) {
    return false;
  }

  fs.writeFileSync(file, newContents, 'utf8');
  return true;
};