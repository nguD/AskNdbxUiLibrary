import autoprefixer from 'gulp-autoprefixer';
import browserSync from './util/browser-sync';
import concat from 'gulp-concat';
import config from '../patternlab-config.json';
import gulpConfig from './gulp-config';
import gulp from 'gulp';
import gutil from 'gulp-util';
import path from 'path';
import sass from 'gulp-sass';
import sourcemaps from 'gulp-sourcemaps';
import rtlcss from 'gulp-rtlcss';
import rename from 'gulp-rename';
import gulpif from 'gulp-if';
import cleanCSS from 'gulp-clean-css';


const includePaths = [
  path.join(__dirname, '..', 'source', '_patterns'),
  path.join(__dirname, '..', 'node_modules', 'breakpoint-sass', 'stylesheets'),
  path.join(__dirname, '..', 'node_modules'),
];


const outputPath = './package-content'

const normalCSS = () => (
  gulp.src('stylesheets/styles.scss', { cwd: config.paths.source.root })
    .pipe(sass({ includePaths })
    .on('error', sass.logError))
    .pipe(autoprefixer())
    .pipe(concat('patternlab.css'))
    .pipe(gulp.dest(outputPath))
);


// keep quotes as there are issue with Angualr CLI/css-loader
// https://github.com/postcss/postcss-loader/issues/337
const minifiedCSS = () => (
  gulp.src('stylesheets/styles.scss', { cwd: config.paths.source.root })
    .pipe(sass({ includePaths })
    .on('error', sass.logError))
    .pipe(autoprefixer())
    .pipe(cleanCSS({ compatibility: { properties: { urlQuotes: true } } }))
    .pipe(concat('patternlab.min.css'))
    .pipe(gulp.dest(outputPath))
);


const transformRTL = () => {
  return gulp.src('patternlab.css', { cwd: outputPath })
    .pipe(rtlcss()) // Convert to RTL.
    .pipe(concat('patternlab-rtl.css'))
    .pipe(gulp.dest(outputPath))
};


const transformRTLMinified = () => {
  return gulp.src('patternlab.css', { cwd: outputPath })
    .pipe(rtlcss()) // Convert to RTL.
    .pipe(cleanCSS())
    .pipe(concat('patternlab-rtl.min.css'))
    .pipe(gulp.dest(outputPath))
};



const copyFonts = () => {
  return gulp.src('**/*', { cwd: config.paths.source.fonts })
    .pipe(gulp.dest(path.join(outputPath, 'fonts')));
};


const copyImages = () => {
  return gulp.src('_dots.svg', { cwd: config.paths.source.images })
    .pipe(gulp.dest(path.join(outputPath, 'images')));
};


gulp.task('package:sass', gulp.series(
  normalCSS,
  minifiedCSS,
  transformRTL,
  transformRTLMinified,
  copyFonts,
  copyImages,
));
