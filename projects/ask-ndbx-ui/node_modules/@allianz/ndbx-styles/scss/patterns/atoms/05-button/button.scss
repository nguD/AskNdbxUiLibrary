%button-focus {
  background-color: map-get($color-vibrant, vibrant-purple);
  border-color: map-get($color-vibrant, vibrant-purple);
  box-shadow: 0px 8px 20px 0px rgba(map-get($color-grey-tones, grey-tone-1), 0.5);
  color: map-get($color-basic, primary-white);
}

.c-button.c-button--block {

  @include media-breakpoint-up(medium) {
    width: 100%;
  }
}

.c-button {
  background-color: map-get($color-primary-action, primary-action-bright);
  border: 2px solid transparent;
  border-radius: 5px;
  color: map-get($color-basic, primary-white);
  cursor: pointer;
  font-size: $font-size-large;
  font-weight: $font-weight-semibold;
  letter-spacing: $letter-spacing-medium;
  line-height: $line-height-depending-small;
  margin: 0 0 20px;
  padding: 12px 28px;
  text-transform: uppercase;
  transition: background-color .2s ease, border-color .2s ease, color .2s ease, box-shadow .2s ease;
  user-select: none;
  width: auto;
  hyphens: none;

  &:hover {
    background-color: map-get($color-primary-action, primary-action-darker);
    border-color: map-get($color-primary-action, primary-action-darker);
    color: map-get($color-basic, primary-white);
  }

  &:active {
    background-color: map-get($color-basic, primary-brand);
    border-color: map-get($color-basic, primary-brand);
    box-shadow: none;
    color: map-get($color-basic, primary-white);
  }

  // :hover should not overwrite the disabled style
  // use doubling classes for more specifity here
  &.c-button:disabled {
    background-color: rgba(map-get($color-primary-action, primary-action-bright), 0.4);
    border-color: transparent;
    color: rgba(map-get($color-basic, primary-white), 0.4);
    cursor: not-allowed;
  }

  @include media-breakpoint-response(mobile) {
    display: block;
    width: 100%;
    padding: 17px 28px;
  }

  &:focus {
    outline: 2px solid transparent;

    // show a specific focus stil only when the keyboard is involved.
    [data-whatinput="keyboard"] & {
      @extend %button-focus; // sass-lint:disable-line no-extends
    }
  }
}

.c-button--large {
  border-width: 3px;
  font-size: $font-size-xxlarge;
  min-height: 70px;
  padding: 24px 47px;
  line-height: 26px;

  @include media-breakpoint-response(mobile) {
    padding: 24px 27px;
  }
}

.c-button--small {
  display: inline-block;
  font-size: $font-size-medium;
  min-height: 32px;
  padding: 5px 13px;
  text-transform: none;
  width: auto;
  line-height: 1.3;
}

.c-button.c-button--icon {
  &:before {
    display: inline-block;
    line-height: 1em;
    width: 1em;
    vertical-align: middle;
    margin-top: -0.2em;
    margin-right: 5px;
  }
}

.c-button__icon {
  pointer-events: none;
  transition: transform .2s ease-out;
}

// variation of button for having an icon on the right side
.c-button.c-button--icon-right {

  @extend .c-button--icon; // sass-lint:disable-line no-extends

  &:before {
    order: 1;
    margin: 0 0 0 10px;
  }
}

.c-button--negative {
  background-color: map-get($color-basic, primary-white);
  border-color: map-get($color-basic, primary-white);
  color: map-get($color-primary-action, primary-action-dark); //006192;

  &:hover {
    background-color: map-get($color-grey-tones, grey-tone-6);
    border-color: map-get($color-grey-tones, grey-tone-6);
    color:  map-get($color-primary-action, primary-action-dark); //006192
  }

  &:active {
    background-color: map-get($color-grey-tones, grey-tone-5);
    border-color: map-get($color-grey-tones, grey-tone-5);
    color:  map-get($color-primary-action, primary-action-dark); //006192
  }

  &.c-button--negative:disabled {
    background-color: rgba(map-get($color-basic, primary-white), 0.4);
    border-color: transparent;
    color: rgba(map-get($color-grey-tones, grey-tone-1), 0.3);
  }

  &:focus {
    [data-whatinput="keyboard"] & {
      box-shadow: 0px 8px 20px 0px rgba(map-get($color-basic, primary-black), 0.5);
    }
  }
}

.c-button--secondary {
  background-color: transparent;
  border-color: map-get($color-primary-action, primary-action-bright);
  color: map-get($color-primary-action, primary-action-dark);

  // :hover should not overwrite the disabled style
  // use doubling classes for more specifity here
  &.c-button--secondary:disabled {
    background-color: transparent;
    border-color: rgba(map-get($color-primary-action, primary-action-bright), 0.4);
    color:  rgba(map-get($color-primary-action, primary-action-dark), 0.4);
  }
}

.c-button--secondary.c-button--negative {
  color: map-get($color-basic, primary-white);
  border-color: map-get($color-basic, primary-white);

  &:hover {
    background-color: map-get($color-grey-tones, grey-tone-6);
    border-color: map-get($color-grey-tones, grey-tone-6);
    color:  map-get($color-primary-action, primary-action-dark); //006192
  }

  &:active {
    background-color: map-get($color-grey-tones, grey-tone-5);
    border-color: map-get($color-grey-tones, grey-tone-5);
    color:  map-get($color-primary-action, primary-action-dark); //006192
  }

  &:focus {
    border-color: transparent;
  }

  // :hover should not overwrite the disabled style
  // use doubling classes for more specifity here
  &.c-button--secondary:disabled {
    background-color: transparent;
    border-color: rgba(map-get($color-basic, primary-white), 0.4);
    color: rgba(map-get($color-basic, primary-white), 0.4);
  }
}

.c-button--direct-cta {
  background-color: map-get($color-direct, direct-green);
  border-color: transparent;

  &:focus {
    background-color: map-get($color-vibrant, vibrant-purple);
    border-color: transparent;
  }

  &:hover {
    background-color: map-get($color-direct, direct-green-dark);
    border-color: transparent;
  }

  &:active {
    background-color: map-get($color-direct, direct-green-darker);
    border-color: transparent;
  }

  // :hover should not overwrite the disabled style
  // use doubling classes for more specifity here
  &.c-button--direct-cta:disabled {
    background-color: rgba(map-get($color-direct,  direct-green), 0.4);
  }
}

.c-button--direct-emphasis {
  background-color: map-get($color-direct, direct-orange);
  border-color: transparent;

  &:focus {
    background-color: map-get($color-vibrant, vibrant-purple);
    border-color: transparent;
  }

  &:hover {
    background-color: map-get($color-direct, direct-orange-dark);
    border-color: transparent;
  }

  &:active {
    background-color: map-get($color-direct, direct-orange-darker);
    border-color: transparent;
  }

  // :hover should not overwrite the disabled style
  // use doubling classes for more specifity here
  &.c-button--direct-emphasis:disabled {
    background-color: rgba(map-get($color-direct, direct-orange), 0.4);
  }
}

//  molecules/12-user-login-info/user-login-info
.c-user-login-info__button {
  width: 100%;
  margin-bottom: 20px;
}

.c-button--no-margin {
  margin: 0;
}

.c-button {
  .c-button-overview--hover & {
    @extend .c-button:hover; // sass-lint:disable-line no-extends
  }

  .c-button-overview--pressed & {
    @extend .c-button:active; // sass-lint:disable-line no-extends
  }

  .c-button-overview--focused & {
    @extend .c-button:focus; // sass-lint:disable-line no-extends
    @extend %button-focus; // sass-lint:disable-line no-extends
  }
}

.c-button.c-button--direct-cta {
  .c-button-overview--hover & {
    @extend .c-button--direct-cta:hover; // sass-lint:disable-line no-extends
  }

  .c-button-overview--pressed & {
    @extend .c-button--direct-cta:active; // sass-lint:disable-line no-extends
  }
}

.c-button.c-button--direct-emphasis {
  .c-button-overview--hover & {
    @extend .c-button--direct-emphasis:hover; // sass-lint:disable-line no-extends
  }

  .c-button-overview--pressed & {
    @extend .c-button--direct-emphasis:active; // sass-lint:disable-line no-extends
  }
}

.c-button--negative {
  .c-button-overview--hover & {
    @extend .c-button--negative:hover; // sass-lint:disable-line no-extends
  }

  .c-button-overview--pressed & {
    @extend .c-button--negative:active; // sass-lint:disable-line no-extends
  }
}

.c-button--secondary.c-button--negative {
  .c-button-overview--focused & {
    border-color: transparent;
  }
}
