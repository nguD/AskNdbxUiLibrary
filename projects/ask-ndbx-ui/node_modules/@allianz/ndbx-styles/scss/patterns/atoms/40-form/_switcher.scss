.c-switcher {

  &--negative {
    .c-switcher__label {
      color: $c-white;
    }

    .c-switcher__input:checked + .c-switcher__label {
      &:before {
        background-color: rgba(255,255,255,0.35);
      }
      .c-switcher__icon {
        &:before {
          color: map-get($color-primary-action, primary-action-dark);
        }
      }
    }

  }

  &--right {
    .c-switcher__label {
      width: 100%;
    }

    .c-switcher__input + .c-switcher__label {
      padding-left: 0;

      &:before {
        left: auto;
        right: 0;
      }
      &:after {
        left: auto;
        right: .2rem;
      }
    }


    .c-switcher__input:checked + .c-switcher__label {
      &:after {
        transform: translate( -2.5rem, -50%);
        top: 50%;
      }
    }
  }
}

.c-switcher__input {
  opacity: 0;
  position: absolute;
}

.c-switcher__label {
  font-size: $font-size-xxlarge;
  line-height: $line-height-h6;
  @media screen and (-ms-high-contrast: active) {
    color: #FFFF00;
  }
  cursor: pointer;
}

.c-switcher__input + .c-switcher__label {
  display: flex;
  align-items: center;
  min-height: 2.1rem;
  padding-left: 5.6rem;
  position: relative;

  &:before {
    content: "";
    display: block;
    background-color: $c-grey-light;
    border-radius: 1.05rem;
    height: 21px;
    width: 46px;
    position: absolute;
    left: 0;
    // top: 0;
    transition: background-color .2s ease;
    top: 50%;
    transform: translateY(-50%);

    @media screen and (-ms-high-contrast: active) {
      background-color: $c-grey-light;
      color: #FFFF00;
    }
  }

  &:after {
    background-color: $c-white;
    border-radius: 50%;
    content: "";
    display: block;
    height: 1.7rem;
    left: .2rem;
    position: absolute;
    // top: .2rem;
    top: 50%;
    transform: translateY(-50%);

    transition: transform .1s ease;
    width: 1.7rem;
  }
}

.c-switcher__input:checked + .c-switcher__label {
  &:before {
    background-color: map-get($color-direct, direct-green);
    @media screen and (-ms-high-contrast: active) {
      background-color: #FFFF00;
      color: #FFFF00;
    }
  }

  &:after {
    transform: translate(2.5rem, -50%);
  }
}

.c-switcher__input:focus + .c-switcher__label {
  @media screen and (-ms-high-contrast: active) {
    color: map-get($color-high-contrast, "white");
  }
}

.c-switcher--big .c-switcher__input + .c-switcher__label {
  min-height: 3.4rem;
  padding: .4rem 0 0 7rem;

  &:before {
    border-radius: 1.7rem;
    height: 3.4rem;
    top: 50%;
    transform: translateY(-50%);
    width: 6rem;
  }

  &:after {
    height: 3rem;
    top: 50%;
    transform: translateY(-50%);
    width: 3rem;
  }
}

.c-switcher--big .c-switcher__input:checked + .c-switcher__label {

  &:after {
    transform: translate(2.6rem, -50%);
  }
}

.c-switcher__icon {
  position: absolute;
  top: 50%;
  z-index: 1;
  margin-top: -17px;

  &:before {
    color: $c-grey-light;
    display: inline-block;
    font-size: 2.4rem;
    line-height: $line-height-depending-small;
    text-align: center;
    width: 3.4rem;
  }
}

.c-switcher__icon--active {
  left: 2.6rem;
  opacity: 0;

  &:before {
    color: map-get($color-direct, direct-green);
  }
}

.c-switcher__icon--inactive {
  left: 0;
  transition: opacity .2s ease .1s;
}

.c-switcher__input:checked + .c-switcher__label .c-switcher__icon--inactive, .c-switcher__input:disabled {
  opacity: 0;
  transition: none;
}

.c-switcher__input:checked + .c-switcher__label .c-switcher__icon--active {
  opacity: 1;
  transition: opacity .2s ease .1s;
}

.c-switcher__input:disabled {
  cursor: not-allowed;
}

.c-switcher__input:disabled + .c-switcher__label {
  cursor: not-allowed;
}

&:focus {
  [data-whatinput="keyboard"] & {
    box-shadow: 0px 8px 20px 0px rgba(map-get($color-basic, primary-black), 0.5);
  }
}

[data-whatinput='keyboard'] {
  .c-switcher__input:focus:not([disabled]) + .c-switcher__label,
  .c-switcher__input:active:not([disabled]) + .c-switcher__label {
    &:before {
      background-color: map-get($color-vibrant, vibrant-purple);
      box-shadow: 0px 2px 5px $c-grey-shadow;
    }
    .c-switcher__icon {
      &:before {
        color: map-get($color-vibrant, vibrant-purple);
      }
    }
  }
}
