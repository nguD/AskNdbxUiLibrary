$floating-label-size-top: 20px;
$floating-label-size-bottom: 4px;

// Provide mixins to reuse those styles without relying on extend through placeholders, will be problematic when overriden.
@mixin input-focused {
  color: map-get($color-primary-action, primary-action-bright);
  background-color: $c-white;
  border-color: map-get($color-primary-action, primary-action-bright);
  outline: 2px solid transparent;
}

@mixin move-floating-label-up {
  text-overflow: ellipsis;
  font-size: $font-size-small;
  font-weight: $font-weight-semibold;
  transform: translate(0px, 0px);
}

@mixin label-focused {
  color: map-get($color-primary-action, primary-action-bright);

  // ensure error color is shown on the label even when focused
  .has-error & {
    color: $c-error;
  }

  .has-info & {
    color: $c-info;
  }

  .has-success & {
    color: $c-success;
  }
}

@mixin textinput {
  color: map-get($color-grey-tones, grey-tone-1);
  font-family: inherit;
  font-size: $font-size-xxlarge;
  font-weight: $font-weight-semibold;
  line-height: $line-height-h6;
  width: 100%;
  display: block;
  background-image: none;
  background-clip: padding-box;
  border: 0;
  border-bottom: 1px solid map-get($color-grey-tones, grey-tone-1);
  box-sizing: border-box;
  padding: 0;

  .has-error & {
    border-bottom: 1px solid $c-error;
  }

  .has-info & {
    border-bottom: 1px solid $c-info;
  }

  .has-success & {
    border-bottom: 1px solid $c-success;
  }
}

@mixin textinput-label {
  position: absolute;
  top: 0;
  display: block;
  width: 100%;
  overflow-x: hidden;
  white-space: nowrap;
  text-overflow: clip;
  font-size: $font-size-xxlarge;
  font-weight: $font-weight-light;
  line-height: $line-height-h6;
}

@mixin textinput-label-floating {
  cursor: text;  // for ie10
  pointer-events: none;

  transform: translate(0px, $floating-label-size-top);
  transition: transform 0.15s ease-out, font-size 0.15s ease-out;

  color: map-get($color-grey-tones, grey-tone-1);
}

.c-textinput__label  {
  @include textinput-label;

  .has-error & {
    color: $c-error;
  }

  .has-info & {
    color: $c-info;
  }

  .has-success & {
    color: $c-success;
  }
}

.c-textinput__label--optional  {
  //@include textinput-label;

  font-weight: $font-weight-light;

  .has-error & {
    color: $c-error;
  }

  .has-info & {
    color: $c-info;
  }

  .has-success & {
    color: $c-success;
  }
}

.c-textinput__label--bottom {
  color: $c-font-basic-secondary;
  margin-top: 10px;
  position: absolute;
  right: 0;

  .has-error & {
    color: $c-error;
  }

  .has-info & {
    color: $c-info;
  }

  .has-success & {
    color: $c-success;
  }
}

.c-textinput__more-info {
  position: absolute;
  right: 0px;
  font-size: $font-size-xxlarge;
  color: map-get($color-primary-action, primary-action-dark);
}

.c-textinput__field {
  @include textinput;

  &:focus {
    @include input-focused;
  }

  .has-error & {
    color: $c-error;
  }

  .has-info & {
    color: $c-info;
  }

  .has-success & {
    color: $c-success;
  }
}

// Floating Behaviour
.c-textinput__label--floating {
  @include textinput-label-floating;
}

.c-textinput__field--floating {
  // move floating label up when filled or focused
  &.is-filled,
  &:focus {
    &~ .c-textinput__label {
      @include move-floating-label-up;
    }
  }

  // apply focus color only when really focused
  &:focus ~ .c-textinput__label {
    @include label-focused;
  }

  &:focus ~ .c-textinput__label--bottom {
    @include label-focused;
  }
}
