$z-depth-modal: 100;

// Basics of this modal layout
// 1.We are creating base layer (c-modal) to work on. The base layer will removed from the document flow, fixed to the top left viewport and elevated above any other content with z-index.

// 2. The given backdrop (c-modal__backdrop) will ensure UI blocking. By using a dedicated element for it we can easily detect clicks on it and remove the element if necessary.

// 3. The layout helper ensures a clean flexbox stack to align the modal content later. We could gave used the parent (c-modal) to open the flex stack. But the backdrop would then be a flex child. As browsers are currently inconsistent about handling absolute position flex items we can just ignore it with a clean flex stack.

// 4. The actual content of the modal will be placed in the content layer(`.c-modal__container`) which is perfectly centered by the flexbox layout. Place anything you want in this.


.c-modal {
  &[v-cloak] {
    display: none;
  }

  align-items: center;
  display: flex;
  height: 100vh;
  justify-content: center;
  left: 0;
  position: fixed;
  top: 0;
  transition: opacity .3s ease;
  @include viewport-unit(width, 100vw);
  z-index: $z-depth-modal;

}

.c-modal__backdrop {
  background-color: rgba($c-black, 0.35);
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: -1;
}

.c-modal__container {
  border: 1px solid transparent; //a11y: show border in high contrast mode

  padding-top: 10px;
  background-color: $c-white;
  border-radius: 2px;
  box-shadow: 0 2px 8px rgba($c-black, .33);
  height: auto;
  position: relative;
  transition: transform .3s ease;

  // Intention: Don't spread over the full viewport when reaching the point
  @include media-breakpoint-down("small") {
    position: absolute;
    left: 0 !important;  //  Hack: stop dragability in tablet and mobile
    top: 30px !important;  //  Hack: stop dragability in tablet and mobile
    margin-left: 10px;
    margin-right: 10px;
    max-width: calc(100% - 20px);
  }
}

.c-modal__close,
.c-modal__drag {
  background-color: transparent;
  border: none;
  color: map-get($color-grey-tones, grey-tone-1);
  cursor: pointer;
  font-size: 2rem;
  position: absolute;
  right: 10px;
  top: 10px;

  &:focus {
    [data-whatinput="mouse"] & {
      outline: none;
    }

    color: $c-vibrant-purple;
  }
}

.c-modal-draggable_layer .c-modal__drag {
  visibility: visible;

  //  Hides dragable in mobile and tablet
  @include media-breakpoint-down("small") {
    visibility: hidden;
  }
}

.c-modal__drag {
  left: 10px;
  right: auto;
  visibility: hidden;
}

.c-modal__content {
  max-height: 75vh;
  overflow: hidden;
  overflow-y: auto;
}

.c-modal__container {
  @include media-breakpoint-response(mobile) {
    width: 100%;
  }
}

// Vue Transition Handling based on given vue transition id `vue-modal`
.vue-modal-transition-enter {
  opacity: 0;
}

.vue-modal-transition-leave-active {
  opacity: 0;
}

.vue-modal-transition-enter .c-modal__container,
.vue-modal-transition-leave-active .c-modal__container {
  transform: scale(1.2);
}
