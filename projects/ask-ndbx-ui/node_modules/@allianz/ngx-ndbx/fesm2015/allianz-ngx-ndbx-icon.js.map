{"version":3,"file":"allianz-ngx-ndbx-icon.js","sources":["ng://@allianz/ngx-ndbx/icon/icon.component.ts","ng://@allianz/ngx-ndbx/icon/icon.module.ts"],"sourcesContent":["import { ElementRef, Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/** Types of icon sizes */\nexport type IconSize = 'auto' | 's' | 'm' | 'l' |'xl';\n@Component({\n  selector: 'nx-icon',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./icon.component.scss'],\n  host: {\n    '[class.nx-icon--outline]': 'outline',\n    '[class.nx-icon--fill]': 'fill',\n    '[class.nx-icon--auto]': 'size === \"auto\"'\n  }\n})\n\nexport class NxIconComponent {\n\n  private _name: string;\n  /** Sets the name for specifing the icon.*/\n  @Input()\n  set name(name: string) {\n    this.el.nativeElement.classList.remove('nx-icon--' + this.name);\n    this._name = name;\n    this.el.nativeElement.classList.add('nx-icon--' + this.name);\n  }\n  get name(): string {\n    return this._name;\n  }\n  /** Whether the icon has an outline. */\n  @Input() outline: boolean = false;\n  /** Whether the icon is filled. */\n  @Input() fill: boolean = false;\n\n  private _size: IconSize = 'auto';\n\n  /** Specifies the size of the icon. */\n  @Input()\n  set size(value: IconSize) {\n    if (this._size === value) {\n      return;\n    }\n    this._size = value;\n    this.el.nativeElement.classList.add('nx-icon--' + this.size);\n  }\n\n  get size(): IconSize {\n    return this._size;\n  }\n\n  constructor(\n    /**@docs-private */\n    public el: ElementRef\n  ) { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NxIconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [ NxIconComponent ],\n  exports: [ NxIconComponent ]\n})\nexport class NxIconModule { }\n"],"names":[],"mappings":";;;;;;;AAAA,MAgBa,eAAe;;;;IAkC1B,YAES,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;;;;QAtBd,YAAO,GAAY,KAAK,CAAC;;;;QAEzB,SAAI,GAAY,KAAK,CAAC;QAEvB,UAAK,GAAa,MAAM,CAAC;KAmB5B;;;;;;IAjCL,IACI,IAAI,CAAC,IAAY;QACnB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9D;;;;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IASD,IACI,IAAI,CAAC,KAAe;QACtB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,OAAO;SACR;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9D;;;;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;YA5CF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE,2BAA2B;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAE/C,IAAI,EAAE;oBACJ,0BAA0B,EAAE,SAAS;oBACrC,uBAAuB,EAAE,MAAM;oBAC/B,uBAAuB,EAAE,iBAAiB;iBAC3C;;aACF;;;;YAdQ,UAAU;;;mBAoBhB,KAAK;sBAUL,KAAK;mBAEL,KAAK;mBAKL,KAAK;;;;;;;IAnBN,gCAAsB;;;;;IAYtB,kCAAkC;;;;;IAElC,+BAA+B;;;;;IAE/B,gCAAiC;;;;;IAkB/B,6BAAqB;;;;;;;;ACpDzB,MAOa,YAAY;;;YAJxB,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAE,eAAe,CAAE;gBACjC,OAAO,EAAE,CAAE,eAAe,CAAE;aAC7B;;;;;;;;;;;;;;;;;"}