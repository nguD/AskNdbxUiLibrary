{"version":3,"file":"allianz-ngx-ndbx-progress-stepper.js","sources":["ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step-item.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress-stepper.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step-group.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/single/single-step.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress/progress.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/buttons.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress-stepper.module.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NxMultiStepperDirection } from './multi-step.component';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-multi-step-item',\n  templateUrl: './multi-step-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./multi-step-item.component.scss'],\n  host: {\n    '[class.nx-multi-step-item--vertical]': 'direction === \"vertical\"',\n    '[class.is-selected]': 'selected',\n    '[class.is-completed]': 'completed',\n    '[class.is-active]': 'active',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-last]': 'last',\n    '[attr.aria-disabled]': 'disabled ? \"true\" : null'\n  }\n})\nexport class NxMultiStepItemComponent {\n  /** The direction of the step */\n  @Input()\n  get direction(): NxMultiStepperDirection {\n    return this._direction;\n  }\n  set direction(value: NxMultiStepperDirection) {\n    this._direction = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _direction: NxMultiStepperDirection = 'horizontal';\n\n  /** The label of the step. */\n  @Input() label: string;\n\n  /** Sets the selected step. */\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _selected: boolean;\n\n  /** Sets the active step. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _active: boolean;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _disabled: boolean;\n\n  /** Sets the last step. */\n  @Input()\n  get last(): boolean {\n    return this._last;\n  }\n  set last(value: boolean) {\n    this._last = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _last: boolean;\n\n  /** Sets the step completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completed;\n  }\n  set completed(value: boolean) {\n    this._completed = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _completed: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { DOCUMENT } from '@angular/common';\nimport { CdkStep, CdkStepper } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Inject,\n  Input,\n  QueryList,\n  SkipSelf,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { takeUntil, takeWhile } from 'rxjs/operators';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\n\n// tslint:disable:use-input-property-decorator\n\n// We need to reference steps in stepper and stepper in steps. To prevent circular depenedency errors\n// Provide both components in a single file. Otherwise we would have to introduce interface/abstract classes\n// shared between both implementations.\n\n@Component({\n  selector: 'nx-step',\n  templateUrl: 'progress-stepper.component.html',\n  exportAs: 'nxStep',\n  providers: [{provide: ErrorStateMatcher, useExisting: NxStepComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxStepComponent extends CdkStep implements ErrorStateMatcher, OnDestroy {\n  _destroyed: Subject<boolean> = new Subject();\n\n  constructor(\n      @Inject(forwardRef(() => NxProgressStepperDirective)) private stepper: NxProgressStepperDirective,\n      @SkipSelf() private _errorStateMatcher: ErrorStateMatcher) {\n    super(stepper);\n  }\n\n  set stepControl(value: any) {\n    this._stepControl = value;\n\n    // If a step control changes its state, the stepper needs to update.\n    if (this._stepControl) {\n      this._stepControl.statusChanges\n        .pipe(\n          takeUntil(this._destroyed),\n          takeWhile(() => this._stepControl === value)\n        )\n        .subscribe(() => {\n          this.stepper._stateChanged();\n        });\n    }\n  }\n  /** The top level abstract control of the step. */\n  get stepControl() {\n    return this._stepControl;\n  }\n  private _stepControl: any;\n\n  set interacted(value: boolean) {\n    this._interacted = value;\n\n    if (this.stepper) {\n      this.stepper._stateChanged();\n    }\n  }\n\n  /** Whether the user has seen the expanded step content or not. */\n  get interacted(): boolean {\n    return this._interacted;\n  }\n  private _interacted: boolean = false;\n\n  /** Custom error state matcher that checks for validity of the step form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Checks for the validity of a step form that is not submitted or touched,\n    // e.g when the user directly clicks the \"next\" button or directly on the step\n    const customErrorState = !!(control && control.invalid && this.interacted);\n    return originalErrorState || customErrorState;\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next(true);\n    this._destroyed.complete();\n  }\n}\n\n/** @docs-private */\n@Directive({\n  selector: '[nxProgressStepper]',\n  exportAs: 'nxProgressStepper',\n})\nexport class NxProgressStepperDirective extends CdkStepper implements AfterContentInit {\n  // Do not initialize with an empty QueryList or the hasNext() function produces\n  // wrong results on init\n  @ContentChildren(NxStepComponent, { descendants: true }) _steps: QueryList<NxStepComponent>;\n  _stepHeader: QueryList<null> = new QueryList();\n\n  /** Sets the label on the left side showing the current step label. Used for mobile viewports. */\n  @Input() currentStepLabel: string;\n\n  /** Sets the title to be rendered above the progress bar.\n   * @deletion-target 10.0.0\n   * @deprecated Use `nx-label` instead */\n  @Input() title: string;\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n    _dir: Directionality,\n    _elementRef: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n      super(_dir, _cdRef, _elementRef, _document);\n    }\n\n  ngAfterContentInit() {\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._stateChanged();\n      });\n\n    // If a step control changes its state, the stepper needs to update.\n    this._steps.filter(s => !!s.stepControl)\n      .forEach(step => {\n        step.stepControl.statusChanges\n          .pipe(takeUntil(step._destroyed))\n          .subscribe(() => {\n            this._stateChanged();\n          });\n      });\n\n    // we need to defer change detection that the nxStepperNext and NxStepperPrevious buttons\n    // can run change detection again, because they are initialized before the stepper content\n    Promise.resolve().then(() => {\n      this._cdRef.detectChanges();\n    });\n  }\n\n  /** @docs-private */\n  get hasPrevious() {\n    return (this.selectedIndex - 1) >= 0;\n  }\n\n  /** @docs-private */\n  get hasNext() {\n    return (this.selectedIndex + 1) < this.count;\n  }\n\n  /** @docs-private */\n  get count() {\n    return this._steps ? this._steps.length : 0;\n  }\n\n  /** @docs-private */\n  get currentStep(): NxStepComponent | null {\n    if (this.count === 0 || this.selectedIndex === -1) {\n      return null;\n    }\n\n    const steps = this._steps.toArray();\n    return steps[this.selectedIndex];\n  }\n\n  /** @docs-private */\n  get nextStep(): NxStepComponent | null {\n    if (this.selectedIndex + 1 >= this._steps.length) {\n      return null;\n    }\n\n    return this._steps.toArray()[this.selectedIndex + 1];\n  }\n\n  /** @docs-private */\n  get steps() {\n    return this._steps;\n  }\n\n  /** @docs-private */\n  get currentLabel() {\n    const step = this.currentStep;\n    const label = step.stepLabel || step.label;\n\n    return `${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}`;\n  }\n}\n","import { Component, Input, QueryList, ContentChildren, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NxStepComponent } from '../progress-stepper.component';\n\n@Component({\n  templateUrl: './multi-step-group.component.html',\n  selector: 'nx-step-group',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxMultiStepperGroupComponent {\n  /** @docs-private */\n  @ContentChildren(NxStepComponent, { descendants: true }) steps: QueryList<NxStepComponent>;\n\n  /** Sets the label of a group that is shown to the user. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n  private _label;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  AfterContentInit,\n  QueryList,\n  ContentChildren\n} from '@angular/core';\nimport { NxProgressStepperDirective, NxStepComponent } from './../progress-stepper.component';\nimport { NxMultiStepperGroupComponent } from './multi-step-group.component';\n\n/** Direction of the multi stepper */\nexport type NxMultiStepperDirection = 'vertical' | 'horizontal';\n\n@Component({\n  selector: 'nx-multi-stepper',\n  templateUrl: './multi-step.component.html',\n  styleUrls: [\n    '../progress-stepper.component.scss',\n    './multi-step.component.scss'\n  ],\n  providers: [\n    {\n      provide: NxProgressStepperDirective,\n      useExisting: NxMultiStepperComponent\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-multi-stepper--vertical]': 'direction === \"vertical\"'\n  }\n})\nexport class NxMultiStepperComponent extends NxProgressStepperDirective\n  implements AfterContentInit {\n\n  /** @docs-private */\n  @ContentChildren(NxMultiStepperGroupComponent, { descendants: true })\n  groups: QueryList<NxMultiStepperGroupComponent>;\n\n  /** Sets the direction of the multi stepper. */\n  @Input()\n  get direction(): NxMultiStepperDirection {\n    return this._direction;\n  }\n  set direction(value: NxMultiStepperDirection) {\n    this._direction = value;\n  }\n  private _direction: NxMultiStepperDirection = 'horizontal';\n\n  ngAfterContentInit() {\n    if (this.groups.length) {\n      this._steps.reset(this._stepsInGroups);\n    }\n\n    this.groups.changes.subscribe(() => {\n      this._steps.reset(this._stepsInGroups);\n    });\n  }\n\n  _stepDisabled(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    if (this.linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control\n          ? control.invalid || control.pending || !step.interacted\n          : !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private get _stepsInGroups(): NxStepComponent[] {\n    if (this.groups.length) {\n      return this.groups\n        .reduce((steps, group) => steps.concat(group.steps.toArray()), []);\n    }\n\n    return [];\n  }\n\n  _getIndex(step: NxStepComponent): number {\n    return this.steps.toArray().indexOf(step);\n  }\n\n  _isGroupActive(groupIndex: number) {\n    return this.selectedIndex >= this.getGroupItemIndex(groupIndex);\n  }\n\n  _isGroupDisabled(groupIndex: number) {\n    return this._stepDisabled(this.getGroupItemIndex(groupIndex));\n  }\n\n  private getGroupItemIndex(groupIndex: number): number {\n    let count = 0;\n    const groups = this.groups.toArray();\n\n    for (let i = 0; i < groupIndex; i++) {\n      count += groups[i].steps.length;\n    }\n\n    return count;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './../progress-stepper.component';\n\n@Component({\n  selector: 'nx-single-stepper',\n  templateUrl: './single-step.component.html',\n  styleUrls: ['../progress-stepper.component.scss', './single-step.component.scss'],\n  providers: [{provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxSingleStepperComponent extends NxProgressStepperDirective {\n  /** Sets the label on the right showing the next step. */\n  @Input('nextLabel')\n  get rightLabel(): string { return this._rightLabel; }\n  set rightLabel(v) { this._rightLabel = v; }\n\n  private _rightLabel: string = 'Next step:';\n\n  /** @docs-private */\n  get progress() {\n    return (this.selectedIndex + 1) / this.count;\n  }\n\n  /** @docs-private */\n  get currentLabel() {\n    const step = this.currentStep;\n    const label = step.stepLabel || step.label;\n\n    return `\n    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}\n    `;\n  }\n\n  /** @docs-private */\n  get nextLabel() {\n    const step = this.nextStep;\n\n    if (step) {\n      const label = step.stepLabel || step.label;\n\n      return `\n        ${this.rightLabel} ${label}\n      `;\n    }\n\n    return null;\n  }\n\n}\n","import { clamp } from '@allianz/ngx-ndbx/utils';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './../progress-stepper.component';\n\n@Component({\n  selector: 'nx-progress-stepper',\n  templateUrl: 'progress.component.html',\n  styleUrls: ['../progress-stepper.component.scss', './progress.component.scss'],\n  providers: [{provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxProgressStepperComponent extends NxProgressStepperDirective {\n\n  /** Sets the current value/progress of the progress bar. */\n  @Input()\n  get progress(): number { return this._progress; }\n  set progress(value: number) { this._progress = clamp(value || 0); }\n  private _progress: number = 0;\n}\n","import { CdkStepper, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport { ChangeDetectorRef, Directive, DoCheck } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './progress-stepper.component';\n\n// tslint:disable:use-input-property-decorator\n\n@Directive({\n  selector: 'button[nxStepperNext]',\n  host: {\n    '[type]': 'type',\n    '[disabled]': 'disabled'\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: NxProgressStepperDirective}]\n})\nexport class NxStepperNextDirective extends CdkStepperNext implements DoCheck {\n\n  /** @docs-private */\n  disabled = false;\n\n  constructor(_stepper: CdkStepper, private changeDetectorRef: ChangeDetectorRef) {\n    super(_stepper);\n  }\n\n  /**\n   * Implemented to prevent changed after checked error after stepper init.\n   * When the stepper initializes the directive is checked first before\n   * the stepper can check its content thus it doesn't know about it's children yet\n   * so _stepper.hasNext returns false and disables the buttons. In the same CD cycle\n   * after the stepper has checked its contents the button needs to be enabled resulting\n   * in the error.\n   */\n  ngDoCheck() {\n    const stepper = this._stepper as any as NxProgressStepperDirective;\n    if (this.disabled !== !stepper.hasNext) {\n      this.disabled = !stepper.hasNext;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n}\n\n@Directive({\n  selector: 'button[nxStepperPrevious]',\n  host: {\n    '[type]': 'type',\n    '[disabled]': '!stepper.hasPrevious'\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: NxProgressStepperDirective}]\n})\nexport class NxStepperPreviousDirective extends CdkStepperPrevious {\n  constructor(_stepper: CdkStepper) {\n    super(_stepper);\n  }\n\n  get stepper(): NxProgressStepperDirective {\n    return this._stepper as NxProgressStepperDirective;\n  }\n\n}\n","import { NxProgressbarModule } from '@allianz/ngx-ndbx/progressbar';\nimport { NxMultiStepItemComponent } from './multi/multi-step-item.component';\nimport { NxMultiStepperComponent } from './multi/multi-step.component';\nimport { NxSingleStepperComponent } from './single/single-step.component';\nimport { NxProgressStepperComponent } from './progress/progress.component';\nimport { NxStepperNextDirective, NxStepperPreviousDirective } from './buttons';\nimport { NxProgressStepperDirective, NxStepComponent } from './progress-stepper.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport { NxMultiStepperGroupComponent } from './multi/multi-step-group.component';\nimport { NxLabelModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkStepperModule,\n    NxIconModule,\n    NxProgressbarModule,\n    NxLabelModule\n  ],\n  declarations: [\n    NxProgressStepperDirective,\n    NxMultiStepperComponent,\n    NxStepComponent,\n    NxStepperNextDirective,\n    NxStepperPreviousDirective,\n    NxProgressStepperComponent,\n    NxSingleStepperComponent,\n    NxMultiStepItemComponent,\n    NxMultiStepperGroupComponent\n  ],\n  exports: [\n    NxProgressStepperDirective,\n    NxSingleStepperComponent,\n    NxProgressStepperComponent,\n    NxMultiStepperComponent,\n    NxStepComponent,\n    NxStepperNextDirective,\n    NxStepperPreviousDirective,\n    NxMultiStepperGroupComponent\n  ]\n})\nexport class NxProgressStepperModule {\n\n}\n"],"names":[],"mappings":"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"}