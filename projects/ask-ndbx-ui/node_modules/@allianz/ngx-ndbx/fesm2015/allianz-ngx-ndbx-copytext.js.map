{"version":3,"file":"allianz-ngx-ndbx-copytext.js","sources":["ng://@allianz/ngx-ndbx/copytext/copytext.component.ts","ng://@allianz/ngx-ndbx/copytext/copytext.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** A type that specifies the font size of a copytext. */\nexport type NxCopytextType = 'small' | 'medium' | 'normal' | 'large';\n\nconst DEFAULT_TYPE = 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'p[nxCopytext]',\n  styleUrls: ['copytext.component.scss'],\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-copy]': 'true',\n    '[class.nx-copy--small]': 'type === \"small\"',\n    '[class.nx-copy--medium]': 'type === \"medium\"',\n    '[class.nx-copy--normal]': 'type === \"normal\"',\n    '[class.nx-copy--large]': 'type === \"large\"',\n    '[class.nx-copy--negative]': 'negative',\n  }\n})\nexport class NxCopytextComponent {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxCopytextType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /**\n   * Sets the type and whether the negative set of styling should be used.\n   *\n   * You can combine the values of type NxCopytextType and 'negative'.\n   *\n   * Default type: 'normal'\n   */\n  @Input('nxCopytext')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    this._classNames = value;\n    const [type = null] = this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE];\n    this.type = type as NxCopytextType;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NxCopytextComponent } from './copytext.component';\n\n@NgModule({\n  declarations: [ NxCopytextComponent ],\n  exports: [ NxCopytextComponent ]\n})\nexport class NxCopytextModule { }\n"],"names":[],"mappings":";;;;;;;AAAA;MAKM,YAAY,GAAG,QAAQ;AAiB7B,MAAa,mBAAmB;IAfhC;;;;QAmBE,SAAI,GAAmB,YAAY,CAAC;;;;QAGpC,aAAQ,GAAY,KAAK,CAAC;KAyB3B;;;;;;;;;;IAhBC,IACI,UAAU,CAAC,KAAa;QAC1B,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;YAC9B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;cACnB,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3F,IAAI,CAAC,IAAI,sBAAG,IAAI,EAAkB,CAAC;QAEnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACtD;;;;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;YA7CF,SAAS,SAAC;;gBAET,QAAQ,EAAE,eAAe;gBAEzB,QAAQ,EAAE,2BAA2B;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,IAAI,EAAE;oBACJ,iBAAiB,EAAE,MAAM;oBACzB,wBAAwB,EAAE,kBAAkB;oBAC5C,yBAAyB,EAAE,mBAAmB;oBAC9C,yBAAyB,EAAE,mBAAmB;oBAC9C,wBAAwB,EAAE,kBAAkB;oBAC5C,2BAA2B,EAAE,UAAU;iBACxC;;aACF;;;yBAiBE,KAAK,SAAC,YAAY;;;;;;;IAfnB,0CAA4B;;;;;IAG5B,mCAAoC;;;;;IAGpC,uCAA0B;;;;;;;;AC7B5B,MAOa,gBAAgB;;;YAJ5B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAE,mBAAmB,CAAE;gBACrC,OAAO,EAAE,CAAE,mBAAmB,CAAE;aACjC;;;;;;;;;;;;;;;;;"}