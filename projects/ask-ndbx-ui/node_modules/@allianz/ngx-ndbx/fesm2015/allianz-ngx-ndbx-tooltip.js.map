{"version":3,"file":"allianz-ngx-ndbx-tooltip.js","sources":["ng://@allianz/ngx-ndbx/tooltip/tooltip-animations.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.component.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.directive.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.module.ts"],"sourcesContent":["import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by NxTooltip.\n * @docs-private\n */\nexport const nxTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0 })),\n    state('visible', style({ opacity: 1 })),\n    transition('* => visible', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 1 })\n    )),\n    transition('* => hidden', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 0 })\n    )),\n  ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { nxTooltipAnimations } from './tooltip-animations';\nimport { TooltipPosition } from './tooltip.directive';\n\ntype TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'nx-tooltip-component',\n  templateUrl: 'tooltip.component.html',\n  styleUrls: ['tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the aninxions are disabled or there is no web aninxions polyfill.\n    '[style.zoom]': 'visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class NxTooltipComponent implements OnDestroy {\n  /** The timeout ID of any current timer set to show the tooltip */\n  private _showTimeoutId: number = null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  private _hideTimeoutId: number = null;\n\n  /** Message to display in the tooltip */\n  private _message: string;\n\n  set message(value: string) {\n    this._message = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get message(): string {\n    return this._message;\n  }\n\n  private _visibility: TooltipVisibility = 'initial';\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  get visibility(): TooltipVisibility {\n    return this._visibility;\n  }\n\n  private _position: TooltipPosition = 'bottom';\n\n  /* @docs-private */\n  set position(value: TooltipPosition) {\n    this._position = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get position() {\n    return this._position;\n  }\n\n  _arrowStyle: { [key: string]: string } = {};\n\n  /* @docs-private */\n  set arrowStyle(value) {\n    this._arrowStyle = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get arrowStyle() {\n    return this._arrowStyle;\n  }\n\n  /* @docs-private */\n  get arrowClass(): string {\n    return `nx-tooltip__arrow--${this.position}`;\n  }\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    public elementRef: ElementRef) {}\n\n  /**\n   * Shows the tooltip with an aninxion originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = window.setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    if (this._hideTimeoutId) {\n      return;\n    }\n\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = window.setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this.visibility === 'visible';\n  }\n\n  /** Whether the tooltip started a delay to be shown/hidden */\n  isDelayed(): boolean {\n    return this._showTimeoutId !== null || this._hideTimeoutId !== null;\n  }\n\n  ngOnDestroy() {\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately.\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n}\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  ConnectionPositionPair,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ComponentRef,\n  OnInit,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { NxTooltipComponent } from './tooltip.component';\n\n/**\n * Possible positions of the tooltip.\n */\nexport type TooltipPosition = 'left' | 'right' | 'top' | 'bottom';\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @docs-private\n */\nexport const NX_TOOLTIP_PANEL_CLASS = 'nx-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getNxTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Default `nxTooltip` options that can be overridden. */\nexport interface NxTooltipDefaultOptions {\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  showDelay: number;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  hideDelay: number;\n\n  /** The default delay in ms before hiding the tooltip on touch devices */\n  touchendHideDelay: number;\n\n  /** The default position of the tooltip */\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `nxTooltip`. */\nexport const NX_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<NxTooltipDefaultOptions>('nx-tooltip-default-options', {\n      providedIn: 'root',\n      factory: NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\nexport function NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): NxTooltipDefaultOptions {\n  return {\n    showDelay: 200,\n    hideDelay: 200,\n    touchendHideDelay: 1500,\n  };\n}\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n\n  }\n];\n\n/**\n * Directive that attaches a tooltip to the host element.\n *\n */\n@Directive({\n  selector: '[nxTooltip]',\n  exportAs: 'nxTooltip',\n  host: {\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class NxTooltipDirective implements OnDestroy, OnInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: NxTooltipComponent | null;\n\n  private _portal: ComponentPortal<NxTooltipComponent>;\n  private _position: TooltipPosition = 'bottom';\n  private _disabled: boolean = false;\n  private _scrollStrategy: () => ScrollStrategy;\n  private _embeddedViewRef: ComponentRef<NxTooltipComponent>;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('nxTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance.position = this._position;\n          this._tooltipInstance.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('nxTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('nxTooltipShowDelay') showDelay: number = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('nxTooltipHideDelay') hideDelay: number = this._defaultOptions.hideDelay;\n\n  private _message: string = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('nxTooltip')\n  get message(): string {\n    return this._message;\n  }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(NX_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: NxTooltipDefaultOptions) {\n\n    this._scrollStrategy = this._overlay.scrollStrategies.reposition;\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!platform.IOS && !platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide());\n    } else {\n      // Fall back to showing on `touchstart`, otherwise\n      // there's no way for the user to trigger the tooltip on a touch device.\n      this._manualListeners.set('touchstart', () => this.show());\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n\n    if (_defaultOptions && _defaultOptions.position) {\n      this.position = _defaultOptions.position;\n    }\n  }\n\n  /**\n   * Setup styling-specific things\n   */\n  ngOnInit() {\n    const element = this._elementRef.nativeElement;\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\n    const userSelect = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA' ? '' : 'none';\n    elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = userSelect;\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this._elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance.isDelayed())) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(NxTooltipComponent, this._viewContainerRef);\n    this._embeddedViewRef = overlayRef.attach(this._portal);\n    this._tooltipInstance = this._embeddedViewRef.instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._updateTooltipMessage();\n    this._tooltipInstance.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef && !!this._overlayRef.hostElement) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withLockedPosition(true)\n                         .withFlexibleDimensions(false)\n                         .withPush(true);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n\n        const pair = change.connectionPair;\n\n        this._ngZone.run(() => this._positionArrow(pair));\n\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: NX_TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy(),\n      disposeOnNavigation: true\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {\n        ...origin,\n        ...overlay\n      },\n      ...fallbacks\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'left' -> 'right'`).\n   */\n  _getOrigin(): OriginConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position === 'top' || position === 'bottom') {\n      originPosition = {\n        originX: 'center',\n        originY: position\n      };\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return originPosition;\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position === 'top') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position === 'bottom') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return overlayPosition;\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef.updatePosition();\n        }\n      });\n    }\n  }\n\n  private _positionArrow(pair: ConnectionPositionPair) {\n    const parentElementPositionX = this._elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this._elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const overlayElementLeftOffset = this._overlayRef\n      .overlayElement\n      .getBoundingClientRect()\n      .left;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (overlayElementLeftOffset);\n\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this._tooltipInstance.arrowStyle = arrowStyle;\n    }\n\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'top';\n    }\n  }\n}\n","import {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport { NxTooltipComponent } from './tooltip.component';\nimport { NxTooltipDirective } from './tooltip.directive';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule\n  ],\n  exports: [NxTooltipDirective, NxTooltipComponent],\n  declarations: [NxTooltipDirective, NxTooltipComponent],\n  entryComponents: [NxTooltipComponent]\n})\nexport class NxTooltipModule {}\n"],"names":[],"mappings":"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"}