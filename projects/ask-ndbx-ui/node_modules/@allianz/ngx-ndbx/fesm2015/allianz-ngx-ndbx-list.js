import { Component, ChangeDetectionStrategy, Input, ViewChild, ViewContainerRef, NgModule } from '@angular/core';
import { NxIconModule, NxIconComponent } from '@allianz/ngx-ndbx/icon';

/**
 * @fileoverview added by tsickle
 * Generated from: list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DEFAULT_TYPE = 'normal';
class NxListComponent {
    constructor() {
        /**
         * \@docs-private
         */
        this.negative = false;
        /**
         * \@docs-private
         */
        this.orderedCircle = false;
    }
    /**
     * Sets the visual appearance of the list. You can combine different values:
     *
     * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based
     * on modifiers. Defaults to normal.
     *
     * negative: Display the list with a negative set of styling.
     *
     * ordered-circle: Display the list item numbers in a color filled circle.
     * @param {?} value
     * @return {?}
     */
    set classNames(value) {
        if (this._classNames === value) {
            return;
        }
        this._classNames = value;
        const [type = null] = this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE];
        this.type = (/** @type {?} */ (type));
        this.negative = !!this._classNames.match(/negative/);
        this.orderedCircle = !!this._classNames.match(/ordered-circle/);
    }
    /**
     * @return {?}
     */
    get classNames() {
        return this._classNames;
    }
}
NxListComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'ul[nxList], ol[nxList]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.nx-list--xsmall]': 'type === "xsmall"',
                    '[class.nx-list--small]': 'type === "small"',
                    '[class.nx-list--normal]': 'type === "normal"',
                    '[class.nx-list--negative]': 'negative',
                    '[class.nx-list--ordered-circle]': 'orderedCircle',
                },
                styles: [":host{color:#414141;color:var(--list-text-color,#414141);list-style:none;margin-bottom:32px;padding:0;counter-reset:list}:host(.nx-list--normal){font-size:18px;font-size:var(--paragraph-02-font-size,18px);line-height:24px;line-height:var(--paragraph-02-line-height,24px);font-weight:400;font-weight:var(--paragraph-02-font-weight,400);letter-spacing:.2px;letter-spacing:var(--paragraph-02-letter-spacing,.2px)}:host(.nx-list--small){font-size:16px;font-size:var(--paragraph-03-font-size,16px);line-height:24px;line-height:var(--paragraph-03-line-height,24px);font-weight:400;font-weight:var(--paragraph-03-font-weight,400);letter-spacing:0;letter-spacing:var(--paragraph-03-letter-spacing,0)}:host(.nx-list--xsmall){font-size:14px;font-size:var(--paragraph-04-font-size,14px);line-height:20px;line-height:var(--paragraph-04-line-height,20px);font-weight:600;font-weight:var(--paragraph-04-font-weight,600);letter-spacing:.2px;letter-spacing:var(--paragraph-04-letter-spacing,.2px)}:host(.nx-list--negative){color:#fff}:host(.nx-list--negative) ::ng-deep .nx-list__icon{color:#fff}:host ::ng-deep .nx-list__icon{position:absolute;left:0;font-size:24px;font-size:var(--list-icon-size,24px);color:#5a5360;color:var(--list-icon-color,#5a5360);top:50%;transform:translateY(-50%);line-height:24px;line-height:var(--list-icon-size,24px);height:24px;height:var(--list-icon-size,24px)}:host ::ng-deep li{margin-bottom:16px;padding-left:36px;padding-left:calc(var(--list-icon-size,24px) + 12px);position:relative}:host(ul) ::ng-deep>li:not([nxlisticon]):before{background-color:#5a5360;background-color:var(--list-icon-color,#5a5360);border-radius:50%;content:\"\";display:inline-block;height:8px;width:8px;margin-right:16px;position:absolute;margin-left:-24px;margin-left:calc(-1 * var(--list-icon-size,24px));margin-top:8px;margin-top:calc((var(--paragraph-02-line-height,24px) - 8px)/ 2);transform:translateX(-50%)}:host(ul.nx-list--small) ::ng-deep>li:not([nxlisticon]):before{margin-top:8px;margin-top:calc((var(--paragraph-03-line-height,24px) - 8px)/ 2)}:host(ul.nx-list--xsmall) ::ng-deep>li:not([nxlisticon]):before{margin-top:6px;margin-top:calc((var(--paragraph-04-line-height,20px) - 8px)/ 2)}:host(ol) ::ng-deep>li:not([nxlisticon]):before{counter-increment:list;content:counter(list);position:absolute;font-size:inherit;font-weight:700;display:inline-block;width:24px;width:var(--list-icon-size,24px);text-align:center;left:0}:host ::ng-deep li>::ng-deep ol,:host ::ng-deep li>::ng-deep ul{margin-bottom:16px;margin-top:16px}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):before{width:24px;width:var(--list-circle-size,24px);font-size:16px;font-size:var(--paragraph-03-font-size,16px);line-height:24px;line-height:var(--paragraph-03-line-height,24px);font-weight:400;font-weight:var(--paragraph-03-font-weight,400);letter-spacing:0;letter-spacing:var(--paragraph-03-letter-spacing,0);color:#fff;color:var(--list-circle-text-color,#fff);left:0;top:50%;transform:translateY(-50%);z-index:2}@media screen and (-ms-high-contrast:active){:host(ul) ::ng-deep>li:not([nxlisticon]):before{background-color:windowText}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):before{border:1px solid windowText;border-radius:50%}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):after{color:windowText}}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):after{border-radius:50%;width:24px;width:var(--list-circle-size,24px);height:24px;height:var(--list-circle-size,24px);background-color:#5a5360;background-color:var(--list-icon-color,#5a5360);left:0;top:50%;transform:translateY(-50%);content:'';position:absolute}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):after{background-color:#fff}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):before{color:#5a5360}:host(ul.nx-list--negative) ::ng-deep>li:not([nxlisticon]):before{background-color:#fff}"]
            }] }
];
NxListComponent.propDecorators = {
    classNames: [{ type: Input, args: ['nxList',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxListComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.type;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.negative;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.orderedCircle;
}

/**
 * @fileoverview added by tsickle
 * Generated from: list-icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NxListIconComponent {
}
NxListIconComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: 'li[nxListIcon]',
                template: `
    <span class="nx-list__icon">
      <nx-icon [name]='name'></nx-icon>
    </span>
    <ng-content></ng-content>`
            }] }
];
NxListIconComponent.propDecorators = {
    viewRefPrefix: [{ type: ViewChild, args: ['viewRefPrefix', { read: ViewContainerRef, static: false },] }],
    name: [{ type: Input, args: ['nxListIcon',] }]
};
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxListIconComponent.prototype.viewRefPrefix;
    /**
     * Sets the name of the icon to be displayed.
     * @type {?}
     */
    NxListIconComponent.prototype.name;
}

/**
 * @fileoverview added by tsickle
 * Generated from: list.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NxListModule {
}
NxListModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NxListComponent, NxListIconComponent],
                imports: [NxIconModule],
                exports: [NxListComponent, NxListIconComponent],
                bootstrap: [NxIconComponent]
            },] }
];

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: allianz-ngx-ndbx-list.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NxListComponent, NxListModule, NxListIconComponent as Éµa };
//# sourceMappingURL=allianz-ngx-ndbx-list.js.map
