import { mapClassNames } from '@allianz/ngx-ndbx/utils';
import { Component, ChangeDetectionStrategy, ElementRef, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * Generated from: utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * is udefined or empty?
 * @param {?} value
 * @return {?}
 */
function isEmpty(value) {
    return (value === undefined || value === '');
}
/**
 * @param {?} value
 * @return {?}
 */
function isEmptyArray(value) {
    return (value === undefined || value.length === 0);
}
/**
 * add space and return mapClassNames (css)
 * @param {?} aux
 * @param {?} map
 * @return {?}
 */
function addStyles(aux, map) {
    return ' ' + mapClassNames(aux, [], map);
}
/**
 * input='small,medium,large'
 *  map = MAPPING
 * @param {?} input
 * @param {?} map
 * @return {?}
 */
function addStylesFromDimensions(input, map) {
    /** @type {?} */
    const aux = processSplit(input);
    /** @type {?} */
    let output = '';
    if (aux.length >= 1 && aux.length <= 4) {
        /** @type {?} */
        const auxTiny = addStyles(aux[0], map).replace('-{tier}', '');
        /** @type {?} */
        let auxSmall = '';
        /** @type {?} */
        let auxMedium = '';
        /** @type {?} */
        let auxLarge = '';
        switch (aux.length) {
            case 1:
                auxSmall = addStyles(aux[0], map).replace('{tier}', 'small');
                auxMedium = addStyles(aux[0], map).replace('{tier}', 'medium');
                auxLarge = addStyles(aux[0], map).replace('{tier}', 'large');
                break;
            case 2:
                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');
                auxMedium = addStyles(aux[1], map).replace('{tier}', 'medium');
                auxLarge = addStyles(aux[1], map).replace('{tier}', 'large');
                break;
            case 3:
                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');
                auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');
                auxLarge = addStyles(aux[2], map).replace('{tier}', 'large');
                break;
            default:
                auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');
                auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');
                auxLarge = addStyles(aux[3], map).replace('{tier}', 'large');
                break;
        }
        output += ' ' + auxTiny.trim() + ' '
            + auxSmall.trim() + ' '
            + auxMedium.trim() + ' '
            + auxLarge.trim();
    }
    return output;
}
// Simple split
/**
 * @param {?} aux
 * @param {?=} char
 * @return {?}
 */
function processSplit(aux, char = ',') {
    return aux.split(char).map((/**
     * @param {?} item
     * @return {?}
     */
    item => item.trim()));
}
/**
 * @param {?} el
 * @param {?} aux
 * @return {?}
 */
function validateClassInElement(el, aux) {
    return el.hasAttribute(aux);
}

/**
 * @fileoverview added by tsickle
 * Generated from: col.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const MAPPING = {
    '': 'nx-grid__column-',
    'xs': 'nx-grid__column-',
    'sm': 'nx-grid__column-small-',
    'md': 'nx-grid__column-medium-',
    'lg': 'nx-grid__column-large-'
};
/** @type {?} */
const MAPPING_ALIGN_SELF = {
    'auto': 'nx-align-self-{tier}-auto',
    'start': 'nx-align-self-{tier}-start',
    'end': 'nx-align-self-{tier}-end',
    'center': 'nx-align-self-{tier}-center',
    'baseline': 'nx-align-self-{tier}-baseline',
    'stretch': 'nx-align-self-{tier}-stretch'
};
/** @type {?} */
const MAPPING_ORDER = {
    'first': 'nx-flex-{tier}-first',
    'last': 'nx-flex-{tier}-last',
    'unordered': 'nx-flex-{tier}-unordered',
};
/** @type {?} */
const OFFSET_MAPPING = {
    '': 'nx-grid--offset-',
    'xs': 'nx-grid--offset-',
    'sm': 'nx-grid--offset-small-',
    'md': 'nx-grid--offset-medium-',
    'lg': 'nx-grid--offset-large-'
};
/** @type {?} */
const MIN = 0;
/** @type {?} */
const MAX = 12;
class NxColComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this._classNames = [];
        /**
         * Number of columns used.
         *
         * Values: 1 - 12, default value: 12.
         */
        this.col = '';
        /**
         * The number of columns the column should be offset.
         *
         * Values: 1 - 12, default value: 12.
         */
        this.offset = '';
        /**
         * The alignment for a column inside the flexible container.
         */
        this.itemSelf = null;
        /**
         * Order of the column within the row.
         */
        this.order = null;
    }
    /**
     * @return {?}
     */
    get _columnClasses() {
        return this._classNames.join(' ').trim();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (validateClassInElement(this.el.nativeElement.parentElement, 'nxRow')) {
            // create an array of all classes to not worry about the spaces between the classes
            // in all logic functions all the time :)
            // gets joined in get _columnClasses()
            this._classNames = [
                ...this._getColClasses(),
                ...this._getOffsetClasses(),
                ...this._getAlignSelfClasses(),
                ...this._getOrderClasses(),
                // add custom classes set by the user and append it to the end
                ...this.el.nativeElement.className.split(' ')
            ];
        }
        else {
            this.generateError('Exception: NxColDirective. nxRow don\'t exist');
        }
    }
    /**
     * @private
     * @return {?}
     */
    _getColClasses() {
        /** @type {?} */
        const columnClasses = this._mapTiers(this.col, [], MAPPING, ['0']);
        if (columnClasses.length === 0) {
            this.generateError('Exception: NxColDirective. Empty nxCol attribute.');
        }
        return columnClasses;
    }
    /**
     * @private
     * @return {?}
     */
    _getAlignSelfClasses() {
        /** if itemSelf contains values */
        if (this.itemSelf) {
            /** Values: auto, start, end, center, baseline, stretch */
            return addStylesFromDimensions(this.itemSelf, MAPPING_ALIGN_SELF).split(' ');
        }
        return [];
    }
    /**
     * @private
     * @return {?}
     */
    _getOrderClasses() {
        /** if order-flex */
        if (this.order) {
            /** Values: first, last or unordered */
            return addStylesFromDimensions(this.order, MAPPING_ORDER).split(' ');
        }
        return [];
    }
    /**
     * @private
     * @return {?}
     */
    _getOffsetClasses() {
        return this._mapTiers(this.offset, [], OFFSET_MAPPING);
    }
    /**
     * @private
     * @param {?} input
     * @param {?=} defaults
     * @param {?=} mapping
     * @param {?=} exclude
     * @return {?}
     */
    _mapTiers(input, defaults, mapping, exclude) {
        /** @type {?} */
        const givenTiers = processSplit(input);
        /** @type {?} */
        let mappedClasses = [];
        if (input && !isEmptyArray(givenTiers) && this.checkNotAllowedValues(givenTiers, exclude)) {
            switch (givenTiers.length) {
                case 1:
                    this.validateInput(givenTiers[0]);
                    mappedClasses = [mapClassNames('', defaults, mapping) + givenTiers[0]];
                    break;
                case 2:
                    this.validateInput(givenTiers[0], givenTiers[1]);
                    mappedClasses = [
                        mapClassNames('xs', defaults, mapping) + givenTiers[0],
                        mapClassNames('sm', defaults, mapping) + givenTiers[1],
                        mapClassNames('md', defaults, mapping) + givenTiers[1],
                        mapClassNames('lg', defaults, mapping) + givenTiers[1]
                    ];
                    break;
                case 3:
                    this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2]);
                    mappedClasses = [
                        mapClassNames('xs', defaults, mapping) + givenTiers[0],
                        mapClassNames('sm', defaults, mapping) + givenTiers[1],
                        mapClassNames('md', defaults, mapping) + givenTiers[2],
                        mapClassNames('lg', defaults, mapping) + givenTiers[2]
                    ];
                    break;
                case 4:
                    this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2], givenTiers[3]);
                    mappedClasses = [
                        mapClassNames('xs', defaults, mapping) + givenTiers[0],
                        mapClassNames('sm', defaults, mapping) + givenTiers[1],
                        mapClassNames('md', defaults, mapping) + givenTiers[2],
                        mapClassNames('lg', defaults, mapping) + givenTiers[3]
                    ];
                    break;
                default:
                    mappedClasses = [mapClassNames('', defaults, mapping) + '12'];
                    break;
            }
        }
        return mappedClasses;
    }
    /**
     * \@docs-private
     * @param {?} min
     * @param {?} max
     * @param {?} value
     * @return {?}
     */
    isValueBetween(min, max, value) {
        try {
            /** @type {?} */
            const parsed = parseInt(value, 10);
            return (max >= parsed && min <= parsed);
        }
        catch (error) {
            this.generateError('Exception: NxColDirective. One argument is not number');
        }
    }
    /**
     * \@docs-private
     * @param {?} values
     * @param {?} excludes
     * @return {?}
     */
    checkNotAllowedValues(values, excludes) {
        if (!excludes) {
            return true;
        }
        /** @type {?} */
        const found = values.find((/**
         * @param {?} val
         * @return {?}
         */
        val => excludes.indexOf(val) > -1));
        if (found) {
            this.generateError(`Exception: NxColDirective. Incorrect parameter. ${found} is not allowed here`);
        }
        return !found;
    }
    /**
     * \@docs-private
     * @param {?} err
     * @return {?}
     */
    generateError(err) {
        throw new Error(err);
    }
    /**
     * \@docs-private
     * @param {...?} value
     * @return {?}
     */
    validateInput(...value) {
        value.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (!this.isValueBetween(MIN, MAX, element)) {
                this.generateError(`Exception: NxColDirective. Incorrect parameters, values must be between ${MIN} and ${MAX}`);
            }
        }));
    }
}
NxColComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: '[nxCol]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class]': '_columnClasses'
                },
                styles: [":host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){position:relative;width:100%;min-height:1px;padding-right:8px;padding-left:8px}:host(.nx-grid__column){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-12){flex:0 0 100%;max-width:100%}.pull-0{right:auto}.pull-1{right:8.33333%}.pull-2{right:16.66667%}.pull-3{right:25%}.pull-4{right:33.33333%}.pull-5{right:41.66667%}.pull-6{right:50%}.pull-7{right:58.33333%}.pull-8{right:66.66667%}.pull-9{right:75%}.pull-10{right:83.33333%}.pull-11{right:91.66667%}.pull-12{right:100%}.push-0{left:auto}.push-1{left:8.33333%}.push-2{left:16.66667%}.push-3{left:25%}.push-4{left:33.33333%}.push-5{left:41.66667%}.push-6{left:50%}.push-7{left:58.33333%}.push-8{left:66.66667%}.push-9{left:75%}.push-10{left:83.33333%}.push-11{left:91.66667%}.push-12{left:100%}:host(.nx-grid--offset-1){margin-left:8.33333%}:host(.nx-grid--offset-2){margin-left:16.66667%}:host(.nx-grid--offset-3){margin-left:25%}:host(.nx-grid--offset-4){margin-left:33.33333%}:host(.nx-grid--offset-5){margin-left:41.66667%}:host(.nx-grid--offset-6){margin-left:50%}:host(.nx-grid--offset-7){margin-left:58.33333%}:host(.nx-grid--offset-8){margin-left:66.66667%}:host(.nx-grid--offset-9){margin-left:75%}:host(.nx-grid--offset-10){margin-left:83.33333%}:host(.nx-grid--offset-11){margin-left:91.66667%}:host(.nx-flex-first){order:-1}:host(.nx-flex-last){order:1}:host(.nx-flex-unordered){order:0}:host(.nx-align-self-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-start){align-self:flex-start!important}:host(.nx-align-self-end){align-self:flex-end!important}:host(.nx-align-self-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-baseline){align-self:baseline!important}:host(.nx-align-self-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}@media (min-width:320px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:8px;padding-left:8px}:host(.nx-grid__column-small){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-small-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-small-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-small-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-small-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-small-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-small-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-small-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-small-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-small-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-small-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-small-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-small-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-small-12){flex:0 0 100%;max-width:100%}.pull-small-0{right:auto}.pull-small-1{right:8.33333%}.pull-small-2{right:16.66667%}.pull-small-3{right:25%}.pull-small-4{right:33.33333%}.pull-small-5{right:41.66667%}.pull-small-6{right:50%}.pull-small-7{right:58.33333%}.pull-small-8{right:66.66667%}.pull-small-9{right:75%}.pull-small-10{right:83.33333%}.pull-small-11{right:91.66667%}.pull-small-12{right:100%}.push-small-0{left:auto}.push-small-1{left:8.33333%}.push-small-2{left:16.66667%}.push-small-3{left:25%}.push-small-4{left:33.33333%}.push-small-5{left:41.66667%}.push-small-6{left:50%}.push-small-7{left:58.33333%}.push-small-8{left:66.66667%}.push-small-9{left:75%}.push-small-10{left:83.33333%}.push-small-11{left:91.66667%}.push-small-12{left:100%}:host(.nx-grid--offset-small-0){margin-left:0}:host(.nx-grid--offset-small-1){margin-left:8.33333%}:host(.nx-grid--offset-small-2){margin-left:16.66667%}:host(.nx-grid--offset-small-3){margin-left:25%}:host(.nx-grid--offset-small-4){margin-left:33.33333%}:host(.nx-grid--offset-small-5){margin-left:41.66667%}:host(.nx-grid--offset-small-6){margin-left:50%}:host(.nx-grid--offset-small-7){margin-left:58.33333%}:host(.nx-grid--offset-small-8){margin-left:66.66667%}:host(.nx-grid--offset-small-9){margin-left:75%}:host(.nx-grid--offset-small-10){margin-left:83.33333%}:host(.nx-grid--offset-small-11){margin-left:91.66667%}:host(.nx-flex-small-first){order:-1}:host(.nx-flex-small-last){order:1}:host(.nx-flex-small-unordered){order:0}:host(.nx-align-self-small-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-small-start){align-self:flex-start!important}:host(.nx-align-self-small-end){align-self:flex-end!important}:host(.nx-align-self-small-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-small-baseline){align-self:baseline!important}:host(.nx-align-self-small-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:704px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:16px;padding-left:16px}:host(.nx-grid__column-medium){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-medium-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-medium-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-medium-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-medium-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-medium-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-medium-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-medium-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-medium-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-medium-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-medium-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-medium-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-medium-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-medium-12){flex:0 0 100%;max-width:100%}.pull-medium-0{right:auto}.pull-medium-1{right:8.33333%}.pull-medium-2{right:16.66667%}.pull-medium-3{right:25%}.pull-medium-4{right:33.33333%}.pull-medium-5{right:41.66667%}.pull-medium-6{right:50%}.pull-medium-7{right:58.33333%}.pull-medium-8{right:66.66667%}.pull-medium-9{right:75%}.pull-medium-10{right:83.33333%}.pull-medium-11{right:91.66667%}.pull-medium-12{right:100%}.push-medium-0{left:auto}.push-medium-1{left:8.33333%}.push-medium-2{left:16.66667%}.push-medium-3{left:25%}.push-medium-4{left:33.33333%}.push-medium-5{left:41.66667%}.push-medium-6{left:50%}.push-medium-7{left:58.33333%}.push-medium-8{left:66.66667%}.push-medium-9{left:75%}.push-medium-10{left:83.33333%}.push-medium-11{left:91.66667%}.push-medium-12{left:100%}:host(.nx-grid--offset-medium-0){margin-left:0}:host(.nx-grid--offset-medium-1){margin-left:8.33333%}:host(.nx-grid--offset-medium-2){margin-left:16.66667%}:host(.nx-grid--offset-medium-3){margin-left:25%}:host(.nx-grid--offset-medium-4){margin-left:33.33333%}:host(.nx-grid--offset-medium-5){margin-left:41.66667%}:host(.nx-grid--offset-medium-6){margin-left:50%}:host(.nx-grid--offset-medium-7){margin-left:58.33333%}:host(.nx-grid--offset-medium-8){margin-left:66.66667%}:host(.nx-grid--offset-medium-9){margin-left:75%}:host(.nx-grid--offset-medium-10){margin-left:83.33333%}:host(.nx-grid--offset-medium-11){margin-left:91.66667%}:host(.nx-flex-medium-first){order:-1}:host(.nx-flex-medium-last){order:1}:host(.nx-flex-medium-unordered){order:0}:host(.nx-align-self-medium-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-medium-start){align-self:flex-start!important}:host(.nx-align-self-medium-end){align-self:flex-end!important}:host(.nx-align-self-medium-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-medium-baseline){align-self:baseline!important}:host(.nx-align-self-medium-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){:host(.nx-grid__column),:host(.nx-grid__column-1),:host(.nx-grid__column-10),:host(.nx-grid__column-11),:host(.nx-grid__column-12),:host(.nx-grid__column-2),:host(.nx-grid__column-3),:host(.nx-grid__column-4),:host(.nx-grid__column-5),:host(.nx-grid__column-6),:host(.nx-grid__column-7),:host(.nx-grid__column-8),:host(.nx-grid__column-9),:host(.nx-grid__column-fit),:host(.nx-grid__column-large),:host(.nx-grid__column-large-1),:host(.nx-grid__column-large-10),:host(.nx-grid__column-large-11),:host(.nx-grid__column-large-12),:host(.nx-grid__column-large-2),:host(.nx-grid__column-large-3),:host(.nx-grid__column-large-4),:host(.nx-grid__column-large-5),:host(.nx-grid__column-large-6),:host(.nx-grid__column-large-7),:host(.nx-grid__column-large-8),:host(.nx-grid__column-large-9),:host(.nx-grid__column-large-fit),:host(.nx-grid__column-medium),:host(.nx-grid__column-medium-1),:host(.nx-grid__column-medium-10),:host(.nx-grid__column-medium-11),:host(.nx-grid__column-medium-12),:host(.nx-grid__column-medium-2),:host(.nx-grid__column-medium-3),:host(.nx-grid__column-medium-4),:host(.nx-grid__column-medium-5),:host(.nx-grid__column-medium-6),:host(.nx-grid__column-medium-7),:host(.nx-grid__column-medium-8),:host(.nx-grid__column-medium-9),:host(.nx-grid__column-medium-fit),:host(.nx-grid__column-small),:host(.nx-grid__column-small-1),:host(.nx-grid__column-small-10),:host(.nx-grid__column-small-11),:host(.nx-grid__column-small-12),:host(.nx-grid__column-small-2),:host(.nx-grid__column-small-3),:host(.nx-grid__column-small-4),:host(.nx-grid__column-small-5),:host(.nx-grid__column-small-6),:host(.nx-grid__column-small-7),:host(.nx-grid__column-small-8),:host(.nx-grid__column-small-9),:host(.nx-grid__column-small-fit){padding-right:16px;padding-left:16px}:host(.nx-grid__column-large){flex-basis:0;flex-grow:1;max-width:100%}:host(.nx-grid__column-large-fit){flex:0 0 auto;width:auto}:host(.nx-grid__column-large-1){flex:0 0 8.33333%;max-width:8.33333%}:host(.nx-grid__column-large-2){flex:0 0 16.66667%;max-width:16.66667%}:host(.nx-grid__column-large-3){flex:0 0 25%;max-width:25%}:host(.nx-grid__column-large-4){flex:0 0 33.33333%;max-width:33.33333%}:host(.nx-grid__column-large-5){flex:0 0 41.66667%;max-width:41.66667%}:host(.nx-grid__column-large-6){flex:0 0 50%;max-width:50%}:host(.nx-grid__column-large-7){flex:0 0 58.33333%;max-width:58.33333%}:host(.nx-grid__column-large-8){flex:0 0 66.66667%;max-width:66.66667%}:host(.nx-grid__column-large-9){flex:0 0 75%;max-width:75%}:host(.nx-grid__column-large-10){flex:0 0 83.33333%;max-width:83.33333%}:host(.nx-grid__column-large-11){flex:0 0 91.66667%;max-width:91.66667%}:host(.nx-grid__column-large-12){flex:0 0 100%;max-width:100%}.pull-large-0{right:auto}.pull-large-1{right:8.33333%}.pull-large-2{right:16.66667%}.pull-large-3{right:25%}.pull-large-4{right:33.33333%}.pull-large-5{right:41.66667%}.pull-large-6{right:50%}.pull-large-7{right:58.33333%}.pull-large-8{right:66.66667%}.pull-large-9{right:75%}.pull-large-10{right:83.33333%}.pull-large-11{right:91.66667%}.pull-large-12{right:100%}.push-large-0{left:auto}.push-large-1{left:8.33333%}.push-large-2{left:16.66667%}.push-large-3{left:25%}.push-large-4{left:33.33333%}.push-large-5{left:41.66667%}.push-large-6{left:50%}.push-large-7{left:58.33333%}.push-large-8{left:66.66667%}.push-large-9{left:75%}.push-large-10{left:83.33333%}.push-large-11{left:91.66667%}.push-large-12{left:100%}:host(.nx-grid--offset-large-0){margin-left:0}:host(.nx-grid--offset-large-1){margin-left:8.33333%}:host(.nx-grid--offset-large-2){margin-left:16.66667%}:host(.nx-grid--offset-large-3){margin-left:25%}:host(.nx-grid--offset-large-4){margin-left:33.33333%}:host(.nx-grid--offset-large-5){margin-left:41.66667%}:host(.nx-grid--offset-large-6){margin-left:50%}:host(.nx-grid--offset-large-7){margin-left:58.33333%}:host(.nx-grid--offset-large-8){margin-left:66.66667%}:host(.nx-grid--offset-large-9){margin-left:75%}:host(.nx-grid--offset-large-10){margin-left:83.33333%}:host(.nx-grid--offset-large-11){margin-left:91.66667%}:host(.nx-flex-large-first){order:-1}:host(.nx-flex-large-last){order:1}:host(.nx-flex-large-unordered){order:0}:host(.nx-align-self-large-auto){-ms-grid-row-align:auto!important;align-self:auto!important}:host(.nx-align-self-large-start){align-self:flex-start!important}:host(.nx-align-self-large-end){align-self:flex-end!important}:host(.nx-align-self-large-center){-ms-grid-row-align:center!important;align-self:center!important}:host(.nx-align-self-large-baseline){align-self:baseline!important}:host(.nx-align-self-large-stretch){-ms-grid-row-align:stretch!important;align-self:stretch!important}}"]
            }] }
];
/** @nocollapse */
NxColComponent.ctorParameters = () => [
    { type: ElementRef }
];
NxColComponent.propDecorators = {
    col: [{ type: Input, args: ['nxCol',] }],
    offset: [{ type: Input, args: ['nxColOffset',] }],
    itemSelf: [{ type: Input, args: ['nxAlignSelf',] }],
    order: [{ type: Input, args: ['nxColOrder',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxColComponent.prototype._classNames;
    /**
     * Number of columns used.
     *
     * Values: 1 - 12, default value: 12.
     * @type {?}
     */
    NxColComponent.prototype.col;
    /**
     * The number of columns the column should be offset.
     *
     * Values: 1 - 12, default value: 12.
     * @type {?}
     */
    NxColComponent.prototype.offset;
    /**
     * The alignment for a column inside the flexible container.
     * @type {?}
     */
    NxColComponent.prototype.itemSelf;
    /**
     * Order of the column within the row.
     * @type {?}
     */
    NxColComponent.prototype.order;
    /**
     * @type {?}
     * @private
     */
    NxColComponent.prototype.el;
}

/**
 * @fileoverview added by tsickle
 * Generated from: layout.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NxLayoutComponent {
    constructor() {
        this._classNames = '';
        /**
         * \@docs-private
         */
        this.grid = true;
    }
    /**
     * Type of layout.
     *
     * Values: grid | grid nogutters | grid maxwidth. Default value: grid.
     * @param {?} value
     * @return {?}
     */
    set classNames(value) {
        if (this._classNames === value) {
            return;
        }
        this._classNames = value;
        this.grid = !!this._classNames.match(/grid/);
        this.noGutters = !!this._classNames.match(/nogutters/);
        this.maxWidth = !!this._classNames.match(/maxwidth/);
    }
    /**
     * @return {?}
     */
    get classNames() {
        return this._classNames;
    }
}
NxLayoutComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: '[nxLayout]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.nx-grid]': 'grid',
                    '[class.nx-grid--no-gutters]': 'noGutters',
                    '[class.nx-grid--max-width]': 'maxWidth'
                },
                styles: [":host(.nx-grid){position:relative;margin-left:auto;margin-right:auto;padding-right:16px;padding-left:16px}@media (min-width:704px){:host(.nx-grid){padding-right:32px;padding-left:32px}}:host(.nx-grid--no-gutters) ::ng-deep{padding-left:0;padding-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row{margin-left:0;margin-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row>[class*=nx-grid__column]{padding-left:0;padding-right:0}:host(.nx-grid--max-width){max-width:100%;width:1184px;width:var(--grid-max-width,1184px)}"]
            }] }
];
NxLayoutComponent.propDecorators = {
    classNames: [{ type: Input, args: ['nxLayout',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxLayoutComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.grid;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.noGutters;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.maxWidth;
}

/**
 * @fileoverview added by tsickle
 * Generated from: row.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const MAPPING_JUSTIFY = {
    'start': 'nx-justify-content-{tier}-start',
    'end': 'nx-justify-content-{tier}-end',
    'center': 'nx-justify-content-{tier}-center',
    'between': 'nx-justify-content-{tier}-between',
    'around': 'nx-justify-content-{tier}-around'
};
/** @type {?} */
const MAPPING_ALIGN_ITEMS = {
    'start': 'nx-align-items-{tier}-start',
    'end': 'nx-align-items-{tier}-end',
    'center': 'nx-align-items-{tier}-center',
    'baseline': 'nx-align-items-{tier}-baseline',
    'stretch': 'nx-align-items-{tier}-stretch'
};
/** @type {?} */
const MAPPING_ALIGN_CONTENT = {
    'start': 'nx-align-content-{tier}-start',
    'end': 'nx-align-content-{tier}-end',
    'center': 'nx-align-content-{tier}-center',
    'between': 'nx-align-content-{tier}-between',
    'around': 'nx-align-content-{tier}-around',
    'stretch': 'nx-align-content-{tier}-stretch'
};
/** @type {?} */
const MAPPING_WRAP = {
    'wrap': 'nx-flex-{tier}-wrap',
    'nowrap': 'nx-flex-{tier}-nowrap',
    'reverse': 'nx-flex-{tier}-wrap-reverse'
};
/** @type {?} */
const MAPPING_LAYOUT = {
    'row': 'nx-grid__row',
    'row-reverse': 'nx-grid__row-reverse'
};
class NxRowComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.ROW = 'row';
        this.ROW_RESERVE = 'row-reverse';
        this._classNames = '';
        /**
         * General
         */
        this._nxRow = this.ROW;
        /* Input row variables */
        /**
         * Align items on the main axis (horizontally).
         */
        this.nxRowJustify = null;
        /**
         * Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines.
         */
        this.nxRowAlignContent = null;
        /**
         * The default alignment for items inside the flexible container.
         */
        this.nxRowAlignItems = null;
        /**
         * How the flexible items should be wrapped.
         */
        this.nxRowWrap = null;
    }
    /**
     * Values: row | row-reverse
     *
     * Default value: row
     * @param {?} value
     * @return {?}
     */
    set nxRow(value) {
        if (value !== '') {
            this._nxRow = value;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this._nxRow === this.ROW ||
            this._nxRow === this.ROW_RESERVE) {
            /** add row style */
            this._classNames = mapClassNames(this._nxRow, [], MAPPING_LAYOUT);
            /** if not empty nxRowWrap, split input and add style */
            if (this.nxRowWrap) {
                /** possibles atributes: wrap,reverse,no-wrap */
                this._classNames += addStylesFromDimensions(this.nxRowWrap, MAPPING_WRAP);
            }
            /** if not empty nxRowJustify, add style */
            if (this.nxRowJustify) {
                /** possibles atributes: start,end,center,between,around */
                this._classNames += addStylesFromDimensions(this.nxRowJustify, MAPPING_JUSTIFY);
            }
            /** if not empty nxRowAlignContent, add style */
            if (this.nxRowAlignContent) {
                /** possibles atributes: start,end,center,between,stetch */
                this._classNames += addStylesFromDimensions(this.nxRowAlignContent, MAPPING_ALIGN_CONTENT);
            }
            /** if not empty nxRowAlignItems, add style */
            if (this.nxRowAlignItems) {
                /** possibles atributes: start,end,center,around,stetch */
                this._classNames += addStylesFromDimensions(this.nxRowAlignItems, MAPPING_ALIGN_ITEMS);
            }
            this._classNames += ' ' + this.el.nativeElement.className;
            this._classNames = this._classNames.trim();
        }
        else {
            throw new Error('nxRow is incorrect');
        }
    }
}
NxRowComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: '[nxRow]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class]': '_classNames'
                },
                styles: [":host{display:flex;flex-wrap:wrap;margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-row){flex-direction:row!important}:host(.nx-flex-column){flex-direction:column!important}:host(.nx-flex-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-wrap){flex-wrap:wrap!important}:host(.nx-flex-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-start){justify-content:flex-start!important}:host(.nx-justify-content-end){justify-content:flex-end!important}:host(.nx-justify-content-center){justify-content:center!important}:host(.nx-justify-content-between){justify-content:space-between!important}:host(.nx-justify-content-around){justify-content:space-around!important}:host(.nx-align-items-start){align-items:flex-start!important}:host(.nx-align-items-end){align-items:flex-end!important}:host(.nx-align-items-center){align-items:center!important}:host(.nx-align-items-baseline){align-items:baseline!important}:host(.nx-align-items-stretch){align-items:stretch!important}:host(.nx-align-content-start){align-content:flex-start!important}:host(.nx-align-content-end){align-content:flex-end!important}:host(.nx-align-content-center){align-content:center!important}:host(.nx-align-content-between){align-content:space-between!important}:host(.nx-align-content-around){align-content:space-around!important}:host(.nx-align-content-stretch){align-content:stretch!important}@media (min-width:320px){:host{margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-small-row){flex-direction:row!important}:host(.nx-flex-small-column){flex-direction:column!important}:host(.nx-flex-small-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-small-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-small-wrap){flex-wrap:wrap!important}:host(.nx-flex-small-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-small-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-small-start){justify-content:flex-start!important}:host(.nx-justify-content-small-end){justify-content:flex-end!important}:host(.nx-justify-content-small-center){justify-content:center!important}:host(.nx-justify-content-small-between){justify-content:space-between!important}:host(.nx-justify-content-small-around){justify-content:space-around!important}:host(.nx-align-items-small-start){align-items:flex-start!important}:host(.nx-align-items-small-end){align-items:flex-end!important}:host(.nx-align-items-small-center){align-items:center!important}:host(.nx-align-items-small-baseline){align-items:baseline!important}:host(.nx-align-items-small-stretch){align-items:stretch!important}:host(.nx-align-content-small-start){align-content:flex-start!important}:host(.nx-align-content-small-end){align-content:flex-end!important}:host(.nx-align-content-small-center){align-content:center!important}:host(.nx-align-content-small-between){align-content:space-between!important}:host(.nx-align-content-small-around){align-content:space-around!important}:host(.nx-align-content-small-stretch){align-content:stretch!important}}@media (min-width:704px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-medium-row){flex-direction:row!important}:host(.nx-flex-medium-column){flex-direction:column!important}:host(.nx-flex-medium-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-medium-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-medium-wrap){flex-wrap:wrap!important}:host(.nx-flex-medium-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-medium-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-medium-start){justify-content:flex-start!important}:host(.nx-justify-content-medium-end){justify-content:flex-end!important}:host(.nx-justify-content-medium-center){justify-content:center!important}:host(.nx-justify-content-medium-between){justify-content:space-between!important}:host(.nx-justify-content-medium-around){justify-content:space-around!important}:host(.nx-align-items-medium-start){align-items:flex-start!important}:host(.nx-align-items-medium-end){align-items:flex-end!important}:host(.nx-align-items-medium-center){align-items:center!important}:host(.nx-align-items-medium-baseline){align-items:baseline!important}:host(.nx-align-items-medium-stretch){align-items:stretch!important}:host(.nx-align-content-medium-start){align-content:flex-start!important}:host(.nx-align-content-medium-end){align-content:flex-end!important}:host(.nx-align-content-medium-center){align-content:center!important}:host(.nx-align-content-medium-between){align-content:space-between!important}:host(.nx-align-content-medium-around){align-content:space-around!important}:host(.nx-align-content-medium-stretch){align-content:stretch!important}}@media (min-width:992px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-large-row){flex-direction:row!important}:host(.nx-flex-large-column){flex-direction:column!important}:host(.nx-flex-large-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-large-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-large-wrap){flex-wrap:wrap!important}:host(.nx-flex-large-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-large-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-large-start){justify-content:flex-start!important}:host(.nx-justify-content-large-end){justify-content:flex-end!important}:host(.nx-justify-content-large-center){justify-content:center!important}:host(.nx-justify-content-large-between){justify-content:space-between!important}:host(.nx-justify-content-large-around){justify-content:space-around!important}:host(.nx-align-items-large-start){align-items:flex-start!important}:host(.nx-align-items-large-end){align-items:flex-end!important}:host(.nx-align-items-large-center){align-items:center!important}:host(.nx-align-items-large-baseline){align-items:baseline!important}:host(.nx-align-items-large-stretch){align-items:stretch!important}:host(.nx-align-content-large-start){align-content:flex-start!important}:host(.nx-align-content-large-end){align-content:flex-end!important}:host(.nx-align-content-large-center){align-content:center!important}:host(.nx-align-content-large-between){align-content:space-between!important}:host(.nx-align-content-large-around){align-content:space-around!important}:host(.nx-align-content-large-stretch){align-content:stretch!important}}"]
            }] }
];
/** @nocollapse */
NxRowComponent.ctorParameters = () => [
    { type: ElementRef }
];
NxRowComponent.propDecorators = {
    nxRow: [{ type: Input }],
    nxRowJustify: [{ type: Input, args: ['nxRowJustify',] }],
    nxRowAlignContent: [{ type: Input, args: ['nxRowAlignContent',] }],
    nxRowAlignItems: [{ type: Input, args: ['nxRowAlignItems',] }],
    nxRowWrap: [{ type: Input, args: ['nxRowWrap',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.ROW;
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.ROW_RESERVE;
    /** @type {?} */
    NxRowComponent.prototype._classNames;
    /**
     * General
     * @type {?}
     * @private
     */
    NxRowComponent.prototype._nxRow;
    /**
     * Align items on the main axis (horizontally).
     * @type {?}
     */
    NxRowComponent.prototype.nxRowJustify;
    /**
     * Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowAlignContent;
    /**
     * The default alignment for items inside the flexible container.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowAlignItems;
    /**
     * How the flexible items should be wrapped.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowWrap;
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.el;
}

/**
 * @fileoverview added by tsickle
 * Generated from: grid.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class NxGridModule {
}
NxGridModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    NxLayoutComponent,
                    NxRowComponent,
                    NxColComponent
                ],
                exports: [
                    NxLayoutComponent,
                    NxRowComponent,
                    NxColComponent
                ],
                imports: [
                    CommonModule
                ]
            },] }
];

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: allianz-ngx-ndbx-grid.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NxColComponent, NxGridModule, NxLayoutComponent, NxRowComponent };
//# sourceMappingURL=allianz-ngx-ndbx-grid.js.map
