{"version":3,"file":"allianz-ngx-ndbx-checkbox.js","sources":["ng://@allianz/ngx-ndbx/checkbox/checkbox.component.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.module.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  Self,\n  OnInit,\n  ContentChild,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl,\n  NgForm,\n  FormGroupDirective,\n  FormControl,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\nexport class NxCheckboxChangeEvent {\n  constructor(\n  /** The checked value of the checkbox. */\n  public checked: boolean,\n  /** The value of the checkbox. */\n  public value: string,\n  /** The component instance of the checkbox which emitted the change event. */\n  public checkbox: NxCheckboxComponent\n  ) {}\n}\n\n/** Size of the label. */\nexport type NxCheckboxLabelSize = 'small' | 'large';\n\n@Component({\n  selector: 'nx-checkbox-group',\n  templateUrl: 'checkbox-group.component.html',\n  styleUrls: ['checkbox-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox-group]': 'true',\n    '[class.nx-checkbox-group--negative]': 'negative',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-labelledby]': 'this._label?.id  || null',\n    '[attr.role]': '\"group\"',\n  }\n})\nexport class NxCheckboxGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(forwardRef(() => NxCheckboxComponent), {descendants: true})\n  _checkboxes: QueryList<NxCheckboxComponent>;\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {static: false})\n   _label: NxLabelComponent;\n\n  readonly _stateChanges = new Subject<void>();\n  @Output() selectionChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  private _id: string = `nx-checkbox-group-${nextId++}`;\n  /** Sets the Id of the checkbox group. */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string;\n  /** Sets the name of the checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Disables all checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._label) {\n      this._label.disabled = this._disabled;\n    }\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Set the negative styles for all the checkboxes inside the nx-checkbox-group */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _labelSize: NxCheckboxLabelSize;\n  /** Sets the label size of the checkboxes inside the group */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._stateChanges.next();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return this._labelSize;\n  }\n\n  /** Whether the nx-checkbox-group are required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  private _value: any;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.ngControl) {\n      if (!!this._value) {\n        this._updateSelectedCheckboxFromValue();\n      }\n\n      this._value = this._checkboxes\n                        .filter(checkbox => checkbox.checked)\n                        .map(cb => cb.value);\n    }\n\n    this._updateSelectedCheckboxFromValue();\n    this._checkboxes.changes.subscribe(() => {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      if (this.ngControl) {\n        this.ngControl.control.setValue(this._value);\n      }\n      this._updateSelectedCheckboxFromValue();\n    });\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    if (this._value !== value) {\n      this._value = value;\n      this._updateSelectedCheckboxFromValue();\n    }\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n\n  private _onTouched: () => any = () => {};\n\n  private _updateSelectedCheckboxFromValue(): void {\n    if (this._checkboxes && this._checkboxes.length && !!this._value && this._value.length) {\n      this._checkboxes.map(checkbox => {\n        checkbox.checked = this._value.indexOf(checkbox.value) !== -1;\n      });\n    }\n  }\n\n  /** @docs-private */\n  change(value) {\n    value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n    this._onChange(value);\n    if (this._onTouched) {\n      this._onTouched();\n    }\n    this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n  }\n}\n\n@Component({\n  selector: 'nx-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox]': 'true',\n    '[class.disabled]': 'disabled',\n    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n    '[class.nx-checkbox--label-small]': 'labelSize === \"small\"',\n    '[class.nx-checkbox--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.required]': 'required',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  }\n})\n\nexport class NxCheckboxComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  private _parentChangeSubscription: Subscription;\n  private _id: string = (nextId++).toString();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _labelSize: NxCheckboxLabelSize = 'small';\n  private _checked = false;\n  private _name: string = null;\n\n  /** @docs-private */\n  @ViewChild('checkboxLabelWrapper', { static: true }) _checkboxLabelWrapper: ElementRef;\n\n  /**\n   * Id of the checkbox.\n   *\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-checkbox-${this._id}`;\n  }\n\n  /** Name of the checkbox. */\n  @Input()\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name(): string {\n    return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n  }\n\n  /** Whether the checkbox is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n  }\n\n  /**\n   * Sets the label size of the checkbox. Default value: small\n   */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n  }\n\n  /**\n   * Whether the checkbox has negative styling.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n  }\n\n  /** Whether the checkbox is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      if (this._indeterminate) {\n        this._setIndeterminate(false);\n      }\n      this._setChecked(newValue);\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  private _indeterminate = false;\n\n  /** Whether the checkbox is indeterminated. */\n  @Input()\n  set indeterminate(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._indeterminate !== newValue) {\n      if (this._checked) {\n        this._setChecked(false);\n      }\n      this._setIndeterminate(newValue);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  /** Sets the value of the checkbox. Default value is the checked status. */\n  @Input()\n  get value(): string {\n    return this._value ? this._value : this.checked.toString();\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _value: string;\n\n  /** An event emitted when the indeterminate value has changed */\n  @Output()\n  indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits the boolean checked value of the changed checkbox.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits a NxCheckboxChangeEvent.\n   */\n  @Output()\n  checkboxChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  /** @docs-private */\n  get labelHasContent() {\n    return !!this._checkboxLabelWrapper.nativeElement.innerHTML.trim();\n  }\n\n  /** @docs-private\n   * Callback for when the content of the label has changed.\n   */\n  labelContentChanged() {\n    this._changeDetectorRef.detectChanges();\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() public checkboxGroup: NxCheckboxGroupComponent,\n              @Self() @Optional() public ngControl: NgControl,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n\n    const parent = this._parentFormGroup || this._parentForm;\n    let control = null;\n\n    if (this.checkboxGroup && this.checkboxGroup.ngControl) {\n      control = this.checkboxGroup.ngControl;\n    } else {\n      control = this.ngControl ? this.ngControl.control as FormControl : null;\n    }\n\n    return this._errorStateMatcher.isErrorState(control, parent);\n  }\n\n  ngOnInit() {\n    if (this.checkboxGroup) {\n      this.name = this.checkboxGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  private _setIndeterminate(value: boolean) {\n    this._indeterminate = value;\n    this.indeterminateChange.emit(this._indeterminate);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setChecked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Toggles the checked state of the checkbox. */\n  public toggle() {\n    this.checked = !this.checked;\n    this.onChangeCallback(this.checked);\n    if (this.checkboxGroup !== null) {\n      this.checkboxGroup.change(this);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  _onInputClick(event): void {\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this.checkedChange.emit(this._checked);\n      this.checkboxChange.emit(this._createChangeEvent(this._checked));\n    }\n  }\n\n  /**@docs-private */\n  private _createChangeEvent(checkedValue: boolean): NxCheckboxChangeEvent {\n    const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n    event.checked = checkedValue;\n    event.value = this.value;\n    event.checkbox = this;\n    return event;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxCheckboxComponent } from './checkbox.component';\nimport { NxCheckboxGroupComponent } from './checkbox.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxErrorModule, NxLabelModule } from '@allianz/ngx-ndbx/base';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n@NgModule({\n  declarations: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent\n  ],\n  exports: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n    NxLabelModule,\n    NxErrorModule\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    ObserversModule\n  ]\n})\nexport class NxCheckboxModule { }\n"],"names":[],"mappings":"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"}