(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@allianz/ngx-ndbx/utils')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/core', ['exports', '@allianz/ngx-ndbx/utils'], factory) :
    (global = global || self, factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].core = {}), global.allianz['ngx-ndbx'].utils));
}(this, (function (exports, utils) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: breakpoints.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var BREAKPOINT_MOBILE = '(max-width: 703px)';
    /** @type {?} */
    var BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';
    /** @type {?} */
    var BREAKPOINT_DESKTOP = '(min-width: 993px)';

    /**
     * @fileoverview added by tsickle
     * Generated from: mapped-styles.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MappedStyles = /** @class */ (function () {
        function MappedStyles(mapping, baseClasses, _elementRef, _renderer) {
            if (baseClasses === void 0) { baseClasses = []; }
            this.mapping = mapping;
            this.baseClasses = baseClasses;
            this._elementRef = _elementRef;
            this._renderer = _renderer;
            this.classNames = '';
        }
        Object.defineProperty(MappedStyles.prototype, "classNames", {
            get: /**
             * @return {?}
             */
            function () {
                return this._classNames;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (this._classNames === value) {
                    return;
                }
                utils.removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);
                this._classNamesSanitized = utils.mapClassNames(value, this.baseClasses, this.mapping);
                this._classNames = value;
                utils.appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);
            },
            enumerable: true,
            configurable: true
        });
        return MappedStyles;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        MappedStyles.prototype._classNames;
        /**
         * @type {?}
         * @private
         */
        MappedStyles.prototype._classNamesSanitized;
        /**
         * @type {?}
         * @private
         */
        MappedStyles.prototype.mapping;
        /**
         * @type {?}
         * @private
         */
        MappedStyles.prototype.baseClasses;
        /**
         * @type {?}
         * @protected
         */
        MappedStyles.prototype._elementRef;
        /**
         * @type {?}
         * @protected
         */
        MappedStyles.prototype._renderer;
    }

    exports.BREAKPOINT_DESKTOP = BREAKPOINT_DESKTOP;
    exports.BREAKPOINT_MOBILE = BREAKPOINT_MOBILE;
    exports.BREAKPOINT_TABLET = BREAKPOINT_TABLET;
    exports.MappedStyles = MappedStyles;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=allianz-ngx-ndbx-core.umd.js.map
