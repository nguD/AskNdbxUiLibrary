{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tree/data-source/flat-data-source.ts","ng://@allianz/ngx-ndbx/tree/data-source/flat-tree-control.ts","ng://@allianz/ngx-ndbx/tree/node.ts","ng://@allianz/ngx-ndbx/tree/outlet.ts","ng://@allianz/ngx-ndbx/tree/padding.ts","ng://@allianz/ngx-ndbx/tree/toggle.ts","ng://@allianz/ngx-ndbx/tree/tree.component.ts","ng://@allianz/ngx-ndbx/tree/tree.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","NxTreeFlattener","transformFunction","node","level","children","rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","expandable","isArray","getLevel","isExpandable","getChildren","_flattenNode","resultNodes","parentMap","_this","flatNode","childrenNodes","_flattenChildren","pipe","take","subscribe","forEach","child","index","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","nodes","treeControl","results","currentExpand","expand","isExpanded","NxTreeFlatDataSource","initialData","_super","_flattenedData","BehaviorSubject","_expandedData","_data","_treeFlattener","data","tslib_1.__extends","defineProperty","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","changed","merge","concat","__spread","map","disconnect","DataSource","NxFlatTreeControl","FlatTreeControl","NxTreeNodeComponent","Component","args","selector","exportAs","inputs","host","[attr.aria-expanded]","[attr.aria-level]","[attr.role]","class","[class.is-expanded]","providers","provide","CdkTreeNode","useExisting","template","NxTreeNodeDefDirective","Directive","CdkTreeNodeDef","Input","NxTreeNodeOutletDirective","viewContainer","ViewContainerRef","cssUnitPattern","NxTreeNodePaddingDirective","_treeNode","_tree","_renderer","_element","_dir","_destroyed","Subject","indentUnits","_offset","_indent","_setPadding","change","takeUntil","_level","coerceNumberProperty","indent","units","parts","split","ngOnDestroy","complete","_paddingIndent","nodeLevel","padding","paddingProp","setStyle","nativeElement","CdkTree","Renderer2","ElementRef","Directionality","decorators","type","Optional","NxTreeNodeToggleDirective","recursive","CdkTreeNodeToggle","NxTreeComponent","role","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ViewChild","static","NxTreeModule","NgModule","imports","CdkTreeModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {CollectionViewer, DataSource} from '@angular/cdk/collections';\nimport {BehaviorSubject, merge, Observable, of} from 'rxjs';\nimport {map, take} from 'rxjs/operators';\nimport { NxTreeNode, NxFlatTreeNode } from './tree-node';\nimport { NxFlatTreeControl } from './flat-tree-control';\nimport { TreeControl, FlatTreeControl } from '@angular/cdk/tree';\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T extends NxTreeNode` to flattened nodes of type `F extends NxFlatTreeNode`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F extends NxFlatTreeNode` with additional information.\n */\nclass NxTreeFlattener<T extends NxTreeNode, F extends NxFlatTreeNode> {\n  transformFunction(node: NxTreeNode, level: number): F {\n    const { children, ...rest } = node;\n    return {\n      ...rest,\n      level,\n      expandable: Array.isArray(children) && children.length > 0\n    } as F;\n  }\n\n  getLevel(node: F): number {\n    return node.level;\n  }\n\n  isExpandable(node: F): boolean {\n    return node.expandable;\n  }\n\n  getChildren(node: T): Observable<T[]> | T[] {\n    return node.children as T[];\n  }\n\n  _flattenNode(node: T, level: number,\n               resultNodes: F[], parentMap: boolean[]): F[] {\n    const flatNode = this.transformFunction(node, level);\n    resultNodes.push(flatNode);\n\n    if (this.isExpandable(flatNode)) {\n      const childrenNodes = this.getChildren(node);\n      if (Array.isArray(childrenNodes)) {\n        this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n      } else {\n        childrenNodes.pipe(take(1)).subscribe(children => {\n          this._flattenChildren(children, level, resultNodes, parentMap);\n        });\n      }\n    }\n    return resultNodes;\n  }\n\n  _flattenChildren(children: T[], level: number,\n                   resultNodes: F[], parentMap: boolean[]): void {\n    children.forEach((child, index) => {\n      const childParentMap: boolean[] = parentMap.slice();\n      childParentMap.push(index != children.length - 1); // tslint:disable-line\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\n    });\n  }\n\n  /**\n   * Flatten a list of node type T to flattened version of node F.\n   * Please note that type T may be nested, and the length of `structuredData` may be different\n   * from that of returned list `F[]`.\n   */\n  flattenNodes(structuredData: T[]): F[] {\n    const resultNodes: F[] = [];\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n    return resultNodes;\n  }\n\n  /**\n   * Expand flattened node with current expansion status.\n   * The returned list may have different length.\n   */\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n    const results: F[] = [];\n    const currentExpand: boolean[] = [];\n    currentExpand[0] = true;\n\n    nodes.forEach(node => {\n      let expand = true;\n      for (let i = 0; i <= this.getLevel(node); i++) {\n        expand = expand && currentExpand[i];\n      }\n      if (expand) {\n        results.push(node);\n      }\n      if (this.isExpandable(node)) {\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n      }\n    });\n    return results;\n  }\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `NxTree`.\n * The nested tree nodes of type `T extends NxTreeNode` are flattened through `NxTreeFlattener`, and converted\n * to type `F extends NxFlatTreeNode` for `NxTree` to consume.\n */\nexport class NxTreeFlatDataSource<T extends NxTreeNode, F extends NxFlatTreeNode> extends DataSource<F> {\n  _treeFlattener: NxTreeFlattener<T, F>;\n\n  _flattenedData = new BehaviorSubject<F[]>([]);\n\n  _expandedData = new BehaviorSubject<F[]>([]);\n\n  _data = new BehaviorSubject<T[]>([]);\n\n  get data() { return this._data.value; }\n  set data(value: T[]) {\n    this._data.next(value);\n    this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n    this.treeControl.dataNodes = this._flattenedData.value;\n  }\n\n  constructor(private treeControl: FlatTreeControl<F>,\n              initialData: T[] = []) {\n    super();\n    this._treeFlattener = new NxTreeFlattener();\n    this.data = initialData;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\n    const changes = [\n      collectionViewer.viewChange,\n      this.treeControl.expansionModel.changed,\n      this._flattenedData\n    ];\n    return merge(...changes).pipe(map(() => {\n      this._expandedData.next(\n        this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n      return this._expandedData.value;\n    }));\n  }\n\n  disconnect() {\n    // no op\n  }\n}\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { NxFlatTreeNode } from './tree-node';\n\n/** Flat tree control.\n  Able to expand/collapse a subtree recursively for flattened tree.\n*/\nexport class NxFlatTreeControl<F extends NxFlatTreeNode> extends FlatTreeControl<F> {\n  constructor() {\n    super(node => node.level, node => node.expandable);\n  }\n}\n","import {CdkTreeNode, CdkTreeNodeDef} from '@angular/cdk/tree';\nimport {\n  Component,\n  Directive,\n  Input,\n} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree node with NDBX design styles.\n */\n@Component({\n  selector: 'nx-tree-node',\n  exportAs: 'nxTreeNode',\n  inputs: ['disabled', 'tabIndex'],\n  host: {\n    '[attr.aria-expanded]': 'isExpanded',\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n    '[attr.role]': 'role',\n    'class': 'nx-tree__node',\n    '[class.is-expanded]': 'isExpanded'\n  },\n  providers: [{provide: CdkTreeNode, useExisting: NxTreeNodeComponent}],\n  templateUrl: './node.html'\n})\nexport class NxTreeNodeComponent<T> extends CdkTreeNode<T> {}\n\n/**\n * Wrapper for the CdkTree node definition with NDBX design styles.\n */\n@Directive({\n  selector: '[nxTreeNodeDef]',\n  inputs: [\n    'when: nxTreeNodeDefWhen'\n  ],\n  providers: [{provide: CdkTreeNodeDef, useExisting: NxTreeNodeDefDirective}]\n})\nexport class NxTreeNodeDefDirective<T> extends CdkTreeNodeDef<T> {\n  @Input('nxTreeNode') data: T;\n}\n","import {CdkTreeNodeOutlet} from '@angular/cdk/tree';\nimport {\n  Directive,\n  ViewContainerRef,\n} from '@angular/core';\n\n/**\n * Outlet for nested CdkNode. Put `[nxTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({\n  selector: '[nxTreeNodeOutlet]'\n})\nexport class NxTreeNodeOutletDirective implements CdkTreeNodeOutlet {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n","import {CdkTree, CdkTreeNode} from '@angular/cdk/tree';\nimport {Directive, Input, Renderer2, ElementRef, Optional, OnDestroy} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\n@Directive({\n  selector: '[nxTreeNodePadding]',\n})\nexport class NxTreeNodePaddingDirective<T> implements OnDestroy {\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** CSS units used for the indentation value. */\n  indentUnits = 'px';\n\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n  @Input('nxTreeNodePadding')\n  get level(): number { return this._level; }\n  set level(value: number) {\n    this._level = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _level: number;\n\n  /** The offset is added once on top of each indent. Default number is 0. */\n  @Input('nxTreeNodePaddingOffset')\n  get offset(): number { return this._offset; }\n  set offset(value: number) {\n    this._offset = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _offset: number = 0;\n\n  /**\n   * The indent for each level. Can be a number or a CSS string.\n   * Default number 24px from material design menu sub-menu spec.\n   */\n  @Input('nxTreeNodePaddingIndent')\n  get indent(): number | string { return this._indent; }\n  set indent(indent: number | string) {\n    let value = indent;\n    let units = 'px';\n\n    if (typeof indent === 'string') {\n      const parts = indent.split(cssUnitPattern);\n      value = parts[0];\n      units = parts[1] || units;\n    }\n\n    this.indentUnits = units;\n    this._indent = coerceNumberProperty(value);\n    this._setPadding();\n  }\n  _indent: number = 24;\n\n  constructor(private _treeNode: CdkTreeNode<T>,\n              private _tree: CdkTree<T>,\n              private _renderer: Renderer2,\n              private _element: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality) {\n    this._setPadding();\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding());\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n  _paddingIndent(): string|null {\n    const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n      ? this._tree.treeControl.getLevel(this._treeNode.data)\n      : null;\n    const level = this._level || nodeLevel;\n    return level ? `${level * this._indent + this._offset}${this.indentUnits}` : null;\n  }\n\n  _setPadding() {\n    const padding = this._paddingIndent();\n    const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n    this._renderer.setStyle(this._element.nativeElement, paddingProp, padding);\n  }\n}\n","import {CdkTreeNodeToggle} from '@angular/cdk/tree';\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Wrapper for the CdkTree's toggle with NDBX design styles.\n */\n@Directive({\n  selector: '[nxTreeNodeToggle]',\n  providers: [{provide: CdkTreeNodeToggle, useExisting: NxTreeNodeToggleDirective}]\n})\nexport class NxTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n  @Input('nxTreeNodeToggleRecursive') recursive: boolean = false;\n}\n","import { CdkTree } from '@angular/cdk/tree';\nimport { ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { NxTreeNodeOutletDirective } from './outlet';\n\n/**\n * Wrapper for the CdkTable with NDBX design styles.\n */\n@Component({\n  selector: 'nx-tree',\n  exportAs: 'nxTree',\n  template: `<ng-container nxTreeNodeOutlet></ng-container>`,\n  host: {\n    'class': 'nx-tree',\n    'role': 'tree',\n  },\n  styleUrls: ['tree.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: CdkTree, useExisting: NxTreeComponent }]\n})\nexport class NxTreeComponent<T> extends CdkTree<T> {\n  // Outlets within the tree's template where the dataNodes will be inserted.\n  @ViewChild(NxTreeNodeOutletDirective, { static: true }) _nodeOutlet: NxTreeNodeOutletDirective;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxTreeComponent } from './tree.component';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { NxTreeNodeComponent, NxTreeNodeDefDirective } from './node';\nimport { NxTreeNodePaddingDirective } from './padding';\nimport { NxTreeNodeToggleDirective } from './toggle';\nimport { NxTreeNodeOutletDirective } from './outlet';\n\n@NgModule({\n  imports: [ CdkTreeModule, CommonModule ],\n  declarations: [ NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective],\n  exports: [ NxTreeComponent, NxTreeNodeComponent, NxTreeNodeDefDirective,\n    NxTreeNodePaddingDirective, NxTreeNodeToggleDirective, NxTreeNodeOutletDirective]\n})\nexport class NxTreeModule { }\n"]}