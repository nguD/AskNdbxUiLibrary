{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/popover/popover-content.ts","ng://@allianz/ngx-ndbx/popover/popover.component.ts","ng://@allianz/ngx-ndbx/popover/popover-trigger.directive.ts","ng://@allianz/ngx-ndbx/popover/popover.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NxPopoverContentDirective","_template","this","Directive","args","selector","TemplateRef","NxPopoverComponent","closed","EventEmitter","closeButtonClick","Subject","showCloseButton","arrowStyle","prototype","ngOnDestroy","complete","emitCloseButtonClick","_onCloseKeyup","$event","keyCode","ENTER","SPACE","preventDefault","emitClosedEvent","emit","Object","defineProperty","direction","_onClick","event","stopPropagation","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","exportAs","ViewChild","static","ContentChild","Output","nextId","fallbacks","originX","originY","overlayX","overlayY","offsetX","offsetY","NxPopoverTriggerDirective","overlay","elementRef","viewContainerRef","eventManager","_focusTrapFactory","_focusMonitor","_ngZone","_platform","_document","_this","_destroyed","_show","_closeable","_elementFocusedBeforePopoverWasOpened","_manualListeners","Map","id","changeShow","_closeOnClickOutside","popoverInitialVisible","visibleChange","modal","trigger","scrollStrategy","_documentClickObservable","fromEvent","document","element","nativeElement","IOS","ANDROID","set","show","handleClick","forEach","listener","addEventListener","monitor","pipe","takeUntil","subscribe","origin","run","coerceBooleanProperty","openPopover","closePopover","popover","isCloseable","ngOnInit","ngAfterViewInit","addGlobalEventListener","isOpen","removeEventListener","clear","overlayRef","createOverlay","hasAttached","updatePosition","_positionStrategy","apply","open","close","toggle","_embeddedViewRef","attach","portal","rootNodes","_focusTrap","create","_autoFocusFirstTabbableElement","shouldReactOnClickOutside","waitForClose","focusInitialElementWhenReady","then","hasMovedFocus","focus","closeOnClickOutside","_returnFocusAfterPopover","detach","destroy","TemplatePortal","templateRef","overlayState","OverlayConfig","positionStrategy","getPosition","scrollStrategies","reposition","enable","hasBackdrop","subscribeToPositions","_subscribeToAttach","_subscribeToDetach","_subscribeToBackdropClick","position","positionChanges","change","pair","connectionPair","positionOverlay","positionArrow","destroyed","detectChanges","backdropClick","detachments","data","attachments","map","target","filter","contains","targetPosition","getBoundingClientRect","left","width","overlayElement","parentElement","offsetLeft","top","positions","flexibleConnectedTo","withPositions","arguments","length","concat","__spread","withDefaultOffsetX","withDefaultOffsetY","toFocus","host","(click)","aria-haspopup","[attr.aria-expanded]","[attr.aria-describedby]","Overlay","ElementRef","ViewContainerRef","EventManager","FocusTrapFactory","FocusMonitor","NgZone","Platform","Optional","type","Inject","DOCUMENT","Input","NxPopoverModule","NgModule","imports","CommonModule","OverlayModule","NxIconModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[nxPopoverContent]'\n})\nexport class NxPopoverContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'nx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./popover.component.scss'],\n  exportAs: 'nxPopover',\n})\nexport class NxPopoverComponent implements OnDestroy {\n  /** @docs-private */\n  @ViewChild(TemplateRef, { static: false })\n  templateRef: TemplateRef<any>;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(NxPopoverContentDirective, {static: false}) _lazyContent: NxPopoverContentDirective;\n\n  /** Event emitted when the popover is closed. */\n  @Output('nxClosed')\n  closed = new EventEmitter<void>();\n\n  /** @docs-private */\n  closeButtonClick = new Subject<void>();\n\n  /** @docs-private */\n  id: string;\n\n  /** @docs-private */\n  direction;\n\n  /** @docs-private */\n  showCloseButton: boolean = false;\n\n  /** @docs-private */\n  arrowStyle = {};\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    this.closed.complete();\n  }\n\n  // emit to notify the popover trigger directive that the close button was clicked\n  /** @docs-private */\n  emitCloseButtonClick() {\n    this.closeButtonClick.next();\n  }\n\n  /** @docs-private */\n  _onCloseKeyup($event) {\n    if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {\n      this.emitCloseButtonClick();\n    }\n    $event.preventDefault();\n  }\n\n  /** @docs-private */\n  emitClosedEvent() {\n    this.closed.emit();\n  }\n\n  /** @docs-private */\n  get classList(): string[] {\n    if (this.direction) {\n      return [`nx-popover--${this.direction}`];\n    }\n  }\n\n  /** Prevent the popover from closing when the user clicks on the popover content. */\n  _onClick(event) {\n    event.stopPropagation();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewContainerRef,\n  NgZone\n} from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { NxPopoverComponent } from './popover.component';\nimport { FocusTrapFactory, FocusTrap } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\n\nexport declare type PopoverDirection = 'left' | 'top' | 'right' | 'bottom';\nexport declare type PopoverTriggerType = 'click' | 'hover' | 'manual';\nexport declare type PopoverTriggerScrollStrategy = 'close' | 'reposition';\nlet nextId = 0;\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n    offsetX: 16,\n    offsetY: 0\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n    offsetX: -16,\n    offsetY: 0\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  }\n];\n\n@Directive({\n  selector: '[nxPopoverTriggerFor]',\n  exportAs: 'nxPopoverTrigger',\n  host: {\n    '(click)': 'handleClick()',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'isOpen',\n    '[attr.aria-describedby]': 'isOpen ? id : null'\n  }\n})\nexport class NxPopoverTriggerDirective implements AfterViewInit, OnDestroy, OnInit {\n  private overlayRef: OverlayRef;\n  private portal: TemplatePortal<any>;\n  private _destroyed = new Subject<void>();\n  private _show: boolean = false;\n  private _closeable: boolean = null;\n  private _positionStrategy: PositionStrategy;\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n  private _documentClickObservable: Observable<MouseEvent>;\n  /** The class that traps and manages focus within the popover. */\n  private _focusTrap: FocusTrap;\n  /** Element that was focused before the Popover was opened. Save this to restore upon close. */\n  private _elementFocusedBeforePopoverWasOpened: HTMLElement | null = null;\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n  /** @docs-private */\n  id = 'nx-popover-' + nextId++;\n\n  /** An event is emitted if the visibility status of the popover changes. */\n  @Output('nxPopoverShowChange')\n  changeShow: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether to show or hide the popover. */\n  @Input('nxPopoverShow')\n  set show(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._show !== value) {\n      this._show = value;\n      if (this._show) {\n        this.openPopover();\n      } else {\n        this.closePopover();\n      }\n    }\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  /** Whether to show a close button. By default a close icon is only shown for trigger type click. */\n  @Input('nxPopoverCloseable')\n  set closeable(value: boolean) {\n    this._closeable = coerceBooleanProperty(value);\n\n    if (this.popover) {\n      this.popover.showCloseButton = this.isCloseable();\n    }\n  }\n  get closeable(): boolean {\n    return this._closeable;\n  }\n\n  /** Whether the popover should be closed on click outside of the popover in the trigger modes 'manual' and 'click'. */\n  @Input()\n  set closeOnClickOutside(value: boolean) {\n    this._closeOnClickOutside = coerceBooleanProperty(value);\n  }\n  get closeOnClickOutside(): boolean {\n    return this._closeOnClickOutside;\n  }\n\n  private _closeOnClickOutside: boolean = true;\n\n  /** Links the trigger with the popover to open. */\n  @Input('nxPopoverTriggerFor')\n  popover: NxPopoverComponent;\n\n  /** Sets the desired direction to open the popover. E.g., right, left, bottom, top */\n  @Input('nxPopoverDirection')\n  direction: PopoverDirection = 'right';\n\n  /** Whether the popover will be opened automatically. */\n  @Input('nxPopoverInitialVisible')\n  popoverInitialVisible: boolean = false;\n\n  /** An event is emitted when the visibility of the popopver changes. */\n  @Input('nxPopoverVisibleChange')\n  visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether the popover opens in modal state. */\n  @Input('nxPopoverModal')\n  modal: boolean = false;\n\n  // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n  // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n  // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n  /** Sets the way to trigger the popover. Options are hover, click, manual */\n  @Input('nxPopoverTrigger')\n  trigger: PopoverTriggerType = 'click';\n\n  /** Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin. */\n  @Input('nxPopoverScrollStrategy')\n  scrollStrategy: PopoverTriggerScrollStrategy = 'close';\n\n  constructor(private overlay: Overlay,\n              private elementRef: ElementRef,\n              private viewContainerRef: ViewContainerRef,\n              private eventManager: EventManager,\n              private _focusTrapFactory: FocusTrapFactory,\n              private _focusMonitor: FocusMonitor,\n              private _ngZone: NgZone,\n              private _platform: Platform,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    this._documentClickObservable = fromEvent<MouseEvent>(document, 'click');\n    const element: HTMLElement = elementRef.nativeElement;\n    if (!this._platform.IOS && !this._platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => {\n          if (this.trigger === 'hover') {\n            this.show = true;\n          }\n        })\n        .set('mouseleave', () => {\n          if (this.trigger === 'hover') {\n            this.show = false;\n          }\n        })\n        .set('keydown', (event: KeyboardEvent) => {\n          switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n              this.handleClick();\n              break;\n            default:\n              return;\n          }\n        });\n    } else {\n      this._manualListeners.set('touchstart', () => {\n        if (this.trigger === 'hover') {\n          this.show = true;\n        }\n      });\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    this._focusMonitor.monitor(element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      if (origin === 'keyboard' && this.trigger === 'hover') {\n        this._ngZone.run(() => this.show = true);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.popover.showCloseButton = this.isCloseable();\n  }\n\n  ngAfterViewInit(): void {\n    this.popover.id = this.id;\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      if (this.isOpen) {\n        this.show = false;\n      }\n    });\n\n    this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.show = false;\n    });\n\n    if (this.popoverInitialVisible || this._show) {\n      this.show = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.show = false;\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this.elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get isOpen() {\n    return this.overlayRef && this.createOverlay().hasAttached();\n  }\n\n  /** @docs-private */\n  isCloseable() {\n    return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n  }\n\n  /** Update the popover with the given position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** @docs-private */\n  handleClick() {\n    if (this.trigger === 'click') {\n      this.show = !this.isOpen;\n    } else if (this.trigger === 'hover') {\n      this.show = true;\n    }\n  }\n\n  /** Open the popover instance. */\n  open(): void {\n    this.show = true;\n  }\n\n  /** Close the popover instance. */\n  close(): void {\n    this.show = false;\n  }\n\n  /** Toggle the popover instance. */\n  toggle(): void {\n    this.show = !this.show;\n  }\n\n  private openPopover(): void {\n    if (!this.createOverlay().hasAttached()) {\n      this._embeddedViewRef = this.createOverlay().attach(this.portal);\n\n      const element = this._embeddedViewRef.rootNodes[0] as HTMLElement;\n      this._focusTrap = this._focusTrapFactory.create(element);\n      this._elementFocusedBeforePopoverWasOpened = this.elementRef.nativeElement;\n      this._autoFocusFirstTabbableElement(element);\n\n      // attach a close click listener only if it makes sense (ignore it on hover e.g.)\n      if (this.shouldReactOnClickOutside()) {\n        this.waitForClose();\n      }\n    }\n  }\n\n  /**\n   * Autofocus the first tabbable element inside of the popover, if there is not a tabbable element,\n   * focus the popover instead.\n   */\n  private _autoFocusFirstTabbableElement(element: HTMLElement) {\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If we didn't find any focusable elements inside the popover, focus the\n      // container so the user can't tab into other elements behind it.\n      if (!hasMovedFocus) {\n        element.focus();\n      }\n    });\n  }\n\n  private shouldReactOnClickOutside() {\n    return (!this.modal && this.closeOnClickOutside);\n  }\n\n  // detaches the overlay\n  // we are listening to the detachments observable which will then emit the nxClosed event\n  // on the popover component\n  private closePopover(): void {\n    if (this.overlayRef) {\n      this._returnFocusAfterPopover();\n      this.overlayRef.detach();\n      this._embeddedViewRef = null;\n      this._focusTrap.destroy();\n    }\n  }\n\n  private createOverlay(): OverlayRef {\n    if (!this.overlayRef) {\n      this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n      const overlayState = new OverlayConfig();\n      overlayState.positionStrategy = this.getPosition();\n      this._positionStrategy = overlayState.positionStrategy;\n\n      if (this.scrollStrategy === 'reposition') {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n      } else {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n      }\n\n      overlayState.scrollStrategy.enable();\n\n      if (this.modal && this.trigger === 'click') {\n        overlayState.hasBackdrop = true;\n      }\n\n      this.overlayRef = this.overlay.create(overlayState);\n      this.subscribeToPositions(overlayState.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._subscribeToAttach();\n      this._subscribeToDetach();\n      if (this.modal) {\n        this._subscribeToBackdropClick();\n      }\n    }\n    return this.overlayRef;\n  }\n\n  private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      const pair = change.connectionPair;\n      this.positionOverlay(pair);\n      this.positionArrow(pair);\n\n      // These position changes arrive too late,\n      // We have to trigger the change detection manually\n      // as it's detached from any render hierarchy\n      // and only updated by the overlay when attached.\n      if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n        this._embeddedViewRef.detectChanges();\n      }\n    });\n  }\n\n  // for modal popovers close the popover on backdrop clicks\n  private _subscribeToBackdropClick() {\n    this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      this.show = false;\n    });\n  }\n\n  // Emit the nxClosed and the show status change event on the popover component when the overlay detaches\n  private _subscribeToDetach() {\n    this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(data => {\n      // This is an exception: when the popover is closed by a scrolling event,\n      // then only the detached method is called but the show state variable remains unchanged.\n      if (this.show) {\n        this.show = false;\n      }\n      this.changeShow.emit(this._show);\n      this.popover.emitClosedEvent();\n    });\n  }\n\n  private _subscribeToAttach() {\n    this.overlayRef.attachments().pipe(takeUntil(this._destroyed)).subscribe(data => {\n      this.changeShow.emit(this._show);\n    });\n  }\n\n  // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n  private waitForClose() {\n    return this._documentClickObservable\n      .pipe(\n        map(event => event.target),\n        filter(target => !this.elementRef.nativeElement.contains(target)),\n        takeUntil(this.popover.closed))\n      .subscribe(() => {\n        this.show = false;\n      });\n  }\n\n  private positionOverlay(pair: ConnectionPositionPair) {\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this.popover.direction = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this.popover.direction = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this.popover.direction = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this.popover.direction = 'top';\n    }\n  }\n\n  private positionArrow(pair: ConnectionPositionPair) {\n\n    const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n    const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this.popover.arrowStyle = arrowStyle;\n    }\n    if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n      this.popover.arrowStyle = { left: targetPosition + 'px' };\n    }\n\n    if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n      this.popover.arrowStyle = { top: '50%' };\n    }\n  }\n\n  private getPosition(): FlexibleConnectedPositionStrategy {\n    let positions: ConnectedPosition[];\n    let offsetX = 0;\n    let offsetY = 0;\n    if (this.direction === 'top') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'bottom',\n        originX: 'center',\n        originY: 'top'\n      }];\n      offsetX = 0;\n      offsetY = -20;\n    } else if (this.direction === 'right') {\n      positions = [{\n        overlayX: 'start',\n        overlayY: 'center',\n        originX: 'end',\n        originY: 'center'\n      }];\n      offsetX = 20;\n      offsetY = 0;\n    } else if (this.direction === 'bottom') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'top',\n        originX: 'center',\n        originY: 'bottom'\n      }];\n      offsetX = 0;\n      offsetY = 20;\n    } else if (this.direction === 'left') {\n      positions = [{\n        overlayX: 'end',\n        overlayY: 'center',\n        originX: 'start',\n        originY: 'center'\n      }];\n      offsetX = -20;\n      offsetY = 0;\n    }\n    return this.overlay.position().flexibleConnectedTo(this.elementRef)\n      .withPositions([...positions, ...fallbacks])\n      .withDefaultOffsetX(offsetX)\n      .withDefaultOffsetY(offsetY);\n  }\n\n  /** Returns the focus to the element focused before the Popover was open. */\n  private _returnFocusAfterPopover() {\n    const toFocus = this._elementFocusedBeforePopoverWasOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxPopoverTriggerDirective} from './popover-trigger.directive';\nimport {NxPopoverComponent} from './popover.component';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ],\n  exports: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ]\n})\nexport class NxPopoverModule {\n\n}\n"]}