{"version":3,"file":"allianz-ngx-ndbx-badge.umd.js","sources":["ng://@allianz/ngx-ndbx/badge/badge.component.ts","ng://@allianz/ngx-ndbx/badge/badge.module.ts"],"sourcesContent":["\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n/** Possible badge types. */\nexport type NxBadgeType = 'active' | 'positive' | 'critical' | 'negative';\n\n@Component({\n  selector: 'nx-badge',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./badge.component.scss'],\n  host: {\n    '[class.nx-badge--active]': 'type === \"active\"',\n    '[class.nx-badge--positive]': 'type === \"positive\"',\n    '[class.nx-badge--critical]': 'type === \"critical\"',\n    '[class.nx-badge--negative]': 'type === \"negative\"',\n    '[class.nx-badge--vibrant]': 'vibrant'\n  }\n})\nexport class NxBadgeComponent {\n  private _type: NxBadgeType;\n  private _vibrant: boolean = false;\n\n  constructor(private _changeDetRef: ChangeDetectorRef) { }\n\n  /** Sets the class name for the badge element.  */\n  @Input()\n  set type(value: NxBadgeType) {\n    if (value !== this._type) {\n      this._type = value;\n      this._changeDetRef.markForCheck();\n    }\n  }\n  get type(): NxBadgeType {\n    return this._type;\n  }\n  /** Change badge style to vibrant. */\n  @Input()\n  set vibrant(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (value !== this._vibrant) {\n      this._vibrant = newValue;\n      this._changeDetRef.markForCheck();\n    }\n  }\n  get vibrant(): boolean {\n    return this._vibrant;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxBadgeComponent } from './badge.component';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [NxBadgeComponent],\n  exports: [NxBadgeComponent]\n})\nexport class NxBadgeModule {}\n"],"names":["coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;;AACA;QAsBE,0BAAoB,aAAgC;YAAhC,kBAAa,GAAb,aAAa,CAAmB;YAF5C,aAAQ,GAAY,KAAK,CAAC;SAEuB;QAGzD,sBACI,kCAAI;;;;YAMR;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;;;;;;;YATD,UACS,KAAkB;gBACzB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;iBACnC;aACF;;;WAAA;QAKD,sBACI,qCAAO;;;;YAQX;gBACE,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;;;;;;;YAXD,UACY,KAAc;;oBAClB,QAAQ,GAAGA,8BAAqB,CAAC,KAAK,CAAC;gBAE7C,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE;oBAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;oBACzB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;iBACnC;aACF;;;WAAA;;oBAvCFC,cAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,2BAA2B;wBACrC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;wBAE/C,IAAI,EAAE;4BACJ,0BAA0B,EAAE,mBAAmB;4BAC/C,4BAA4B,EAAE,qBAAqB;4BACnD,4BAA4B,EAAE,qBAAqB;4BACnD,4BAA4B,EAAE,qBAAqB;4BACnD,2BAA2B,EAAE,SAAS;yBACvC;;qBACF;;;;oBAjBmDC,sBAAiB;;;2BAyBlEC,UAAK;8BAWLA,UAAK;;QAYR,uBAAC;KA3CD,IA2CC;;;;;;QA7BC,iCAA2B;;;;;QAC3B,oCAAkC;;;;;QAEtB,yCAAwC;;;;;;;;ACvBtD;QAIA;SAK6B;;oBAL5BC,aAAQ,SAAC;wBACR,OAAO,EAAE,CAAEC,mBAAY,CAAE;wBACzB,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;QAC2B,oBAAC;KAL7B;;;;;;;;;;;;;"}