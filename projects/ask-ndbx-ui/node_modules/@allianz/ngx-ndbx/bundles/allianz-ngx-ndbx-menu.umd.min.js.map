{"version":3,"sources":["ng://@allianz/ngx-ndbx/menu/menu.component.ts","ng://@allianz/ngx-ndbx/menu/menu-link.directive.ts","ng://@allianz/ngx-ndbx/menu/menu-item.directive.ts","ng://@allianz/ngx-ndbx/menu/menu-button.component.ts","ng://@allianz/ngx-ndbx/menu/menu.module.ts"],"names":["NxMenuComponent","_changeDetectorRef","this","_open","Object","defineProperty","prototype","value","open","coerceBooleanProperty","markForCheck","toggle","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","host","[attr.aria-expanded]","ChangeDetectorRef","Input","NxMenuLinkDirective","Directive","class","NxMenuItemDirective","_size","[class.nx-menu__item--small]","[class.nx-menu__item--large]","NxMenuButtonComponent","_expandable","_expanded","_type","[class.is-expanded]","[class.is-expandable]","[class.nx-menu-button--nested]","[class.nx-menu-button--root]","NxMenuButtonIconDirective","EXPORTED_MODULES","NxMenuModule","NgModule","imports","CommonModule","NxIconModule","declarations","exports"],"mappings":"6kBAOA,IAAAA,EAAA,WA+BE,SAAAA,EAAoBC,GAAAC,KAAAD,mBAAAA,EArBZC,KAAAC,OAAiB,EAsB3B,OAnBEC,OAAAC,eACIL,EAAAM,UAAA,OAAI,KAQR,WACE,OAAOJ,KAAKC,WAVd,SACSI,OACDC,EAAOC,EAAAA,sBAAsBF,GAC/BC,IAASN,KAAKC,QAChBD,KAAKC,MAAQK,EACbN,KAAKD,mBAAmBS,iDAS5BV,EAAAM,UAAAK,OAAA,WACET,KAAKM,MAAQN,KAAKM,0BA5BrBI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAA,qFAEAC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,KAAM,CACJC,uBAAwB,8pCAbiBC,EAAAA,mDAoB1CC,EAAAA,SAmBHtB,EAhCA,GCDA,IAAAuB,EAAA,WAAA,SAAAA,KAMkC,2BANjCC,EAAAA,UAASX,KAAA,CAAC,CACTC,SAAU,gBACVK,KAAM,CACJM,MAAO,qBAGuBF,EANlC,GCDAG,EAAA,WAAA,SAAAA,IAgBUxB,KAAAyB,MAAgB,IAC1B,OAREvB,OAAAC,eACIqB,EAAApB,UAAA,OAAI,KAGR,WACE,OAAOJ,KAAKyB,WALd,SACSpB,GACPL,KAAKyB,MAAkB,MAAVpB,EAAgB,IAAM,yDAXtCiB,EAAAA,UAASX,KAAA,CAAC,CACTC,SAAU,eACVK,KAAM,CACJM,MAAO,gBACPG,+BAAgC,eAChCC,+BAAgC,kDAIjCP,EAAAA,MAAKT,KAAA,CAAC,iBAQTa,EAjBA,GCGA,IAAAI,EAAA,WAwDE,SAAAA,EAAoB7B,GAAAC,KAAAD,mBAAAA,EAhCZC,KAAA6B,aAAuB,EAcvB7B,KAAA8B,WAAqB,EAgBrB9B,KAAA+B,MAA0B,OAGpC,OAzCE7B,OAAAC,eACIyB,EAAAxB,UAAA,aAAU,KAId,WACE,OAAOJ,KAAK6B,iBANd,SACexB,GACbL,KAAK6B,YAActB,EAAAA,sBAAsBF,GACzCL,KAAKD,mBAAmBS,gDAW1BN,OAAAC,eACIyB,EAAAxB,UAAA,WAAQ,KAIZ,WACE,OAAOJ,KAAK8B,eANd,SACazB,GACXL,KAAK8B,UAAYvB,EAAAA,sBAAsBF,GACvCL,KAAKD,mBAAmBS,gDAW1BN,OAAAC,eACIyB,EAAAxB,UAAA,OAAI,KAMR,WACE,OAAOJ,KAAK+B,WARd,SACS1B,GACO,SAAVA,GAA8B,WAAVA,IACtBL,KAAK+B,MAAQ1B,EACbL,KAAKD,mBAAmBS,qEAhD7BE,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,iBACVC,SAAA,sOAEAI,KAAM,CACJe,sBAAuB,yBACvBC,wBAAyB,aACzBC,iCAAkC,oBAClCC,+BAAgC,kBAChCZ,MAAS,kBAEXT,gBAAiBC,EAAAA,wBAAwBC,m1EApBSG,EAAAA,yDAwBjDC,EAAAA,wBAcAA,EAAAA,oBAcAA,EAAAA,MAAKT,KAAA,CAAC,aAaTiB,EAzDA,GA8DA,IAAAQ,EAAA,WAAA,SAAAA,KAMwC,2BANvCd,EAAAA,UAASX,KAAA,CAAC,CACTC,SAAU,qBACVK,KAAM,CACJM,MAAO,4BAG6Ba,EANxC,GC9DMC,EAAmB,CACvBvC,EACAuB,EACAG,EACAI,EACAQ,GAGFE,EAAA,WAAA,SAAAA,KAK4B,2BAL3BC,EAAAA,SAAQ5B,KAAA,CAAC,CACR6B,QAAS,CAAEC,EAAAA,aAAcC,EAAAA,cACzBC,aAAcN,EACdO,QAASP,MAEiBC,EAL5B","sourcesContent":["import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n  This components is a collapsible menu for usage on smaller devices.\n  Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].\n*/\n@Component({\n  selector: 'nx-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[attr.aria-expanded]': 'open'\n  }\n})\nexport class NxMenuComponent {\n  private _open: boolean = false;\n\n  /** Whether the menu is open or closed. */\n  @Input()\n  set open(value: boolean) {\n    const open = coerceBooleanProperty(value);\n    if (open !== this._open) {\n      this._open = open;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /* Toggles the open state of the menu. */\n  toggle() {\n    this.open = !this.open;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { Directive } from '@angular/core';\n\n/**\n  This is a menu link.\n  It adds styling to a link and is usually used within a [nxMenuItem].\n */\n@Directive({\n  selector: 'a[nxMenuLink]',\n  host: {\n    class: 'nx-menu__link'\n  }\n})\nexport class NxMenuLinkDirective {}\n","import { Directive, Input } from '@angular/core';\n\n/**\n  This is a menu item is used to structure content whithin a menu.\n */\n@Directive({\n  selector: '[nxMenuItem]',\n  host: {\n    class: 'nx-menu__item',\n    '[class.nx-menu__item--small]': 'size === \"s\"',\n    '[class.nx-menu__item--large]': 'size === \"l\"'\n  }\n})\nexport class NxMenuItemDirective {\n  @Input('nxMenuItem')\n  set size(value: string) {\n    this._size = value === 'l' ? 'l' : 's';\n  }\n  get size(): string {\n    return this._size;\n  }\n  private _size: string = 's';\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Attribute, Directive } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\nexport type NxMenuButtonType = 'root' | 'nested';\n\n/**\n * @title MenuButton\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxMenuButton]',\n  templateUrl: 'menu-button.component.html',\n  styleUrls: ['menu-button.component.scss'],\n  host: {\n    '[class.is-expanded]': 'expandable && expanded',\n    '[class.is-expandable]': 'expandable',\n    '[class.nx-menu-button--nested]': 'type === \"nested\"',\n    '[class.nx-menu-button--root]': 'type === \"root\"',\n    'class': 'nx-menu-button'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxMenuButtonComponent {\n  /** Whether this menu button is expandable or not. Will add a caret icon. */\n  @Input()\n  set expandable(value: boolean) {\n    this._expandable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get expandable(): boolean {\n    return this._expandable;\n  }\n  private _expandable: boolean = false;\n\n  /**\n   * Whether this menu button is expanded or not.\n   * Only works in combination with the `expandable` option set to `true`.\n   */\n  @Input()\n  set expanded(value: boolean) {\n    this._expanded = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get expanded() {\n    return this._expanded;\n  }\n  private _expanded: boolean = false;\n\n  /**\n   * The type of this menu button.\n   * Can be `primary` or `secondary`, defaults to `primary`.\n   */\n  @Input('nxType')\n  set type(value: NxMenuButtonType) {\n    if (value === 'root' || value === 'nested') {\n      this._type = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get type(): NxMenuButtonType {\n    return this._type;\n  }\n  private _type: NxMenuButtonType = 'root';\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/**\n * Icon that can be added to a [nxButton].\n */\n@Directive({\n  selector: '[nxMenuButtonIcon]',\n  host: {\n    class: 'nx-menu-button__icon'\n  }\n})\nexport class NxMenuButtonIconDirective {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxMenuComponent } from './menu.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMenuLinkDirective } from './menu-link.directive';\nimport { NxMenuItemDirective } from './menu-item.directive';\nimport { NxMenuButtonComponent, NxMenuButtonIconDirective } from './menu-button.component';\n\nconst EXPORTED_MODULES = [\n  NxMenuComponent,\n  NxMenuLinkDirective,\n  NxMenuItemDirective,\n  NxMenuButtonComponent,\n  NxMenuButtonIconDirective,\n];\n\n@NgModule({\n  imports: [ CommonModule, NxIconModule ],\n  declarations: EXPORTED_MODULES,\n  exports: EXPORTED_MODULES\n})\nexport class NxMenuModule { }\n"]}