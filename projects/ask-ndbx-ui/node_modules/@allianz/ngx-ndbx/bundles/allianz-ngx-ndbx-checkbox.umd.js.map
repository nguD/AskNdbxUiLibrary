{"version":3,"file":"allianz-ngx-ndbx-checkbox.umd.js","sources":["ng://@allianz/ngx-ndbx/checkbox/checkbox.component.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.module.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  Self,\n  OnInit,\n  ContentChild,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl,\n  NgForm,\n  FormGroupDirective,\n  FormControl,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\nexport class NxCheckboxChangeEvent {\n  constructor(\n  /** The checked value of the checkbox. */\n  public checked: boolean,\n  /** The value of the checkbox. */\n  public value: string,\n  /** The component instance of the checkbox which emitted the change event. */\n  public checkbox: NxCheckboxComponent\n  ) {}\n}\n\n/** Size of the label. */\nexport type NxCheckboxLabelSize = 'small' | 'large';\n\n@Component({\n  selector: 'nx-checkbox-group',\n  templateUrl: 'checkbox-group.component.html',\n  styleUrls: ['checkbox-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox-group]': 'true',\n    '[class.nx-checkbox-group--negative]': 'negative',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-labelledby]': 'this._label?.id  || null',\n    '[attr.role]': '\"group\"',\n  }\n})\nexport class NxCheckboxGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(forwardRef(() => NxCheckboxComponent), {descendants: true})\n  _checkboxes: QueryList<NxCheckboxComponent>;\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {static: false})\n   _label: NxLabelComponent;\n\n  readonly _stateChanges = new Subject<void>();\n  @Output() selectionChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  private _id: string = `nx-checkbox-group-${nextId++}`;\n  /** Sets the Id of the checkbox group. */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string;\n  /** Sets the name of the checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Disables all checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._label) {\n      this._label.disabled = this._disabled;\n    }\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Set the negative styles for all the checkboxes inside the nx-checkbox-group */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _labelSize: NxCheckboxLabelSize;\n  /** Sets the label size of the checkboxes inside the group */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._stateChanges.next();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return this._labelSize;\n  }\n\n  /** Whether the nx-checkbox-group are required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  private _value: any;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.ngControl) {\n      if (!!this._value) {\n        this._updateSelectedCheckboxFromValue();\n      }\n\n      this._value = this._checkboxes\n                        .filter(checkbox => checkbox.checked)\n                        .map(cb => cb.value);\n    }\n\n    this._updateSelectedCheckboxFromValue();\n    this._checkboxes.changes.subscribe(() => {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      if (this.ngControl) {\n        this.ngControl.control.setValue(this._value);\n      }\n      this._updateSelectedCheckboxFromValue();\n    });\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    if (this._value !== value) {\n      this._value = value;\n      this._updateSelectedCheckboxFromValue();\n    }\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n\n  private _onTouched: () => any = () => {};\n\n  private _updateSelectedCheckboxFromValue(): void {\n    if (this._checkboxes && this._checkboxes.length && !!this._value && this._value.length) {\n      this._checkboxes.map(checkbox => {\n        checkbox.checked = this._value.indexOf(checkbox.value) !== -1;\n      });\n    }\n  }\n\n  /** @docs-private */\n  change(value) {\n    value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n    this._onChange(value);\n    if (this._onTouched) {\n      this._onTouched();\n    }\n    this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n  }\n}\n\n@Component({\n  selector: 'nx-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox]': 'true',\n    '[class.disabled]': 'disabled',\n    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n    '[class.nx-checkbox--label-small]': 'labelSize === \"small\"',\n    '[class.nx-checkbox--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.required]': 'required',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  }\n})\n\nexport class NxCheckboxComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  private _parentChangeSubscription: Subscription;\n  private _id: string = (nextId++).toString();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _labelSize: NxCheckboxLabelSize = 'small';\n  private _checked = false;\n  private _name: string = null;\n\n  /** @docs-private */\n  @ViewChild('checkboxLabelWrapper', { static: true }) _checkboxLabelWrapper: ElementRef;\n\n  /**\n   * Id of the checkbox.\n   *\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-checkbox-${this._id}`;\n  }\n\n  /** Name of the checkbox. */\n  @Input()\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name(): string {\n    return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n  }\n\n  /** Whether the checkbox is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n  }\n\n  /**\n   * Sets the label size of the checkbox. Default value: small\n   */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n  }\n\n  /**\n   * Whether the checkbox has negative styling.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n  }\n\n  /** Whether the checkbox is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      if (this._indeterminate) {\n        this._setIndeterminate(false);\n      }\n      this._setChecked(newValue);\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  private _indeterminate = false;\n\n  /** Whether the checkbox is indeterminated. */\n  @Input()\n  set indeterminate(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._indeterminate !== newValue) {\n      if (this._checked) {\n        this._setChecked(false);\n      }\n      this._setIndeterminate(newValue);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  /** Sets the value of the checkbox. Default value is the checked status. */\n  @Input()\n  get value(): string {\n    return this._value ? this._value : this.checked.toString();\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _value: string;\n\n  /** An event emitted when the indeterminate value has changed */\n  @Output()\n  indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits the boolean checked value of the changed checkbox.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits a NxCheckboxChangeEvent.\n   */\n  @Output()\n  checkboxChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  /** @docs-private */\n  get labelHasContent() {\n    return !!this._checkboxLabelWrapper.nativeElement.innerHTML.trim();\n  }\n\n  /** @docs-private\n   * Callback for when the content of the label has changed.\n   */\n  labelContentChanged() {\n    this._changeDetectorRef.detectChanges();\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() public checkboxGroup: NxCheckboxGroupComponent,\n              @Self() @Optional() public ngControl: NgControl,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n\n    const parent = this._parentFormGroup || this._parentForm;\n    let control = null;\n\n    if (this.checkboxGroup && this.checkboxGroup.ngControl) {\n      control = this.checkboxGroup.ngControl;\n    } else {\n      control = this.ngControl ? this.ngControl.control as FormControl : null;\n    }\n\n    return this._errorStateMatcher.isErrorState(control, parent);\n  }\n\n  ngOnInit() {\n    if (this.checkboxGroup) {\n      this.name = this.checkboxGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  private _setIndeterminate(value: boolean) {\n    this._indeterminate = value;\n    this.indeterminateChange.emit(this._indeterminate);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setChecked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Toggles the checked state of the checkbox. */\n  public toggle() {\n    this.checked = !this.checked;\n    this.onChangeCallback(this.checked);\n    if (this.checkboxGroup !== null) {\n      this.checkboxGroup.change(this);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  _onInputClick(event): void {\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this.checkedChange.emit(this._checked);\n      this.checkboxChange.emit(this._createChangeEvent(this._checked));\n    }\n  }\n\n  /**@docs-private */\n  private _createChangeEvent(checkedValue: boolean): NxCheckboxChangeEvent {\n    const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n    event.checked = checkedValue;\n    event.value = this.value;\n    event.checkbox = this;\n    return event;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxCheckboxComponent } from './checkbox.component';\nimport { NxCheckboxGroupComponent } from './checkbox.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxErrorModule, NxLabelModule } from '@allianz/ngx-ndbx/base';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n@NgModule({\n  declarations: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent\n  ],\n  exports: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n    NxLabelModule,\n    NxErrorModule\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    ObserversModule\n  ]\n})\nexport class NxCheckboxModule { }\n"],"names":["Subject","EventEmitter","coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","NgControl","Optional","Self","ContentChildren","forwardRef","ContentChild","NxLabelComponent","Output","Input","ErrorStateMatcher","NgForm","FormGroupDirective","ViewChild","NgModule","NxLabelModule","NxErrorModule","CommonModule","NxIconModule","ObserversModule"],"mappings":"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"}