(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@allianz/ngx-ndbx/formfield'), require('@allianz/ngx-ndbx/base'), require('@allianz/ngx-ndbx/datefield')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/config', ['exports', '@angular/core', '@allianz/ngx-ndbx/formfield', '@allianz/ngx-ndbx/base', '@allianz/ngx-ndbx/datefield'], factory) :
    (global = global || self, factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].config = {}), global.ng.core, global.allianz['ngx-ndbx'].formfield, global.allianz['ngx-ndbx'].base, global.allianz['ngx-ndbx'].datefield));
}(this, (function (exports, core, formfield, base, datefield) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: nx-expert.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // expert presets
    /** @type {?} */
    var formfieldExpertOptions = {
        appearance: 'outline',
        nxFloatLabel: 'always'
    };
    /** @type {?} */
    var errorExpertOptions = { appearance: 'text' };
    /** @type {?} */
    var labelExpertOptions = { size: 'small' };
    /** @type {?} */
    var datepickerExpertOptions = { toggleIconTabindex: -1 };
    var ɵ0 = formfieldExpertOptions, ɵ1 = labelExpertOptions, ɵ2 = datepickerExpertOptions, ɵ3 = errorExpertOptions;
    var NxExpertModule = /** @class */ (function () {
        function NxExpertModule() {
        }
        NxExpertModule.decorators = [
            { type: core.NgModule, args: [{
                        providers: [
                            { provide: formfield.FORMFIELD_DEFAULT_OPTIONS, useValue: ɵ0 },
                            { provide: base.LABEL_DEFAULT_OPTIONS, useValue: ɵ1 },
                            { provide: datefield.DATEPICKER_DEFAULT_OPTIONS, useValue: ɵ2 },
                            { provide: base.ERROR_DEFAULT_OPTIONS, useValue: ɵ3 }
                        ]
                    },] }
        ];
        return NxExpertModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: nx-direct.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var formfieldDirectOptions = {
        nxFloatLabel: 'always'
    };
    var ɵ0$1 = formfieldDirectOptions;
    var NxDirectModule = /** @class */ (function () {
        function NxDirectModule() {
        }
        NxDirectModule.decorators = [
            { type: core.NgModule, args: [{
                        providers: [
                            { provide: formfield.FORMFIELD_DEFAULT_OPTIONS, useValue: ɵ0$1 }
                        ]
                    },] }
        ];
        return NxDirectModule;
    }());

    exports.NxDirectModule = NxDirectModule;
    exports.NxExpertModule = NxExpertModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=allianz-ngx-ndbx-config.umd.js.map
