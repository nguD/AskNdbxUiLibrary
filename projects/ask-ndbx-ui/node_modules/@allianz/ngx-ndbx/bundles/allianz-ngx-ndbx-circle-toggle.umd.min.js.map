{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/toggle-button.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle-group/circle-toggle-group.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/mobile-toggle-button/mobile-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/circle-toggle.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/icon-toggle-button/icon-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","nextId","NxCircleToggleGroupComponent","_changeDetectorRef","this","_id","_destroyed","Subject","valueChange","EventEmitter","_name","_negative","_responsive","onChangeCallback","onTouchedCallback","defineProperty","prototype","markForCheck","updateToggleButtonsNames","_disabled","newValue","coerceBooleanProperty","buttons","forEach","button","disabled","negative","_value","writeValue","responsive","notifySelectedChild","ngOnDestroy","complete","ngAfterViewInit","_this","subscribeToSelectionChanges","changes","pipe","startWith","filter","toggles","length","tap","Promise","resolve","then","toggle","toggleButton","resetClasses","first","setFirstButton","last","setLastButton","takeUntil","subscribe","changedOrDestroyed","merge","apply","arguments","concat","__spread","map","selectionChange","change","emit","selected","find","setGroupSelection","name","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","checked","_buttons","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","host","[class.is-responsive]","[class.is-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","[attr.name]","[attr.id]","[class.nx-circle-toggle-group]","role","ChangeDetectorRef","ContentChildren","ToggleButton","Output","Input","NxMobileToggleButtonComponent","isFirst","isLast","[class.is-negative]","[class.is-first]","[class.is-last]","[class.is-flipped]","NxCircleToggleComponent","_super","toggleGroup","_checkedDispatcher","inGroup","checkedChange","_checked","_iconName","_svg","_svgChecked","_circleText","_label","_hint","_hover","_touched","_removeUniqueSelectionListener","__","constructor","create","tslib_1.__extends","src","onMouseEnter","onMouseLeave","onTouchStart","ngOnInit","attachListenerForGroup","id","listen","groupId","buttonId","event","preventDefault","stopPropagation","ToggleChangeEvent","notify","svg","svgChecked","useFilledSvg","handleEnterKey","[class.nx-toggle-circle]","[class.in-group]","decorators","type","Optional","UniqueSelectionDispatcher","ViewChild","static","HostListener","NxIconToggleButtonComponent","[class.nx-circle-button]","[class.has-checkmark]","[class.is-touched]","NxCircleToggleModule","NgModule","declarations","exports","imports","CommonModule","NxIconModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** @docs-private */\nexport abstract class ToggleButton {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  tabIndex;\n  checkedChange;\n  selectionChange;\n  toggleButton;\n  abstract toggle(event);\n  abstract setGroupSelection();\n\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil, tap, startWith, filter } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\n\nimport { ToggleButton } from '../circle-toggle/toggle-button';\nimport { ToggleChangeEvent } from '../circle-toggle/circle-toggle.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle-group',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./circle-toggle-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'name',\n    '[attr.name]': 'name',\n    '[attr.id]': 'id',\n    '[class.nx-circle-toggle-group]': 'true',\n    'role': 'radiogroup'\n  }\n})\nexport class NxCircleToggleGroupComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n\n  @ContentChildren(ToggleButton) private _buttons: QueryList<ToggleButton>;\n\n  private _id = `nx-circle-toggle-group-${nextId++}`;\n\n  /**\n   * Id of the circle toggle group.\n   *\n   * If not set, the circle toggle group gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _destroyed: Subject<void> = new Subject();\n\n  /** An event emitted when the selection changes. Outputs the value of the currently selected button. */\n  @Output()\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  private _name: string = `toggle-group-${nextId++}`;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this.updateToggleButtonsNames();\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle group is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.disabled = value);\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  _negative: boolean = false;\n  /** Whether the circle toggle group uses the negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.negative = value);\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _value;\n  /** The value of the selected circle toggle in the circle toggle group. */\n  @Input()\n  set value(value: string) {\n    this.writeValue(value);\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  private _responsive: boolean = true;\n  /** Whether the circle toggle group has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  private onChangeCallback = (value: string) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  writeValue(value: any) {\n    if (this.value !== value) {\n      this._value = value;\n      this.notifySelectedChild(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  ngAfterViewInit() {\n\n    this.subscribeToSelectionChanges();\n\n    // react if a content child is deleted, added etc.\n    this.buttons.changes\n      .pipe(\n        startWith(this.buttons),\n        filter(toggles => toggles.length > 0),\n        tap(toggles =>\n          Promise.resolve().then(() => {\n            toggles.forEach(toggle => toggle.toggleButton.resetClasses());\n            this.buttons.first.toggleButton.setFirstButton();\n            this.buttons.last.toggleButton.setLastButton();\n          })\n        ),\n        takeUntil(this._destroyed))\n      .subscribe(() => this.subscribeToSelectionChanges());\n  }\n\n  /** @docs-private */\n  subscribeToSelectionChanges() {\n    const changedOrDestroyed = merge(this.buttons.changes, this._destroyed);\n\n    merge(...this.buttons.map(button => button.selectionChange))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: ToggleChangeEvent) => {\n        this.onChangeCallback(change.value);\n        this.valueChange.emit(change.value);\n      });\n  }\n\n  /**\n   * @docs-private\n   * inform the selected button if the group selection is set programattically at the beginning\n   */\n  notifySelectedChild(newValue: string) {\n    if (this.buttons) {\n      const selected = this.buttons.find((button) => button.value === newValue);\n      if (selected) {\n        selected.setGroupSelection();\n      }\n    }\n  }\n\n  /** @docs-private */\n  updateToggleButtonsNames(): void {\n    if (this.buttons) {\n      this.buttons.forEach(button => button.name = this.name);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get selectedButton(): ToggleButton {\n    return this.buttons ? this.buttons.find(button => button.checked) : null;\n  }\n\n  /** @docs-private */\n  get buttons() {\n    return this._buttons;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-mobile-toggle-button',\n  templateUrl: 'mobile-toggle-button.component.html',\n  styleUrls: ['mobile-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-first]': 'isFirst',\n    '[class.is-last]': 'isLast',\n    '[class.is-flipped]': 'checked'\n  }\n})\nexport class NxMobileToggleButtonComponent {\n\n  @Input()\n  checked: boolean = false;\n\n  @Input()\n  negative: boolean = false;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  circleText: string;\n\n  /** @docs-private */\n  isFirst: boolean;\n\n  /** @docs-private */\n  isLast: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  setFirstButton() {\n    this.isFirst = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.isLast = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    this.isFirst = false;\n    this.isLast = false;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input, Output, ViewChild, Optional, OnInit, OnDestroy, AfterViewInit, HostListener, ChangeDetectorRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\nimport { ToggleButton } from './toggle-button';\nimport { NxCircleToggleGroupComponent } from '../circle-toggle-group/circle-toggle-group.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxMobileToggleButtonComponent } from '../mobile-toggle-button/mobile-toggle-button.component';\n\nexport class ToggleChangeEvent {\n  /** A toggle button */\n  button: ToggleButton;\n\n  /** The value of the toggle button that is sent with the event. */\n  value: string;\n\n  constructor(button, value) {\n    this.button = button;\n    this.value = value;\n  }\n}\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle',\n  templateUrl: 'circle-toggle.component.html',\n  styleUrls: ['circle-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ToggleButton,\n      useExisting: forwardRef(() => NxCircleToggleComponent)\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-toggle-circle]': 'true',\n    '[class.in-group]': 'inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-responsive]': 'responsive'\n  }\n})\nexport class NxCircleToggleComponent extends ToggleButton implements\nOnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\n\n  private _id: string = `toggle-button-${nextId++}`;\n\n  /** @docs-private */\n  inGroup: boolean = false;\n\n  /**\n   * Id of the circle toggle.\n   *\n   * If not set, the circle toggle gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string = null;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * An event that is emitted when the checked state fo the circle toggle changes.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * An event that is emitted when the checked state of the circle toggle changes.\n   * The event object contains the circle toggle itself and its value (see ToggleChangeEvent).\n   */\n  @Output()\n  selectionChange = new EventEmitter<ToggleChangeEvent>();\n\n  _checked: boolean = false;\n  /** Whether the circle toggle is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.checked !== newValue) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _value: string = null;\n\n  /** The value that is used in the model. */\n  @Input()\n  set value(newValue: string) {\n    this._value = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  private _iconName: string = null;\n  /** Id of the icon that should be displayed. */\n  @Input('icon')\n  set iconName(name: string) {\n    this._iconName = name;\n    this._changeDetectorRef.markForCheck();\n  }\n  get iconName(): string {\n    return this._iconName;\n  }\n\n  private _svg: string = null;\n\n  /** SVG that is displayed if the circle toggle is unchecked. */\n  @Input()\n  set svg(src: string) {\n    this._svg = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svg(): string {\n    return this._svg;\n  }\n\n  private _svgChecked: string = null;\n\n  /** SVG that is displayed if the circle toggle is checked. */\n  @Input()\n  set svgChecked(src: string) {\n    this._svgChecked = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svgChecked(): string {\n    return this._svgChecked;\n  }\n\n  private _circleText: string = null;\n\n  /** A text that is displayed inside the circle toggle. */\n  @Input()\n  set circleText(value: string) {\n    if (value !== this._circleText) {\n      this._circleText = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get circleText(): string {\n    return this._circleText;\n  }\n\n  private _label: string = null;\n\n  /** Label displayed below the circle. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n\n  private _hint: string = null;\n\n  /** Additional hint displayed below the label. */\n  @Input()\n  set hint(value: string) {\n    this._hint = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get hint(): string {\n    return this._hint;\n  }\n\n  private _negative;\n\n  /** Whether the circle toggle uses the negative set of styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _responsive;\n\n  /** Whether the circle toggle has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.responsive !== newValue) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive() {\n    return this._responsive;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** @docs-private */\n  @ViewChild(NxMobileToggleButtonComponent, { static: true })\n  toggleButton: NxMobileToggleButtonComponent;\n\n  private _hover: boolean = false;\n\n  /** touched is set to true on touch devices. */\n  _touched: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this._touched) {\n      this._hover = true;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    if (!this._touched) {\n      this._hover = false;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('touchstart') onTouchStart() {\n    this._touched = true;\n  }\n\n  _removeUniqueSelectionListener: () => void = () => { };\n\n  private onChangeCallback = (checked: boolean) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(/** @docs-private */ @Optional() public toggleGroup: NxCircleToggleGroupComponent,\n    private _checkedDispatcher: UniqueSelectionDispatcher, private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n\n    if (this.toggleGroup) {\n      this.name = this.toggleGroup.name;\n    }\n  }\n\n  ngOnInit() {\n    if (this.toggleGroup) {\n      this.attachListenerForGroup();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.toggleGroup) {\n      Promise.resolve().then(() => {\n        this.inGroup = true;\n        this.negative = this.toggleGroup.negative;\n        this.disabled = this.toggleGroup.disabled;\n        this.responsive = this.toggleGroup.responsive;\n        this.id = this.toggleGroup.id + `-button-${nextId++}`;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // function returned by the listener\n    this._removeUniqueSelectionListener();\n  }\n\n  /** @docs-private */\n  attachListenerForGroup() {\n    this._removeUniqueSelectionListener =\n      this._checkedDispatcher.listen((groupId: string, buttonId: string) => {\n        if (this.id !== buttonId && groupId === this.toggleGroup.id) {\n          this.checked = false;\n        }\n      });\n  }\n\n  writeValue(newValue): void {\n    this.checked = newValue;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  toggle(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if ((this.toggleGroup && this.checked) || this.disabled) {\n      return;\n    } else {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n      this.selectionChange.emit(new ToggleChangeEvent(this, this.value));\n      if (this.toggleGroup) {\n        this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n      }\n    }\n  }\n\n  /**\n   * @docs-private\n   *\n   * method called by the group if the internal value of the group is changed programatically,\n   * does not trigger change emission\n   */\n  setGroupSelection() {\n    // propagate changes only if the value in the group is different than the button checked value\n    if (!this.checked) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n    }\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    let useFilledSvg = this.checked || (!this.disabled && this._hover);\n    if (this.negative) {\n      useFilledSvg = !useFilledSvg;\n    }\n    return useFilledSvg ? this.svgChecked : this.svg;\n  }\n\n  /** @docs-private */\n  get type() {\n    return this.toggleGroup ? 'radio' : 'checkbox';\n  }\n\n  /** @docs-private */\n  handleEnterKey(event) {\n    if (!this.toggleGroup) {\n      this.toggle(event);\n    }\n  }\n}\n","\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-icon-toggle-button',\n  templateUrl: 'icon-toggle-button.component.html',\n  styleUrls: ['icon-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-circle-button]': 'true',\n    '[class.is-flipped]': 'checked',\n    '[class.has-checkmark]': '!inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-touched]': 'touched'\n  }\n})\nexport class NxIconToggleButtonComponent {\n\n  @Input()\n  inGroup: boolean = true;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  checked: boolean;\n\n  @Input()\n  icon: string;\n\n  @Input('svg')\n  svgUrl: string;\n\n  @Input()\n  disabled: boolean;\n\n  @Input()\n  negative: boolean;\n\n  @Input()\n  touched: boolean;\n\n  @Input()\n  circleText: string;\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NxCircleToggleGroupComponent } from './circle-toggle-group/circle-toggle-group.component';\nimport { NxCircleToggleComponent } from './circle-toggle/circle-toggle.component';\nimport { NxIconToggleButtonComponent } from './icon-toggle-button/icon-toggle-button.component';\nimport { NxMobileToggleButtonComponent } from './mobile-toggle-button/mobile-toggle-button.component';\n\n@NgModule({\n  declarations: [\n    NxCircleToggleGroupComponent,\n    NxCircleToggleComponent,\n    NxIconToggleButtonComponent,\n    NxMobileToggleButtonComponent\n  ],\n  exports: [\n    NxCircleToggleGroupComponent,\n    NxIconToggleButtonComponent,\n    NxCircleToggleComponent,\n    NxMobileToggleButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxCircleToggleModule { }\n"]}