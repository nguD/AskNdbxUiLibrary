{"version":3,"sources":["ng://@allianz/ngx-ndbx/action/action-icon.directive.ts","ng://@allianz/ngx-ndbx/action/action.component.ts","ng://@allianz/ngx-ndbx/action/action.module.ts"],"names":["NxActionIconDirective","Directive","args","selector","host","class","NxActionComponent","_changeDetectorRef","this","_selected","_expandable","_expanded","Object","defineProperty","prototype","value","coerceBooleanProperty","markForCheck","Component","template","[class.is-expanded]","[class.is-selected]","[class.is-expandable]","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ContentChild","static","Input","NxActionModule","NgModule","imports","NxIconModule","CommonModule","declarations","exports"],"mappings":"ilBAAA,IAAAA,EAAA,WAEA,SAAAA,KAMoC,2BANnCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iBACVC,KAAM,CACJC,MAAS,uBAGuBL,EARpC,GCAAM,EAAA,WAuDE,SAAAA,EAAoBC,GAAAC,KAAAD,mBAAAA,EA1BZC,KAAAC,WAAqB,EAWrBD,KAAAE,aAAuB,EAavBF,KAAAG,WAAqB,EAG/B,OAnCEC,OAAAC,eACIP,EAAAQ,UAAA,WAAQ,KAIZ,WACE,OAAON,KAAKC,eANd,SACaM,GACXP,KAAKC,UAAYO,EAAAA,sBAAsBD,GACvCP,KAAKD,mBAAmBU,gDAQ1BL,OAAAC,eACIP,EAAAQ,UAAA,aAAU,KAId,WACE,OAAON,KAAKE,iBANd,SACeK,GACbP,KAAKE,YAAcM,EAAAA,sBAAsBD,GACzCP,KAAKD,mBAAmBU,gDAU1BL,OAAAC,eACIP,EAAAQ,UAAA,WAAQ,KAIZ,WACE,OAAON,KAAKG,eANd,SACaI,GACXP,KAAKG,UAAYK,EAAAA,sBAAsBD,GACvCP,KAAKD,mBAAmBU,oEA5C3BC,EAAAA,UAAShB,KAAA,CAAC,CAETC,SAAU,aACVgB,SAAA,gYAEAf,KAAM,CACJgB,sBAAuB,WACvBC,sBAAuB,WACvBC,wBAAyB,aACzBjB,MAAS,aAEXkB,gBAAiBC,EAAAA,wBAAwBC,giFAfSC,EAAAA,yDAkBjDC,EAAAA,aAAYzB,KAAA,CAACF,EAAuB,CAAC4B,QAAQ,sBAG7CC,EAAAA,0BAWAA,EAAAA,wBAaAA,EAAAA,SAWHvB,EAxDA,GCAA,IAAAwB,EAAA,WAMA,SAAAA,KAK8B,2BAL7BC,EAAAA,SAAQ7B,KAAA,CAAC,CACR8B,QAAS,CAAEC,EAAAA,aAAcC,EAAAA,cACzBC,aAAc,CAAE7B,EAAmBN,GACnCoC,QAAS,CAAE9B,EAAmBN,OAEF8B,EAX9B","sourcesContent":["import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[nxActionIcon]',\n  host: {\n    'class': 'nx-action__icon'\n  }\n})\nexport class NxActionIconDirective {}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChild } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxActionIconDirective } from './action-icon.directive';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxAction]',\n  templateUrl: 'action.component.html',\n  styleUrls: ['action.component.scss'],\n  host: {\n    '[class.is-expanded]': 'expanded',\n    '[class.is-selected]': 'selected',\n    '[class.is-expandable]': 'expandable',\n    'class': 'nx-action'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxActionComponent {\n  @ContentChild(NxActionIconDirective, {static: false}) _iconChild: NxActionIconDirective;\n\n  /** Whether this action is selected or not.  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get selected() {\n    return this._selected;\n  }\n  private _selected: boolean = false;\n\n  /** Whether this action is expandable or not. Will add a caret icon. */\n  @Input()\n  set expandable(value: boolean) {\n    this._expandable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get expandable() {\n    return this._expandable;\n  }\n  private _expandable: boolean = false;\n\n  /** Whether this action is expanded or not.\n    Only works in combination with the `expandable` option set to `true`.\n   */\n  @Input()\n  set expanded(value: boolean) {\n    this._expanded = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get expanded() {\n    return this._expanded;\n  }\n  private _expanded: boolean = false;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxActionComponent } from './action.component';\nimport { NxActionIconDirective } from './action-icon.directive';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  imports: [ NxIconModule, CommonModule ],\n  declarations: [ NxActionComponent, NxActionIconDirective ],\n  exports: [ NxActionComponent, NxActionIconDirective ]\n})\nexport class NxActionModule { }\n"]}