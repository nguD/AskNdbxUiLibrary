(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/accordion'), require('@angular/cdk/collections'), require('@angular/cdk/portal'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/coercion'), require('@angular/animations'), require('@allianz/ngx-ndbx/icon'), require('@angular/common'), require('@angular/cdk/keycodes')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/accordion', ['exports', '@angular/cdk/accordion', '@angular/cdk/collections', '@angular/cdk/portal', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/cdk/coercion', '@angular/animations', '@allianz/ngx-ndbx/icon', '@angular/common', '@angular/cdk/keycodes'], factory) :
    (global = global || self, factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].accordion = {}), global.ng.cdk.accordion, global.ng.cdk.collections, global.ng.cdk.portal, global.ng.core, global.rxjs, global.rxjs.operators, global.ng.cdk.coercion, global.ng.animations, global.allianz['ngx-ndbx'].icon, global.ng.common, global.ng.cdk.keycodes));
}(this, (function (exports, accordion, collections, portal, core, rxjs, operators, coercion, animations, icon, common, keycodes) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: accordion.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var DEFAULT_TYPE = 'regular';
    var NxAccordionDirective = /** @class */ (function (_super) {
        __extends(NxAccordionDirective, _super);
        function NxAccordionDirective() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._style = 'regular';
            _this._negative = null;
            return _this;
        }
        Object.defineProperty(NxAccordionDirective.prototype, "style", {
            get: /**
             * @return {?}
             */
            function () {
                return this._style;
            },
            /**
             * Value for the styling that should be chosen.
             * Default value: 'regular'
             */
            set: /**
             * Value for the styling that should be chosen.
             * Default value: 'regular'
             * @param {?} value
             * @return {?}
             */
            function (value) {
                value = value ? value : DEFAULT_TYPE;
                var _a = __read(value.match(/regular|light/) || [DEFAULT_TYPE], 1), newValue = _a[0];
                this._style = (/** @type {?} */ (newValue));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxAccordionDirective.prototype, "negative", {
            get: /**
             * @return {?}
             */
            function () {
                return this._negative;
            },
            /** Whether the negative set of styles should be used. */
            set: /**
             * Whether the negative set of styles should be used.
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._negative = coercion.coerceBooleanProperty(value);
            },
            enumerable: true,
            configurable: true
        });
        NxAccordionDirective.decorators = [
            { type: core.Directive, args: [{
                        // tslint:disable-next-line:directive-selector
                        selector: 'nx-accordion',
                        host: {
                            '[class.nx-accordion]': 'true',
                            'role': 'presentation'
                        }
                    },] }
        ];
        NxAccordionDirective.propDecorators = {
            style: [{ type: core.Input, args: ['nxStyle',] }],
            negative: [{ type: core.Input }]
        };
        return NxAccordionDirective;
    }(accordion.CdkAccordion));
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NxAccordionDirective.prototype._style;
        /**
         * @type {?}
         * @private
         */
        NxAccordionDirective.prototype._negative;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: accordion-animations.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var nxAccordionAnimations = {
        bodyExpansion: animations.trigger('bodyExpansion', [
            animations.state('closed', animations.style({ height: '0px', visibility: 'hidden' })),
            animations.state('open', animations.style({ height: '*', visibility: 'visible' })),
            animations.transition('open <=> closed', animations.animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))
        ]),
        indicatorRotate: animations.trigger('indicatorRotate', [
            animations.state('closed', animations.style({ transform: 'rotate(0deg)' })),
            animations.state('open', animations.style({ transform: 'rotate(180deg)' })),
            animations.transition('open <=> closed', animations.animate('.3s ease')),
        ])
    };

    /**
     * @fileoverview added by tsickle
     * Generated from: expansion-panel-body.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxExpansionPanelBodyDirective = /** @class */ (function () {
        function NxExpansionPanelBodyDirective(_template) {
            this._template = _template;
        }
        NxExpansionPanelBodyDirective.decorators = [
            { type: core.Directive, args: [{ selector: '[nxExpansionPanelBody]' },] }
        ];
        /** @nocollapse */
        NxExpansionPanelBodyDirective.ctorParameters = function () { return [
            { type: core.TemplateRef }
        ]; };
        return NxExpansionPanelBodyDirective;
    }());
    if (false) {
        /** @type {?} */
        NxExpansionPanelBodyDirective.prototype._template;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: expansion-panel.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var nextId = 0;
    /** @type {?} */
    var DEFAULT_TYPE$1 = 'regular';
    var ɵ0 = undefined;
    var NxExpansionPanelComponent = /** @class */ (function (_super) {
        __extends(NxExpansionPanelComponent, _super);
        function NxExpansionPanelComponent(accordion, _changeDetectorRef, _expansionDispatcher, _viewContainerRef) {
            var _this = _super.call(this, accordion, _changeDetectorRef, _expansionDispatcher) || this;
            _this._viewContainerRef = _viewContainerRef;
            _this._negative = null;
            _this._accordionStyle = DEFAULT_TYPE$1;
            _this._style = null;
            _this._headerId = "nx-expansion-panel-header-" + nextId++;
            /**
             * Stream that emits for changes in `\@Input` properties.
             */
            _this._inputChanges = new rxjs.Subject();
            _this.accordion = accordion;
            return _this;
        }
        Object.defineProperty(NxExpansionPanelComponent.prototype, "negative", {
            get: /**
             * @return {?}
             */
            function () {
                return this._negative;
            },
            /** Whether the negative set of styles should be used. */
            set: /**
             * Whether the negative set of styles should be used.
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._negative = coercion.coerceBooleanProperty(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxExpansionPanelComponent.prototype, "style", {
            get: /**
             * @return {?}
             */
            function () {
                return this._style;
            },
            /**
             * Value for the styling that should be chosen.
             * Default value: 'regular'.
             */
            set: /**
             * Value for the styling that should be chosen.
             * Default value: 'regular'.
             * @param {?} value
             * @return {?}
             */
            function (value) {
                value = value ? value : DEFAULT_TYPE$1;
                var _a = __read(value.match(/regular|light/) || [DEFAULT_TYPE$1], 1), newValue = _a[0];
                this._style = (/** @type {?} */ (newValue));
                this._accordionStyle = (/** @type {?} */ (newValue));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NxExpansionPanelComponent.prototype, "portal", {
            /** @docs-private */
            get: /**
             * \@docs-private
             * @return {?}
             */
            function () {
                return this._portal;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NxExpansionPanelComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.lazyContent) {
                // Render the content as soon as the panel becomes open.
                this.opened.pipe(operators.startWith(null), operators.filter((/**
                 * @return {?}
                 */
                function () { return _this.expanded && !_this._portal; })), operators.take(1)).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this._portal = new portal.TemplatePortal(_this.lazyContent._template, _this._viewContainerRef);
                }));
            }
            // Inherit appearance given by the accordion (if any).
            if (Boolean(this.accordion)) {
                if (this.style === null && this.accordion.style !== null) {
                    this.style = this.accordion.style;
                }
                if (this.negative === null && this.accordion.negative !== null) {
                    this.negative = this.accordion.negative;
                }
            }
        };
        /**
         * @param {?} changes
         * @return {?}
         */
        NxExpansionPanelComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
        function (changes) {
            this._inputChanges.next(changes);
        };
        /**
         * @return {?}
         */
        NxExpansionPanelComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            _super.prototype.ngOnDestroy.call(this);
            this._inputChanges.complete();
        };
        /** @docs-private */
        /**
         * \@docs-private
         * @return {?}
         */
        NxExpansionPanelComponent.prototype.getOpenState = /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this.expanded ? 'open' : 'closed';
        };
        NxExpansionPanelComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nx-expansion-panel',
                        exportAs: 'NxExpansionPanelComponent',
                        template: "<ng-content select=\"nx-expansion-panel-header\"></ng-content>\n\n<div class=\"nx-expansion-panel__content\" role=\"region\" [@bodyExpansion]=\"getOpenState()\"\n  [attr.aria-labelledby]=\"_headerId\" [id]=\"id\">\n  <div class=\"nx-expansion-panel__body\">\n    <ng-content></ng-content>\n    <ng-template [cdkPortalOutlet]=\"portal\"></ng-template>\n  </div>\n</div>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        animations: [nxAccordionAnimations.bodyExpansion],
                        host: {
                            '[class.nx-expanded]': 'expanded',
                            '[class.nx-expansion-panel--light]': '_accordionStyle === "light"',
                            '[class.nx-expansion-panel--regular]': '_accordionStyle === "regular"',
                            '[class.nx-expansion-panel--negative]': 'negative',
                            '[class.is-disabled]': 'disabled',
                        },
                        providers: [
                            // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering
                            // to the same accordion.
                            { provide: NxAccordionDirective, useValue: ɵ0 },
                        ],
                        styles: [":host{display:block}:host(.nx-expansion-panel--negative) ::ng-deep div.nx-expansion-panel__body *{color:#fff}.nx-expansion-panel__content{overflow:hidden;display:block}.nx-expansion-panel__body{font-size:16px;font-size:var(--accordion-body-font-size,16px);line-height:24px;line-height:var(--accordion-body-line-height,24px);font-weight:400;font-weight:var(--accordion-body-font-weight,400);letter-spacing:0;letter-spacing:var(--accordion-body-letter-spacing,0);padding:24px 88px 32px 32px;padding:var(--accordion-regular-body-padding,24px 88px 32px 32px)}:host(.nx-expansion-panel--regular){margin-top:16px;margin-top:var(--accordion-regular-header-top-margin,16px)}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 transparent;box-shadow:inset 0 1px 0 0 var(--accordion-regular-border-color,transparent)}:host(.nx-expansion-panel--regular):last-child,:host(.nx-expansion-panel--regular):only-child{box-shadow:0 1px 0 0 transparent;box-shadow:0 1px 0 0 var(--accordion-regular-border-color,transparent)}@media (max-width:703px){.nx-expansion-panel__body{padding:24px 16px 32px}:host(.nx-expansion-panel--regular){margin-top:0}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 #d9d9d9}:host(.nx-expansion-panel--regular):last-child ::ng-deep .nx-expansion-panel__header-content,:host(.nx-expansion-panel--regular):only-child ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 #d9d9d9,inset 0 -1px 0 0 #d9d9d9}:host(.nx-expansion-panel--regular).nx-expanded ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 #d9d9d9,inset 0 -1px 0 0 #d9d9d9}}:host(.nx-expansion-panel--light) .nx-expansion-panel__body{padding:24px 88px 32px 32px;padding:var(--accordion-light-body-padding,24px 88px 32px 32px)}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 #d9d9d9}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 #d9d9d9}:host(.nx-expansion-panel--light.nx-expansion-panel--negative){color:#fff}:host(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 #fff}:host(.nx-expansion-panel--light.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 #fff}@media screen and (-ms-high-contrast:active){:host{border-color:windowText;color:buttonText}:host.nx-expansion-panel--regular{border:1px solid buttonText}:host.is-disabled{border-color:GrayText}:host.nx-expansion-panel--light.nx-expansion-panel--negative ::ng-deep .nx-expansion-panel__header-content,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 windowText}:host.nx-expansion-panel--light.nx-expansion-panel--negative:last-child,:host.nx-expansion-panel--light.nx-expansion-panel--negative:only-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):last-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 windowText}}"]
                    }] }
        ];
        /** @nocollapse */
        NxExpansionPanelComponent.ctorParameters = function () { return [
            { type: NxAccordionDirective, decorators: [{ type: core.Optional }, { type: core.SkipSelf }] },
            { type: core.ChangeDetectorRef },
            { type: collections.UniqueSelectionDispatcher },
            { type: core.ViewContainerRef }
        ]; };
        NxExpansionPanelComponent.propDecorators = {
            negative: [{ type: core.Input }],
            style: [{ type: core.Input, args: ['nxStyle',] }],
            lazyContent: [{ type: core.ContentChild, args: [NxExpansionPanelBodyDirective, { static: false },] }]
        };
        return NxExpansionPanelComponent;
    }(accordion.CdkAccordionItem));
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelComponent.prototype._negative;
        /** @type {?} */
        NxExpansionPanelComponent.prototype._accordionStyle;
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelComponent.prototype._style;
        /**
         * \@docs-private
         * @type {?}
         */
        NxExpansionPanelComponent.prototype.lazyContent;
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelComponent.prototype._portal;
        /**
         * \@docs-private
         * @type {?}
         */
        NxExpansionPanelComponent.prototype.accordion;
        /** @type {?} */
        NxExpansionPanelComponent.prototype._headerId;
        /**
         * Stream that emits for changes in `\@Input` properties.
         * @type {?}
         */
        NxExpansionPanelComponent.prototype._inputChanges;
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelComponent.prototype._viewContainerRef;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: expansion-panel-header.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxExpansionPanelHeaderComponent = /** @class */ (function () {
        function NxExpansionPanelHeaderComponent(panel, _changeDetectorRef) {
            var _this = this;
            this.panel = panel;
            this._changeDetectorRef = _changeDetectorRef;
            this._parentChangeSubscription = rxjs.Subscription.EMPTY;
            this._parentChangeSubscription = rxjs.merge(panel.opened, panel.closed, panel._inputChanges.pipe(operators.filter((/**
             * @param {?} changes
             * @return {?}
             */
            function (changes) { return !!(changes.hideToggle || changes.disabled); }))))
                .subscribe((/**
             * @return {?}
             */
            function () { return _this._changeDetectorRef.markForCheck(); }));
        }
        /**
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this._parentChangeSubscription.unsubscribe();
        };
        /** @docs-private */
        /**
         * \@docs-private
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype.isExpanded = /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this.panel.expanded;
        };
        /** @docs-private */
        /**
         * \@docs-private
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype.getOpenState = /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return this.panel.getOpenState();
        };
        /**
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype._getPanelId = /**
         * @return {?}
         */
        function () {
            return this.panel.id;
        };
        /**
         * Toggle the expansion panel.
         */
        /**
         * Toggle the expansion panel.
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype.toggle = /**
         * Toggle the expansion panel.
         * @return {?}
         */
        function () {
            this.panel.toggle();
        };
        /** @docs-private */
        /**
         * \@docs-private
         * @param {?} event
         * @return {?}
         */
        NxExpansionPanelHeaderComponent.prototype.keydown = /**
         * \@docs-private
         * @param {?} event
         * @return {?}
         */
        function (event) {
            switch (event.keyCode) {
                case keycodes.SPACE:
                case keycodes.ENTER:
                    event.preventDefault();
                    this.toggle();
                    break;
                default:
                    return;
            }
        };
        NxExpansionPanelHeaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nx-expansion-panel-header',
                        template: "<div class=\"nx-expansion-panel__header-content\">\n  <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n  <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n  <nx-icon\n    [@indicatorRotate]=\"getOpenState()\"\n    class=\"nx-expansion-panel__chevron\"\n    name=\"chevron-down\">\n  </nx-icon>\n</div>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        animations: [nxAccordionAnimations.indicatorRotate],
                        host: {
                            '[class.nx-expanded]': 'isExpanded()',
                            'class': 'nx-expansion-panel__header',
                            'role': 'button',
                            '[attr.id]': 'panel._headerId',
                            '[attr.tabindex]': 'panel.disabled ? -1 : 0',
                            '[attr.aria-controls]': '_getPanelId()',
                            '[attr.aria-expanded]': 'isExpanded()',
                            '[attr.aria-disabled]': 'panel.disabled',
                            '[class.is-disabled]': 'panel.disabled',
                            '(keydown)': 'keydown($event)',
                            '(click)': 'toggle()'
                        },
                        styles: [":host:focus{outline:0}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;display:flex;justify-content:space-between;position:relative;outline:0;border:none;color:#414141;color:var(--accordion-regular-header-text-color,#414141);background:#f5f5f5;background:var(--accordion-regular-header-background-color,#f5f5f5);padding:24px 32px;padding:var(--accordion-regular-header-padding,24px 32px)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:#414141;color:var(--accordion-regular-header-hover-text-color,#414141)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-regular-hover-chevron-color,#006192)}::ng-deep .nx-expansion-panel__header-title{font-size:26px;font-size:var(--accordion-regular-font-size,26px);line-height:32px;line-height:var(--accordion-regular-line-height,32px);font-weight:300;font-weight:var(--accordion-regular-font-weight,300);letter-spacing:.3px;letter-spacing:var(--accordion-regular-letter-spacing,.3px);text-align:left;margin-right:32px}@media (max-width:703px){.nx-expansion-panel__header-content{padding:16px}::ng-deep .nx-expansion-panel__header-title{font-size:20px;font-size:var(--accordion-regular-mobile-font-size,20px);line-height:28px;line-height:var(--accordion-regular-mobile-line-height,28px);font-weight:400;font-weight:var(--accordion-regular-mobile-font-weight,400);letter-spacing:.2px;letter-spacing:var(--accordion-regular-mobile-letter-spacing,.2px);margin-right:16px}}.nx-expansion-panel__chevron{pointer-events:none;font-size:24px;font-size:var(--accordion-chevron-size,24px)}:host(:not(.is-disabled)) .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-regular-chevron-color,#006192)}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:24px 32px;padding:var(--accordion-light-header-padding,24px 32px);margin-top:0;background:0 0}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-light-chevron-color,#006192)}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:20px;font-size:var(--accordion-light-font-size,20px);line-height:28px;line-height:var(--accordion-light-line-height,28px);font-weight:400;font-weight:var(--accordion-light-font-weight,400);letter-spacing:.2px;letter-spacing:var(--accordion-light-letter-spacing,.2px)}@media (max-width:703px){:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:14px;font-size:var(--accordion-light-mobile-font-size,14px);line-height:20px;line-height:var(--accordion-light-mobile-line-height,20px);font-weight:600;font-weight:var(--accordion-light-mobile-font-weight,600);letter-spacing:.2px;letter-spacing:var(--accordion-light-mobile-letter-spacing,.2px)}}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content{color:#006192;color:var(--accordion-light-header-text-color,#006192)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:#006192;color:var(--accordion-light-header-hover-text-color,#006192)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-light-hover-chevron-color,#006192)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:#fff}:host.is-disabled.is-disabled .nx-expansion-panel__chevron,:host.is-disabled.is-disabled .nx-expansion-panel__header-content{cursor:not-allowed;color:#c2c2c2;color:var(--accordion-disabled-color,#c2c2c2)}:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6);z-index:1}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px background,0 0 0 6px windowText}:host{-ms-high-contrast-adjust:none}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:buttonText;background-color:buttonFace}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:buttonText}:host.is-disabled.is-disabled .nx-expansion-panel__header-content{color:GrayText;background-color:buttonFace}:host.is-disabled.is-disabled .nx-expansion-panel__header-content .nx-expansion-panel__chevron{color:GrayText}}"]
                    }] }
        ];
        /** @nocollapse */
        NxExpansionPanelHeaderComponent.ctorParameters = function () { return [
            { type: NxExpansionPanelComponent, decorators: [{ type: core.Host }] },
            { type: core.ChangeDetectorRef }
        ]; };
        return NxExpansionPanelHeaderComponent;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelHeaderComponent.prototype._parentChangeSubscription;
        /**
         * \@docs-private
         * @type {?}
         */
        NxExpansionPanelHeaderComponent.prototype.panel;
        /**
         * @type {?}
         * @private
         */
        NxExpansionPanelHeaderComponent.prototype._changeDetectorRef;
    }
    /**
     * This directive is to be used inside of the NxExpansionPanelHeader component.
     */
    var NxExpansionPanelDescriptionDirective = /** @class */ (function () {
        function NxExpansionPanelDescriptionDirective() {
        }
        NxExpansionPanelDescriptionDirective.decorators = [
            { type: core.Directive, args: [{
                        // tslint:disable-next-line:directive-selector
                        selector: 'nx-expansion-panel-description',
                        host: {
                            class: 'nx-expansion-panel__header-description'
                        }
                    },] }
        ];
        return NxExpansionPanelDescriptionDirective;
    }());
    /**
     * This directive is to be used inside of the NxExpansionPanelHeader component.
     */
    var NxExpansionPanelTitleDirective = /** @class */ (function () {
        function NxExpansionPanelTitleDirective() {
        }
        NxExpansionPanelTitleDirective.decorators = [
            { type: core.Directive, args: [{
                        // tslint:disable-next-line:directive-selector
                        selector: 'nx-expansion-panel-title',
                        host: {
                            class: 'nx-expansion-panel__header-title'
                        }
                    },] }
        ];
        return NxExpansionPanelTitleDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: accordion.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxAccordionModule = /** @class */ (function () {
        function NxAccordionModule() {
        }
        NxAccordionModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            portal.PortalModule,
                            icon.NxIconModule
                        ],
                        exports: [
                            NxAccordionDirective,
                            NxExpansionPanelComponent,
                            NxExpansionPanelHeaderComponent,
                            NxExpansionPanelDescriptionDirective,
                            NxExpansionPanelTitleDirective,
                            NxExpansionPanelBodyDirective
                        ],
                        declarations: [
                            NxAccordionDirective,
                            NxExpansionPanelComponent,
                            NxExpansionPanelHeaderComponent,
                            NxExpansionPanelDescriptionDirective,
                            NxExpansionPanelTitleDirective,
                            NxExpansionPanelBodyDirective
                        ],
                        providers: [],
                    },] }
        ];
        return NxAccordionModule;
    }());

    exports.NxAccordionDirective = NxAccordionDirective;
    exports.NxAccordionModule = NxAccordionModule;
    exports.NxExpansionPanelComponent = NxExpansionPanelComponent;
    exports.ɵa = nxAccordionAnimations;
    exports.ɵb = NxExpansionPanelBodyDirective;
    exports.ɵc = NxExpansionPanelHeaderComponent;
    exports.ɵd = NxExpansionPanelDescriptionDirective;
    exports.ɵe = NxExpansionPanelTitleDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=allianz-ngx-ndbx-accordion.umd.js.map
