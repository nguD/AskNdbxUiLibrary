{"version":3,"file":"allianz-ngx-ndbx-spinner.umd.js","sources":["ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n"],"names":["coerceBooleanProperty","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;;IAAA;QAMM,YAAY,GAAG,OAAO;AAE5B;QA4CE,4BAAoB,kBAAqC;YAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;YA5BjD,UAAK,GAAgB,YAAY,CAAC;YAclC,cAAS,GAAY,KAAK,CAAC;SAc0B;QAzB7D,sBACI,oCAAI;;;;YAMR;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;;;;;;;YATD,UACS,KAAkB;gBACzB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;iBACxC;aACF;;;WAAA;QAQD,sBACI,wCAAQ;;;;YAMZ;gBACE,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;;;;;;;YATD,UACa,KAAc;gBACzB,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC5B,IAAI,CAAC,SAAS,GAAGA,8BAAqB,CAAC,KAAK,CAAC,CAAC;oBAC9C,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;iBACxC;aACF;;;WAAA;;oBAvCFC,cAAS,SAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,yJAAuC;wBACvC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;wBAE/C,IAAI,EAAE;4BACJ,2BAA2B,EAAE,kBAAkB;4BAC/C,4BAA4B,EAAE,mBAAmB;4BACjD,2BAA2B,EAAE,kBAAkB;4BAC/C,8BAA8B,EAAE,UAAU;4BAC1C,aAAa,EAAE,UAAU;4BACzB,kBAAkB,EAAE,QAAQ;4BAC5B,kBAAkB,EAAE,aAAa;yBAClC;;qBACF;;;;oBAtBmDC,sBAAiB;;;2BA2BlEC,UAAK,SAAC,QAAQ;+BAcdA,UAAK;;QAYR,yBAAC;KA7CD,IA6CC;;;;;;QA7BC,mCAA0C;;;;;QAc1C,uCAAmC;;;;;QAcvB,gDAA6C;;;;;;;;ACpD3D;QAKA;SAagC;;oBAb/BC,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,kBAAkB;yBACnB;wBACD,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,OAAO,EAAE;4BACP,kBAAkB;yBACnB;wBACD,SAAS,EAAE,EAAE;wBACb,SAAS,EAAE,EAAE;qBACd;;QAC8B,sBAAC;KAbhC;;;;;;;;;;;;;"}