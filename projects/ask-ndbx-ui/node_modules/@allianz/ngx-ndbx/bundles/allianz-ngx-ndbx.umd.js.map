{"version":3,"file":"allianz-ngx-ndbx.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/ndbx.module.ts","ng://@allianz/ngx-ndbx/button/button-base.ts","ng://@allianz/ngx-ndbx/button/button.component.ts","ng://@allianz/ngx-ndbx/button/icon-button.component.ts","ng://@allianz/ngx-ndbx/button/button.module.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.component.ts","ng://@allianz/ngx-ndbx/checkbox/checkbox.module.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.ts","ng://@allianz/ngx-ndbx/radio-button/radio-button.module.ts","ng://@allianz/ngx-ndbx/copytext/copytext.component.ts","ng://@allianz/ngx-ndbx/copytext/copytext.module.ts","ng://@allianz/ngx-ndbx/headline/headline.component.ts","ng://@allianz/ngx-ndbx/headline/headline.module.ts","ng://@allianz/ngx-ndbx/link/link.component.ts","ng://@allianz/ngx-ndbx/link/link.module.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/toggle-button.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle-group/circle-toggle-group.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/mobile-toggle-button/mobile-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle/circle-toggle.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/icon-toggle-button/icon-toggle-button.component.ts","ng://@allianz/ngx-ndbx/circle-toggle/circle-toggle.module.ts","ng://@allianz/ngx-ndbx/list/list.component.ts","ng://@allianz/ngx-ndbx/list/list-icon.component.ts","ng://@allianz/ngx-ndbx/list/list.module.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button-base.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle-button.component.ts","ng://@allianz/ngx-ndbx/radio-toggle/radio-toggle.module.ts","ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts","ng://@allianz/ngx-ndbx/modal/modal.service.ts","ng://@allianz/ngx-ndbx/modal/animations.ts","ng://@allianz/ngx-ndbx/modal/modal.component.ts","ng://@allianz/ngx-ndbx/modal/modal-open-on-click.directive.ts","ng://@allianz/ngx-ndbx/modal/modal.module.ts","ng://@allianz/ngx-ndbx/switcher/switcher.component.ts","ng://@allianz/ngx-ndbx/switcher/switcher.module.ts","ng://@allianz/ngx-ndbx/popover/popover-content.ts","ng://@allianz/ngx-ndbx/popover/popover.component.ts","ng://@allianz/ngx-ndbx/popover/popover-trigger.directive.ts","ng://@allianz/ngx-ndbx/popover/popover.module.ts","ng://@allianz/ngx-ndbx/taglist/tag.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.component.ts","ng://@allianz/ngx-ndbx/taglist/taglist.module.ts","ng://@allianz/ngx-ndbx/image/image.directive.ts","ng://@allianz/ngx-ndbx/image/figure.component.ts","ng://@allianz/ngx-ndbx/image/image.module.ts","ng://@allianz/ngx-ndbx/video/video.component.ts","ng://@allianz/ngx-ndbx/video/video.module.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown-errors.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.control.ts","ng://@allianz/ngx-ndbx/dropdown/group/dropdown-group.ts","ng://@allianz/ngx-ndbx/dropdown/item/dropdown-item.ts","ng://@allianz/ngx-ndbx/dropdown/closed-label.directive.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.ts","ng://@allianz/ngx-ndbx/dropdown/dropdown.module.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-option.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.component.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete-trigger.directive.ts","ng://@allianz/ngx-ndbx/autocomplete/autocomplete.module.ts","ng://@allianz/ngx-ndbx/natural-language-form/word.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.component.ts","ng://@allianz/ngx-ndbx/natural-language-form/natural-language-form.module.ts","ng://@allianz/ngx-ndbx/message/message/message.component.ts","ng://@allianz/ngx-ndbx/message/message-toast/message-toast-animations.ts","ng://@allianz/ngx-ndbx/message/message-toast/message-toast-config.ts","ng://@allianz/ngx-ndbx/message/message-toast/message-toast.component.ts","ng://@allianz/ngx-ndbx/message/message.module.ts","ng://@allianz/ngx-ndbx/message/message-toast/message-toast-ref.ts","ng://@allianz/ngx-ndbx/message/message-toast/message-toast.service.ts","ng://@allianz/ngx-ndbx/page-search/page-search.component.ts","ng://@allianz/ngx-ndbx/page-search/page-search.module.ts","ng://@allianz/ngx-ndbx/rating/rating.component.ts","ng://@allianz/ngx-ndbx/rating/rating.module.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-intl.ts","ng://@allianz/ngx-ndbx/number-stepper/auto-resize.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.component.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-prefix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper-suffix.directive.ts","ng://@allianz/ngx-ndbx/number-stepper/number-stepper.module.ts","ng://@allianz/ngx-ndbx/pagination/pagination-texts.ts","ng://@allianz/ngx-ndbx/pagination/pagination-utils.ts","ng://@allianz/ngx-ndbx/pagination/pagination.component.ts","ng://@allianz/ngx-ndbx/pagination/pagination.module.ts","ng://@allianz/ngx-ndbx/dynamic-table/tabledata-source.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.component.ts","ng://@allianz/ngx-ndbx/dynamic-table/dynamic-table.module.ts","ng://@allianz/ngx-ndbx/accordion/accordion.ts","ng://@allianz/ngx-ndbx/accordion/accordion-animations.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-body.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel.ts","ng://@allianz/ngx-ndbx/accordion/expansion-panel-header.ts","ng://@allianz/ngx-ndbx/accordion/accordion.module.ts","ng://@allianz/ngx-ndbx/tabs/tab-group-base.ts","ng://@allianz/ngx-ndbx/tabs/tab-header-outlet.ts","ng://@allianz/ngx-ndbx/tabs/tab-label.ts","ng://@allianz/ngx-ndbx/tabs/tab-content.ts","ng://@allianz/ngx-ndbx/tabs/tab.ts","ng://@allianz/ngx-ndbx/tabs/tab-body.ts","ng://@allianz/ngx-ndbx/tabs/tab-label-wrapper.ts","ng://@allianz/ngx-ndbx/tabs/tab-header.ts","ng://@allianz/ngx-ndbx/tabs/tab-group.ts","ng://@allianz/ngx-ndbx/tabs/tab-nav-bar.ts","ng://@allianz/ngx-ndbx/tabs/tabs.module.ts","ng://@allianz/ngx-ndbx/core/breakpoints.ts","ng://@allianz/ngx-ndbx/core/mapped-styles.ts","ng://@allianz/ngx-ndbx/card/card.component.ts","ng://@allianz/ngx-ndbx/card/card.module.ts","ng://@allianz/ngx-ndbx/card/selectable-card.ts","ng://@allianz/ngx-ndbx/card/selectable-card-change-event.ts","ng://@allianz/ngx-ndbx/card/selectable-card.component.ts","ng://@allianz/ngx-ndbx/card/card-header.component.ts","ng://@allianz/ngx-ndbx/card/card-footer.component.ts","ng://@allianz/ngx-ndbx/card/selectable-card.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n})\nexport class NdbxModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NdbxModule\n    };\n  }\n}\n","import {\n  ElementRef,\n  ChangeDetectorRef,\n  HostBinding\n} from '@angular/core';\n\n/** Type of a button. */\nexport type NxButtonType = 'primary' | 'secondary' | 'tertiary' | 'cta' | 'emphasis';\n\n/** Size of a button. */\nexport type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large' ;\n\nconst DEFAULT_SIZE = 'medium';\nconst DEFAULT_TYPE = 'primary';\n\n/** @docs-private */\nexport class NxButtonBase {\n  private _classNames: string;\n\n  /** @docs-private */\n  @HostBinding('class.nx-button--primary') get isPrimary(): boolean { return this.type === 'primary'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--secondary') get isSecondary(): boolean { return this.type === 'secondary'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--tertiary') get isTertiary(): boolean { return this.type === 'tertiary'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--cta') get isCta(): boolean { return this.type === 'cta'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--emphasis') get isEmphasis(): boolean { return this.type === 'emphasis'; }\n\n  /** @docs-private */\n  @HostBinding('class.nx-button--large') get isLarge(): boolean { return this.size === 'large'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--medium') get isMedium(): boolean { return this.size === 'medium'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--small-medium') get isSmallMedium(): boolean { return this.size === 'small-medium'; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--small') get isSmall(): boolean { return this.size === 'small'; }\n\n  /** @docs-private */\n  @HostBinding('class.nx-button--block') get isBlock(): boolean { return this.block; }\n  /** @docs-private */\n  @HostBinding('class.nx-button--negative') get isNegative(): boolean { return this.negative; }\n\n  /** @docs-private */\n  type: NxButtonType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  size: NxButtonSize = DEFAULT_SIZE;\n\n  negative: boolean = false;\n  block: boolean = false;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, private _elementRef: ElementRef) { }\n\n  public set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/primary|secondary|tertiary|cta|emphasis/) || [DEFAULT_TYPE];\n    this.type = type as NxButtonType;\n\n    const [size = null] = this._classNames.match(/small-medium|small|medium|large/) || [DEFAULT_SIZE];\n    this.size = size as NxButtonSize;\n\n    this.negative = /negative/.test(this._classNames);\n    this.block = /block/.test(this._classNames);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  public get classNames(): string {\n    return this._classNames;\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NxButtonBase } from './button-base';\n\n@Component({\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxButton]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['classNames:nxButton']\n})\n\nexport class NxButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { NxButtonBase } from './button-base';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'button[nxIconButton]',\n  templateUrl: './button.html',\n  styleUrls: ['button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['classNames:nxIconButton']\n})\nexport class NxIconButtonComponent extends NxButtonBase {\n  constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef) {\n    super(changeDetectorRef, elementRef);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxButtonComponent } from './button.component';\nimport { NxIconButtonComponent } from './icon-button.component';\n\n@NgModule({\n  declarations: [ NxButtonComponent, NxIconButtonComponent ],\n  exports: [ NxButtonComponent, NxIconButtonComponent ]\n})\nexport class NxButtonModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ChangeDetectorRef,\n  AfterContentInit,\n  OnDestroy,\n  ContentChildren,\n  QueryList,\n  Optional,\n  Self,\n  OnInit,\n  ContentChild,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NgControl,\n  NgForm,\n  FormGroupDirective,\n  FormControl,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\nexport class NxCheckboxChangeEvent {\n  constructor(\n  /** The checked value of the checkbox. */\n  public checked: boolean,\n  /** The value of the checkbox. */\n  public value: string,\n  /** The component instance of the checkbox which emitted the change event. */\n  public checkbox: NxCheckboxComponent\n  ) {}\n}\n\n/** Size of the label. */\nexport type NxCheckboxLabelSize = 'small' | 'large';\n\n@Component({\n  selector: 'nx-checkbox-group',\n  templateUrl: 'checkbox-group.component.html',\n  styleUrls: ['checkbox-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox-group]': 'true',\n    '[class.nx-checkbox-group--negative]': 'negative',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-labelledby]': 'this._label?.id  || null',\n    '[attr.role]': '\"group\"',\n  }\n})\nexport class NxCheckboxGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(forwardRef(() => NxCheckboxComponent), {descendants: true})\n  _checkboxes: QueryList<NxCheckboxComponent>;\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {static: false})\n   _label: NxLabelComponent;\n\n  readonly _stateChanges = new Subject<void>();\n  @Output() selectionChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  private _id: string = `nx-checkbox-group-${nextId++}`;\n  /** Sets the Id of the checkbox group. */\n  @Input()\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string;\n  /** Sets the name of the checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Disables all checkboxes inside the nx-checkbox-group. */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    if (this._label) {\n      this._label.disabled = this._disabled;\n    }\n    this._stateChanges.next();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Set the negative styles for all the checkboxes inside the nx-checkbox-group */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n    this._stateChanges.next();\n  }\n\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _labelSize: NxCheckboxLabelSize;\n  /** Sets the label size of the checkboxes inside the group */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._stateChanges.next();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return this._labelSize;\n  }\n\n  /** Whether the nx-checkbox-group are required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  private _value: any;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.ngControl) {\n      if (!!this._value) {\n        this._updateSelectedCheckboxFromValue();\n      }\n\n      this._value = this._checkboxes\n                        .filter(checkbox => checkbox.checked)\n                        .map(cb => cb.value);\n    }\n\n    this._updateSelectedCheckboxFromValue();\n    this._checkboxes.changes.subscribe(() => {\n      this._value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n      if (this.ngControl) {\n        this.ngControl.control.setValue(this._value);\n      }\n      this._updateSelectedCheckboxFromValue();\n    });\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    if (this._value !== value) {\n      this._value = value;\n      this._updateSelectedCheckboxFromValue();\n    }\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n\n  private _onTouched: () => any = () => {};\n\n  private _updateSelectedCheckboxFromValue(): void {\n    if (this._checkboxes && this._checkboxes.length && !!this._value && this._value.length) {\n      this._checkboxes.map(checkbox => {\n        checkbox.checked = this._value.indexOf(checkbox.value) !== -1;\n      });\n    }\n  }\n\n  /** @docs-private */\n  change(value) {\n    value = this._checkboxes.filter(checkbox => checkbox.checked).map(cb => cb.value);\n    this._onChange(value);\n    if (this._onTouched) {\n      this._onTouched();\n    }\n    this.selectionChange.emit(new NxCheckboxChangeEvent(value.checked, value.value, value));\n  }\n}\n\n@Component({\n  selector: 'nx-checkbox',\n  templateUrl: 'checkbox.component.html',\n  styleUrls: ['checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-checkbox]': 'true',\n    '[class.disabled]': 'disabled',\n    '[class.nx-checkbox--label-large]': 'labelSize === \"large\"',\n    '[class.nx-checkbox--label-small]': 'labelSize === \"small\"',\n    '[class.nx-checkbox--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.required]': 'required',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  }\n})\n\nexport class NxCheckboxComponent implements ControlValueAccessor, OnDestroy, OnInit {\n  private _parentChangeSubscription: Subscription;\n  private _id: string = (nextId++).toString();\n  private _disabled: boolean = false;\n  private _negative: boolean = false;\n  private _labelSize: NxCheckboxLabelSize = 'small';\n  private _checked = false;\n  private _name: string = null;\n\n  /** @docs-private */\n  @ViewChild('checkboxLabelWrapper', { static: true }) _checkboxLabelWrapper: ElementRef;\n\n  /**\n   * Id of the checkbox.\n   *\n   * If not set, the checkbox gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-checkbox-${this._id}`;\n  }\n\n  /** Name of the checkbox. */\n  @Input()\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name(): string {\n    return (this.checkboxGroup && this.checkboxGroup.name) ? this.checkboxGroup.name : this._name;\n  }\n\n  /** Whether the checkbox is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.disabled) ? this.checkboxGroup.disabled : this._disabled;\n  }\n\n  /**\n   * Sets the label size of the checkbox. Default value: small\n   */\n  @Input()\n  set labelSize(value: NxCheckboxLabelSize) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get labelSize(): NxCheckboxLabelSize {\n    return (this.checkboxGroup && this.checkboxGroup.labelSize) ? this.checkboxGroup.labelSize : this._labelSize;\n  }\n\n  /**\n   * Whether the checkbox has negative styling.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return (this.checkboxGroup && this.checkboxGroup.negative) ? this.checkboxGroup.negative : this._negative;\n  }\n\n  /** Whether the checkbox is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      if (this._indeterminate) {\n        this._setIndeterminate(false);\n      }\n      this._setChecked(newValue);\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  private _indeterminate = false;\n\n  /** Whether the checkbox is indeterminated. */\n  @Input()\n  set indeterminate(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._indeterminate !== newValue) {\n      if (this._checked) {\n        this._setChecked(false);\n      }\n      this._setIndeterminate(newValue);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get indeterminate() {\n    return this._indeterminate;\n  }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  private _required: boolean;\n\n  /** Sets the value of the checkbox. Default value is the checked status. */\n  @Input()\n  get value(): string {\n    return this._value ? this._value : this.checked.toString();\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _value: string;\n\n  /** An event emitted when the indeterminate value has changed */\n  @Output()\n  indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits the boolean checked value of the changed checkbox.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>(false);\n\n  /** An event emitted when the checked value has changed.\n   *\n   * Emits a NxCheckboxChangeEvent.\n   */\n  @Output()\n  checkboxChange: EventEmitter<NxCheckboxChangeEvent> = new EventEmitter<NxCheckboxChangeEvent>();\n\n  /** @docs-private */\n  get labelHasContent() {\n    return !!this._checkboxLabelWrapper.nativeElement.innerHTML.trim();\n  }\n\n  /** @docs-private\n   * Callback for when the content of the label has changed.\n   */\n  labelContentChanged() {\n    this._changeDetectorRef.detectChanges();\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() public checkboxGroup: NxCheckboxGroupComponent,\n              @Self() @Optional() public ngControl: NgControl,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n\n    const parent = this._parentFormGroup || this._parentForm;\n    let control = null;\n\n    if (this.checkboxGroup && this.checkboxGroup.ngControl) {\n      control = this.checkboxGroup.ngControl;\n    } else {\n      control = this.ngControl ? this.ngControl.control as FormControl : null;\n    }\n\n    return this._errorStateMatcher.isErrorState(control, parent);\n  }\n\n  ngOnInit() {\n    if (this.checkboxGroup) {\n      this.name = this.checkboxGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.checkboxGroup._stateChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  private _setIndeterminate(value: boolean) {\n    this._indeterminate = value;\n    this.indeterminateChange.emit(this._indeterminate);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _setChecked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Toggles the checked state of the checkbox. */\n  public toggle() {\n    this.checked = !this.checked;\n    this.onChangeCallback(this.checked);\n    if (this.checkboxGroup !== null) {\n      this.checkboxGroup.change(this);\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  _onInputClick(event): void {\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this.checkedChange.emit(this._checked);\n      this.checkboxChange.emit(this._createChangeEvent(this._checked));\n    }\n  }\n\n  /**@docs-private */\n  private _createChangeEvent(checkedValue: boolean): NxCheckboxChangeEvent {\n    const event = new NxCheckboxChangeEvent(checkedValue, this.value, this);\n    event.checked = checkedValue;\n    event.value = this.value;\n    event.checkbox = this;\n    return event;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxCheckboxComponent } from './checkbox.component';\nimport { NxCheckboxGroupComponent } from './checkbox.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxErrorModule, NxLabelModule } from '@allianz/ngx-ndbx/base';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n@NgModule({\n  declarations: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent\n  ],\n  exports: [\n    NxCheckboxComponent,\n    NxCheckboxGroupComponent,\n    NxLabelModule,\n    NxErrorModule\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    ObserversModule\n  ]\n})\nexport class NxCheckboxModule { }\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component, ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormGroupDirective,\n  NG_VALUE_ACCESSOR,\n  NgControl, NgForm,\n} from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { NxLabelComponent } from '@allianz/ngx-ndbx/base';\n\n/** The change event object emitted by the radio group and radio button. */\nexport class NxRadioChange {\n  source: NxRadioComponent;\n  value: any;\n\n  /** The NxRadioComponent that emits the change event. NxRadioChange object can be instantiated with source radio component and a value. */\n  constructor(source: NxRadioComponent, value: any) {\n    this.source = source;\n    this.value = value;\n  }\n}\n\n/** Label Size Types */\nexport type LabelSize  = 'small' | 'big';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-radio-group',\n  templateUrl: './radio-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'radiogroup',\n    '[attr.id]': 'id',\n    '[attr.required]': 'required',\n    '[class.nx-radio-group--negative]': 'negative',\n    '[attr.aria-labelledby]': 'this._label?.id  || null'\n  },\n  styleUrls: [ 'radio-button-group.scss' ]\n})\nexport class NxRadioGroupComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n\n  @ContentChild(forwardRef(() => NxLabelComponent), {static: false})\n  _label: NxLabelComponent;\n\n  // emits when the internal state changes on properties which are relevant\n  // for the radio buttons so that they can mark themself for check\n  readonly _stateChanges = new Subject<void>();\n\n  private _id: string = `nx-radio-group-${nextId++}`;\n  /** Sets the Id of the radio group. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _disabled: boolean = false;\n\n  /** Whether every radio button in this group should be disabled. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    // inform childs about the change where CD should be triggered\n    this._stateChanges.next();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the radio group should have negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _required: boolean = false;\n  /** Sets if at least an option should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this._stateChanges.next();\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /** An event is dispatched on each group value change. */\n  @Output('nxGroupValueChange') groupValueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _name: string = `nx-radio-group-${nextId++}`;\n  private _value: any = null;\n  // The currently selected radio button; should match _value\n  private _selected: NxRadioComponent | null = null;\n\n  @ContentChildren(forwardRef(() => NxRadioComponent), {descendants: true})\n  _radios: QueryList<NxRadioComponent>;\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  get name(): string {\n    return this._name;\n  }\n\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio group, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._stateChanges.next();\n  }\n\n  get value(): any { return this._value; }\n\n  /** Sets the value of the selected radion button in this group (Default: null). */\n  @Input('nxValue')\n  set value(newValue: any) {\n    if (this._value !== newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl,\n              @Optional() public _parentForm: NgForm,\n              @Optional() public _parentFormGroup: FormGroupDirective) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._updateSelectedRadioFromValue();\n    this._checkSelectedRadioButton();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group */\n  change(value) {\n    this.value = value;\n    this._onChange(value);\n    this.groupValueChange.emit(new NxRadioChange(this._selected, this._value));\n  }\n\n  /** @docs-private this is meant to be called by the radio buttons in this group. */\n  touch() {\n    if (this._onTouched) {\n      this._onTouched();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const isAlreadySelected = this._selected != null && this._selected.value === this._value;\n\n    if (this._radios != null && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value === radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n\n  private _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n}\n\n@Component({\n  selector: 'nx-radio',\n  templateUrl: 'radio-button.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'radio-button.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRadioComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[attr.required]': 'required',\n    '[class.nx-radio-button--small-label]': 'labelSize === \"small\"',\n    '[class.nx-radio-button--big-label]': 'labelSize === \"big\"',\n    '[class.nx-radio--negative]': 'negative',\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null',\n  }\n})\nexport class NxRadioComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  /** @docs-private */\n  @ViewChild('radioLabelWrapper', { static: true }) _radioLabelWrapper: ElementRef;\n  private _parentChangeSubscription: Subscription;\n\n  private _id: string = `nx-radio-${nextId++}`;\n  /** Sets the id of the radio component. */\n  @Input('id')\n  set id(value: string) {\n    if (this._id !== value) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  /** @docs-private */\n  get inputId(): string {\n    return `${this.id}-input`;\n  }\n\n  /** @docs-private */\n  get labelId(): string {\n    return `${this.id}-label`;\n  }\n\n  private _name: string = null;\n  // this is also the name attribute, which is mandatory in conjunction with ngModel, hence no nx prefix\n  /** Sets the name of this radio component, which is mandatory in conjunction with ngModel (Default: null). */\n  @Input('name')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return (this.radioGroup && this.radioGroup.name) ? this.radioGroup.name : this._name;\n  }\n\n  private _labelSize: LabelSize = 'big';\n  /** Sets the label size of the radio button.\n   * The default value is `big`.\n  */\n  @Input()\n  set labelSize(value: LabelSize) {\n    if (this._labelSize !== value) {\n      this._labelSize = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelSize(): LabelSize {\n    return this._labelSize;\n  }\n\n  private _negative:  boolean = false;\n  /**\n   * Whether the negative set of styles should be used.\n   *\n   * If the radio button is placed in a radio group, the negative value\n   * is overwritten by the group's negative value.\n   */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this.radioGroup ? this.radioGroup.negative : this._negative;\n  }\n\n  /** An event is dispatched on each value change. */\n  @Output('nxValueChange') valueChange: EventEmitter<NxRadioChange> = new EventEmitter<NxRadioChange>();\n  private _value: any = null;\n  private _checked: boolean = false;\n  private _disabled: boolean = false;\n  private _required: boolean = false;\n\n  get value(): any {\n    return this._value;\n  }\n\n  /** @docs-private */\n  get labelHasContent(): boolean {\n    return !!this._radioLabelWrapper.nativeElement.innerHTML.trim();\n  }\n\n  /** @docs-private\n   * Callback for when the content of the label has changed.\n   */\n  labelContentChanged() {\n    this._changeDetectorRef.detectChanges();\n  }\n\n  /** Sets the value of the form control element (Default: null). */\n  @Input('nxValue')\n  set value(value: any) {\n    if (value !== this._value) {\n      this._value = value;\n      this.onChangeCallback(value);\n    }\n  }\n\n  /** @docs-private */\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  /** Whether the radio component is selected. */\n  @Input('nxChecked')\n  set checked(value: boolean) {\n    if (this._checked !== value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup && this.radioGroup.disabled);\n  }\n\n  /** Whether the radio button should be disabled or not. */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  get required(): boolean {\n    return this._required || (this.radioGroup && this.radioGroup.required);\n  }\n\n  /** Sets if at least a radio button should be selected. */\n  @Input()\n  set required(value: boolean) {\n    this._required = value;\n    // needed when the outer component is set to onPush because it is a native property\n    // on the host element\n    this._changeDetectorRef.markForCheck();\n  }\n\n  constructor(@Optional() public radioGroup: NxRadioGroupComponent,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.radioGroup) {\n      this.name = this.radioGroup.name;\n      // when relevant properties of the parent like name and disabled change\n      // we need to let change detection know that the template needs an update\n      this._parentChangeSubscription = this.radioGroup._stateChanges.subscribe(()  => {\n        this._changeDetectorRef.markForCheck();\n      });\n\n      if (this.radioGroup.value === this._value) {\n        this._checked = true;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === this._value) {\n      this._checked = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  private onChangeCallback = (_: any) => {};\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  private onTouchedCallback = () => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n\n    if (this.radioGroup) {\n      this.radioGroup.touch();\n    }\n  }\n\n  _onInputChange(event: Event) {\n    event.stopPropagation();\n    this._checked = true;\n    this.valueChange.emit(new NxRadioChange(this, this._value));\n    this.onChangeCallback(this.value);\n\n    if (this.radioGroup && this.value !== this.radioGroup.value) {\n      this.radioGroup.change(this.value);\n    }\n  }\n\n  _onInputClick(event: Event) {\n    // make sure click event propagation on the visually hidden input\n    // are stopped to prevent multiple events bubbling up.\n    event.stopPropagation();\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    const form = this.radioGroup && (this.radioGroup._parentFormGroup || this.radioGroup._parentForm);\n    return !!(this.radioGroup && this.radioGroup.ngControl && this.radioGroup.ngControl.invalid\n      && (this.radioGroup.ngControl.touched || (form && form.submitted)));\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxRadioComponent } from './radio-button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxRadioGroupComponent } from './radio-button';\nimport { NxErrorModule, NxLabelModule } from '@allianz/ngx-ndbx/base';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n@NgModule({\n  declarations: [\n    NxRadioComponent,\n    NxRadioGroupComponent\n  ],\n  exports: [\n    NxRadioComponent,\n    NxRadioGroupComponent,\n    NxErrorModule,\n    NxLabelModule\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    ObserversModule\n  ]\n})\nexport class NxRadioModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** A type that specifies the font size of a copytext. */\nexport type NxCopytextType = 'small' | 'medium' | 'normal' | 'large';\n\nconst DEFAULT_TYPE = 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'p[nxCopytext]',\n  styleUrls: ['copytext.component.scss'],\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-copy]': 'true',\n    '[class.nx-copy--small]': 'type === \"small\"',\n    '[class.nx-copy--medium]': 'type === \"medium\"',\n    '[class.nx-copy--normal]': 'type === \"normal\"',\n    '[class.nx-copy--large]': 'type === \"large\"',\n    '[class.nx-copy--negative]': 'negative',\n  }\n})\nexport class NxCopytextComponent {\n  private _classNames: string;\n\n  /** @docs-private */\n  type: NxCopytextType = DEFAULT_TYPE;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /**\n   * Sets the type and whether the negative set of styling should be used.\n   *\n   * You can combine the values of type NxCopytextType and 'negative'.\n   *\n   * Default type: 'normal'\n   */\n  @Input('nxCopytext')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    this._classNames = value;\n    const [type = null] = this._classNames.match(/small|medium|normal|large/) || [DEFAULT_TYPE];\n    this.type = type as NxCopytextType;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NxCopytextComponent } from './copytext.component';\n\n@NgModule({\n  declarations: [ NxCopytextComponent ],\n  exports: [ NxCopytextComponent ]\n})\nexport class NxCopytextModule { }\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n/** Types of headlines */\nexport type HeadlineType = 'page' | 'page-bold-caps' | 'section' | 'subsection-large'\n                    | 'subsection-medium' | 'subsection-small' | 'subsection-xsmall';\n\nconst DEFAULT_TYPE = 'section';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxHeadline]',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['headline.component.scss'],\n  host: {\n    '[class.nx-heading--page]': 'type === \"page\"',\n    '[class.nx-heading--page-bold-caps]': 'type === \"page-bold-caps\"',\n    '[class.nx-heading--section]': 'type === \"section\"',\n    '[class.nx-heading--subsection-large]': 'type === \"subsection-large\"',\n    '[class.nx-heading--subsection-medium]': 'type === \"subsection-medium\"',\n    '[class.nx-heading--subsection-small]': 'type === \"subsection-small\"',\n    '[class.nx-heading--subsection-xsmall]': 'type === \"subsection-xsmall\"',\n\n    '[class.nx-heading--negative]': 'negative',\n  }\n})\n\nexport class NxHeadlineComponent {\n  private _classNames: string;\n  /** @docs-private */\n  public type: HeadlineType = DEFAULT_TYPE;\n  /** @docs-private */\n  public negative: boolean = false;\n\n  /** Changes the type of the headline which affects the visual appearance.\n   * You can combine a HeadlineType and 'negative'. */\n  @Input('nxHeadline')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const typeRegex = /page-bold-caps|page|section|subsection-large|subsection-medium|subsection-small|subsection-xsmall/;\n    const [type = null] = this._classNames.match(typeRegex) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxHeadlineComponent } from './headline.component';\n\n@NgModule({\n  declarations: [ NxHeadlineComponent ],\n  exports: [ NxHeadlineComponent ]\n})\nexport class NxHeadlineModule { }\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  Renderer2,\n  Input,\n  ChangeDetectorRef\n} from '@angular/core';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\n\n/** The size of the link. */\nexport type NxLinkSize = 'small' | 'large';\n\nconst MAPPING = {\n  'black': 'nx-link--black',\n  'negative': 'nx-link--negative',\n  'text': 'nx-link--text',\n  'block': 'nx-link--block',\n  'icon-right': 'nx-link--icon-right'\n};\n\nconst DEFAULT_CLASSES = [ 'nx-link' ];\n\n@Component({\n  selector: 'nx-link',\n  styleUrls: [ './link.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '<ng-content></ng-content>',\n  inputs: ['classNames: nxStyle'],\n  host: {\n    '[class.nx-link--small]': 'this.size === \"small\"',\n    '[class.nx-link--large]': 'this.size === \"large\"'\n  }\n})\n\nexport class NxLinkComponent extends MappedStyles implements AfterContentInit {\n  private _size: NxLinkSize = 'small';\n\n  /** @docs-private */\n  @ContentChild(NxIconComponent, {static: false}) icon: NxIconComponent;\n\n  /**\n   * Sets the style of the link, thereby altering the visual appearance.\n   *\n   * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).\n   */\n  classNames;\n\n  /** Sets the size of the link. Default: 'small'. */\n  @Input()\n  set size(value: NxLinkSize) {\n    if (this._size !== value) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): NxLinkSize {\n    return this._size;\n  }\n\n  constructor(_elementRef: ElementRef,\n              protected _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    super(MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n  }\n\n  ngAfterContentInit() {\n    // Add a specific link class that the css gets more specific than the nx-icon css\n    const icons = this.elementRef.nativeElement.querySelectorAll('nx-icon');\n    for (let i = 0; i < icons.length; i++) {\n      this._renderer.addClass(icons[i], 'nx-link__icon');\n    }\n  }\n\n  /**\n   * @docs-private\n   * getter used for the modal component as a quickfix\n   * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive\n   * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a\n   * way to reach the elementRef of the component until the modal gets refactored.\n   */\n  get elementRef() {\n    return this._elementRef;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxLinkComponent } from './link.component';\n\n@NgModule({\n  declarations: [ NxLinkComponent ],\n  exports: [ NxLinkComponent ]\n})\nexport class NxLinkModule {\n}\n","/** @docs-private */\nexport abstract class ToggleButton {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  tabIndex;\n  checkedChange;\n  selectionChange;\n  toggleButton;\n  abstract toggle(event);\n  abstract setGroupSelection();\n\n}\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil, tap, startWith, filter } from 'rxjs/operators';\nimport { merge, Subject } from 'rxjs';\n\nimport { ToggleButton } from '../circle-toggle/toggle-button';\nimport { ToggleChangeEvent } from '../circle-toggle/circle-toggle.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle-group',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./circle-toggle-group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleGroupComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.is-responsive]': 'responsive',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-labelledby]': 'name',\n    '[attr.name]': 'name',\n    '[attr.id]': 'id',\n    '[class.nx-circle-toggle-group]': 'true',\n    'role': 'radiogroup'\n  }\n})\nexport class NxCircleToggleGroupComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n\n  @ContentChildren(ToggleButton) private _buttons: QueryList<ToggleButton>;\n\n  private _id = `nx-circle-toggle-group-${nextId++}`;\n\n  /**\n   * Id of the circle toggle group.\n   *\n   * If not set, the circle toggle group gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n  private _destroyed: Subject<void> = new Subject();\n\n  /** An event emitted when the selection changes. Outputs the value of the currently selected button. */\n  @Output()\n  valueChange: EventEmitter<any> = new EventEmitter();\n\n  private _name: string = `toggle-group-${nextId++}`;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this.updateToggleButtonsNames();\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle group is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.disabled = value);\n    }\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  _negative: boolean = false;\n  /** Whether the circle toggle group uses the negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n    }\n    if (this.buttons) {\n      this.buttons.forEach(button => button.negative = value);\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _value;\n  /** The value of the selected circle toggle in the circle toggle group. */\n  @Input()\n  set value(value: string) {\n    this.writeValue(value);\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  private _responsive: boolean = true;\n  /** Whether the circle toggle group has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.responsive) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive(): boolean {\n    return this._responsive;\n  }\n\n  private onChangeCallback = (value: string) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  writeValue(value: any) {\n    if (this.value !== value) {\n      this._value = value;\n      this.notifySelectedChild(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  ngAfterViewInit() {\n\n    this.subscribeToSelectionChanges();\n\n    // react if a content child is deleted, added etc.\n    this.buttons.changes\n      .pipe(\n        startWith(this.buttons),\n        filter(toggles => toggles.length > 0),\n        tap(toggles =>\n          Promise.resolve().then(() => {\n            toggles.forEach(toggle => toggle.toggleButton.resetClasses());\n            this.buttons.first.toggleButton.setFirstButton();\n            this.buttons.last.toggleButton.setLastButton();\n          })\n        ),\n        takeUntil(this._destroyed))\n      .subscribe(() => this.subscribeToSelectionChanges());\n  }\n\n  /** @docs-private */\n  subscribeToSelectionChanges() {\n    const changedOrDestroyed = merge(this.buttons.changes, this._destroyed);\n\n    merge(...this.buttons.map(button => button.selectionChange))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: ToggleChangeEvent) => {\n        this.onChangeCallback(change.value);\n        this.valueChange.emit(change.value);\n      });\n  }\n\n  /**\n   * @docs-private\n   * inform the selected button if the group selection is set programattically at the beginning\n   */\n  notifySelectedChild(newValue: string) {\n    if (this.buttons) {\n      const selected = this.buttons.find((button) => button.value === newValue);\n      if (selected) {\n        selected.setGroupSelection();\n      }\n    }\n  }\n\n  /** @docs-private */\n  updateToggleButtonsNames(): void {\n    if (this.buttons) {\n      this.buttons.forEach(button => button.name = this.name);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get selectedButton(): ToggleButton {\n    return this.buttons ? this.buttons.find(button => button.checked) : null;\n  }\n\n  /** @docs-private */\n  get buttons() {\n    return this._buttons;\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-mobile-toggle-button',\n  templateUrl: 'mobile-toggle-button.component.html',\n  styleUrls: ['mobile-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-first]': 'isFirst',\n    '[class.is-last]': 'isLast',\n    '[class.is-flipped]': 'checked'\n  }\n})\nexport class NxMobileToggleButtonComponent {\n\n  @Input()\n  checked: boolean = false;\n\n  @Input()\n  negative: boolean = false;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  circleText: string;\n\n  /** @docs-private */\n  isFirst: boolean;\n\n  /** @docs-private */\n  isLast: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  setFirstButton() {\n    this.isFirst = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.isLast = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    this.isFirst = false;\n    this.isLast = false;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input, Output, ViewChild, Optional, OnInit, OnDestroy, AfterViewInit, HostListener, ChangeDetectorRef, ChangeDetectionStrategy\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\nimport { ToggleButton } from './toggle-button';\nimport { NxCircleToggleGroupComponent } from '../circle-toggle-group/circle-toggle-group.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NxMobileToggleButtonComponent } from '../mobile-toggle-button/mobile-toggle-button.component';\n\nexport class ToggleChangeEvent {\n  /** A toggle button */\n  button: ToggleButton;\n\n  /** The value of the toggle button that is sent with the event. */\n  value: string;\n\n  constructor(button, value) {\n    this.button = button;\n    this.value = value;\n  }\n}\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-circle-toggle',\n  templateUrl: 'circle-toggle.component.html',\n  styleUrls: ['circle-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ToggleButton,\n      useExisting: forwardRef(() => NxCircleToggleComponent)\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxCircleToggleComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-toggle-circle]': 'true',\n    '[class.in-group]': 'inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-responsive]': 'responsive'\n  }\n})\nexport class NxCircleToggleComponent extends ToggleButton implements\nOnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\n\n  private _id: string = `toggle-button-${nextId++}`;\n\n  /** @docs-private */\n  inGroup: boolean = false;\n\n  /**\n   * Id of the circle toggle.\n   *\n   * If not set, the circle toggle gets an incremented value by default.\n   */\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _name: string = null;\n\n  /** Name that is used for accessibility. */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * An event that is emitted when the checked state fo the circle toggle changes.\n   */\n  @Output()\n  checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * An event that is emitted when the checked state of the circle toggle changes.\n   * The event object contains the circle toggle itself and its value (see ToggleChangeEvent).\n   */\n  @Output()\n  selectionChange = new EventEmitter<ToggleChangeEvent>();\n\n  _checked: boolean = false;\n  /** Whether the circle toggle is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.checked !== newValue) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _value: string = null;\n\n  /** The value that is used in the model. */\n  @Input()\n  set value(newValue: string) {\n    this._value = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  private _iconName: string = null;\n  /** Id of the icon that should be displayed. */\n  @Input('icon')\n  set iconName(name: string) {\n    this._iconName = name;\n    this._changeDetectorRef.markForCheck();\n  }\n  get iconName(): string {\n    return this._iconName;\n  }\n\n  private _svg: string = null;\n\n  /** SVG that is displayed if the circle toggle is unchecked. */\n  @Input()\n  set svg(src: string) {\n    this._svg = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svg(): string {\n    return this._svg;\n  }\n\n  private _svgChecked: string = null;\n\n  /** SVG that is displayed if the circle toggle is checked. */\n  @Input()\n  set svgChecked(src: string) {\n    this._svgChecked = src;\n    this._changeDetectorRef.markForCheck();\n  }\n  get svgChecked(): string {\n    return this._svgChecked;\n  }\n\n  private _circleText: string = null;\n\n  /** A text that is displayed inside the circle toggle. */\n  @Input()\n  set circleText(value: string) {\n    if (value !== this._circleText) {\n      this._circleText = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get circleText(): string {\n    return this._circleText;\n  }\n\n  private _label: string = null;\n\n  /** Label displayed below the circle. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n\n  private _hint: string = null;\n\n  /** Additional hint displayed below the label. */\n  @Input()\n  set hint(value: string) {\n    this._hint = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get hint(): string {\n    return this._hint;\n  }\n\n  private _negative;\n\n  /** Whether the circle toggle uses the negative set of styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.negative !== newValue) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _responsive;\n\n  /** Whether the circle toggle has a responsive behavior. */\n  @Input()\n  set responsive(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.responsive !== newValue) {\n      this._responsive = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get responsive() {\n    return this._responsive;\n  }\n\n  private _disabled: boolean;\n\n  /** Whether the circle toggle is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  /** @docs-private */\n  @ViewChild(NxMobileToggleButtonComponent, { static: true })\n  toggleButton: NxMobileToggleButtonComponent;\n\n  private _hover: boolean = false;\n\n  /** touched is set to true on touch devices. */\n  _touched: boolean = false;\n\n  /** @docs-private */\n  @HostListener('mouseenter') onMouseEnter() {\n    if (!this._touched) {\n      this._hover = true;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('mouseleave') onMouseLeave() {\n    if (!this._touched) {\n      this._hover = false;\n    }\n  }\n\n  /** @docs-private */\n  @HostListener('touchstart') onTouchStart() {\n    this._touched = true;\n  }\n\n  _removeUniqueSelectionListener: () => void = () => { };\n\n  private onChangeCallback = (checked: boolean) => { };\n  private onTouchedCallback = () => { };\n\n  constructor(/** @docs-private */ @Optional() public toggleGroup: NxCircleToggleGroupComponent,\n    private _checkedDispatcher: UniqueSelectionDispatcher, private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n\n    if (this.toggleGroup) {\n      this.name = this.toggleGroup.name;\n    }\n  }\n\n  ngOnInit() {\n    if (this.toggleGroup) {\n      this.attachListenerForGroup();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.toggleGroup) {\n      Promise.resolve().then(() => {\n        this.inGroup = true;\n        this.negative = this.toggleGroup.negative;\n        this.disabled = this.toggleGroup.disabled;\n        this.responsive = this.toggleGroup.responsive;\n        this.id = this.toggleGroup.id + `-button-${nextId++}`;\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // function returned by the listener\n    this._removeUniqueSelectionListener();\n  }\n\n  /** @docs-private */\n  attachListenerForGroup() {\n    this._removeUniqueSelectionListener =\n      this._checkedDispatcher.listen((groupId: string, buttonId: string) => {\n        if (this.id !== buttonId && groupId === this.toggleGroup.id) {\n          this.checked = false;\n        }\n      });\n  }\n\n  writeValue(newValue): void {\n    this.checked = newValue;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  toggle(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if ((this.toggleGroup && this.checked) || this.disabled) {\n      return;\n    } else {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n      this.selectionChange.emit(new ToggleChangeEvent(this, this.value));\n      if (this.toggleGroup) {\n        this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n      }\n    }\n  }\n\n  /**\n   * @docs-private\n   *\n   * method called by the group if the internal value of the group is changed programatically,\n   * does not trigger change emission\n   */\n  setGroupSelection() {\n    // propagate changes only if the value in the group is different than the button checked value\n    if (!this.checked) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this._checkedDispatcher.notify(this.toggleGroup.id, this.id);\n    }\n  }\n\n  /** @docs-private */\n  get svgButton(): boolean {\n    return !!this.svg && !!this.svgChecked;\n  }\n\n  /** @docs-private */\n  get svgUrl(): string {\n    let useFilledSvg = this.checked || (!this.disabled && this._hover);\n    if (this.negative) {\n      useFilledSvg = !useFilledSvg;\n    }\n    return useFilledSvg ? this.svgChecked : this.svg;\n  }\n\n  /** @docs-private */\n  get type() {\n    return this.toggleGroup ? 'radio' : 'checkbox';\n  }\n\n  /** @docs-private */\n  handleEnterKey(event) {\n    if (!this.toggleGroup) {\n      this.toggle(event);\n    }\n  }\n}\n","\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-icon-toggle-button',\n  templateUrl: 'icon-toggle-button.component.html',\n  styleUrls: ['icon-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-circle-button]': 'true',\n    '[class.is-flipped]': 'checked',\n    '[class.has-checkmark]': '!inGroup',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-negative]': 'negative',\n    '[class.is-touched]': 'touched'\n  }\n})\nexport class NxIconToggleButtonComponent {\n\n  @Input()\n  inGroup: boolean = true;\n\n  @Input()\n  hint: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  checked: boolean;\n\n  @Input()\n  icon: string;\n\n  @Input('svg')\n  svgUrl: string;\n\n  @Input()\n  disabled: boolean;\n\n  @Input()\n  negative: boolean;\n\n  @Input()\n  touched: boolean;\n\n  @Input()\n  circleText: string;\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { NxCircleToggleGroupComponent } from './circle-toggle-group/circle-toggle-group.component';\nimport { NxCircleToggleComponent } from './circle-toggle/circle-toggle.component';\nimport { NxIconToggleButtonComponent } from './icon-toggle-button/icon-toggle-button.component';\nimport { NxMobileToggleButtonComponent } from './mobile-toggle-button/mobile-toggle-button.component';\n\n@NgModule({\n  declarations: [\n    NxCircleToggleGroupComponent,\n    NxCircleToggleComponent,\n    NxIconToggleButtonComponent,\n    NxMobileToggleButtonComponent\n  ],\n  exports: [\n    NxCircleToggleGroupComponent,\n    NxIconToggleButtonComponent,\n    NxCircleToggleComponent,\n    NxMobileToggleButtonComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule\n  ]\n})\nexport class NxCircleToggleModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nconst DEFAULT_TYPE = 'normal';\n\n/** Size of the list */\nexport type NxListSize = 'xsmall' | 'small' | 'normal';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ul[nxList], ol[nxList]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['list.component.scss'],\n  host: {\n    '[class.nx-list--xsmall]' : 'type === \"xsmall\"',\n    '[class.nx-list--small]' : 'type === \"small\"',\n    '[class.nx-list--normal]' : 'type === \"normal\"',\n    '[class.nx-list--negative]' : 'negative',\n    '[class.nx-list--ordered-circle]' : 'orderedCircle',\n  }\n})\n\nexport class NxListComponent {\n  private _classNames;\n\n  /** @docs-private */\n  type: NxListSize;\n\n  /** @docs-private */\n  negative: boolean = false;\n\n  /** @docs-private */\n  orderedCircle: boolean = false;\n\n  /**\n   * Sets the visual appearance of the list. You can combine different values:\n   *\n   * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based\n   * on modifiers. Defaults to normal.\n   *\n   * negative: Display the list with a negative set of styling.\n   *\n   * ordered-circle: Display the list item numbers in a color filled circle.\n   */\n  @Input('nxList')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n\n    const [type = null] = this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE];\n    this.type = type as any;\n\n    this.negative = !!this._classNames.match(/negative/);\n    this.orderedCircle = !!this._classNames.match(/ordered-circle/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'li[nxListIcon]',\n  template: `\n    <span class=\"nx-list__icon\">\n      <nx-icon [name]='name'></nx-icon>\n    </span>\n    <ng-content></ng-content>`\n})\n\nexport class NxListIconComponent {\n  /** @docs-private */\n  @ViewChild('viewRefPrefix', { read: ViewContainerRef, static: false }) viewRefPrefix: ViewContainerRef;\n\n  /** Sets the name of the icon to be displayed. */\n  @Input('nxListIcon') name: string;\n}\n","import { NgModule } from '@angular/core';\nimport { NxListComponent } from './list.component';\nimport { NxListIconComponent } from './list-icon.component';\nimport { NxIconModule, NxIconComponent } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxListComponent, NxListIconComponent ],\n  imports: [ NxIconModule ],\n  exports: [ NxListComponent, NxListIconComponent ],\n  bootstrap: [NxIconComponent]\n})\nexport class NxListModule {\n}\n","import {ElementRef, Input, Renderer2, ViewChild} from '@angular/core';\nimport { removeClasses } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n\n/** @docs-private */\nexport class NxRadioToggleButtonBaseComponent {\n  /** @docs-private */\n  toggleButtonId: string = 'nx-radio-toggle-button-' + nextId++;\n\n  /** @docs-private */\n  @Input('nxValue')\n  value: any;\n\n  /** @docs-private */\n  @ViewChild('toggleButtonLabelContainer', { static: true })\n  labelContainer: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('toggleInput', { static: true })\n  toggleInput: ElementRef;\n\n  constructor(\n    /** @docs-private */\n    protected renderer: Renderer2) {\n  }\n\n  /** @docs-private */\n  triggerInputClick(event) {\n    event.stopPropagation();\n    this.toggleInput.nativeElement.click();\n  }\n\n  /** @docs-private */\n  setFirstButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');\n  }\n\n  /** @docs-private */\n  setLastButton() {\n    this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');\n  }\n\n  /** @docs-private */\n  resetClasses() {\n    removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ChangeDetectorRef,\n  Optional,\n  Self,\n  DoCheck\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject, merge } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleButtonChange, NxRadioToggleButtonComponent } from './radio-toggle-button.component';\n\nlet nextId = 0;\n\nconst MAPPING = {\n  'negative': 'nx-radio-toggle--negative',\n  'small': 'nx-radio-toggle--small',\n};\n\n@Component({\n  selector: 'nx-radio-toggle',\n  templateUrl: 'radio-toggle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['radio-toggle.component.scss']\n})\nexport class NxRadioToggleComponent implements ControlValueAccessor, AfterViewInit, OnDestroy,\n  AfterContentInit, DoCheck  {\n\n  private _toggleId: string = (nextId++).toString();\n\n  private _selection: any;\n\n  private _destroyed: Subject<void> = new Subject();\n\n  private _disabled: boolean = false;\n  /** @docs-private */\n  errorState: boolean = false;\n  // emits to signal children to run change detection\n  _disableChange = new Subject<void>();\n\n  /** Sets the component to the disabled state.*/\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    const coerced = coerceBooleanProperty(value);\n    if (this._disabled !== coerced) {\n      this._disabled = coerced;\n      this._disableChange.next();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  @ViewChild('toggleContainer', { static: true })\n  private toggleContainer: ElementRef;\n\n  private _name: string;\n\n  /** Sets the name used for accessibility. */\n  @Input('nxName')\n  set name(value: string) {\n    if (this._name !== value) {\n      this._name = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  /** @docs-private */\n  @ContentChildren(NxRadioToggleButtonBaseComponent)\n  toggleButtons: QueryList<NxRadioToggleButtonBaseComponent> = new QueryList();\n\n  private onTouchedCallback = () => { };\n\n  private onChangeCallback = (option: any) => { };\n\n  constructor(private renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscribeToToggleButtonsChange();\n  }\n\n  ngAfterContentInit() {\n    const changedOrDestroyed = merge(this.toggleButtons.changes, this._destroyed);\n\n    merge(...this.toggleButtons.map((button: any) => button.onChecked))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe((change: NxRadioToggleButtonChange) => {\n        this._selection = change.value;\n        this.onChangeCallback(this._selection);\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._disableChange.complete();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** @docs-private */\n  subscribeToToggleButtonsChange(): void {\n    this.toggleButtons.changes\n      .pipe(\n        startWith(this.toggleButtons),\n        filter(toggles => toggles.length > 0),\n        takeUntil(this._destroyed)\n      ).subscribe((toggles) => {\n        toggles.forEach(toggle => {\n          toggle.resetClasses();\n          if (toggle.value === this.selection) {\n            // We need to defer the selection for the edge case that the button with the value of this.selection\n            // didn't exist yet but was added afterwards to prevent changed after checked errors\n            setTimeout(() => toggle.select());\n          }\n        });\n        toggles.first.setFirstButton();\n        toggles.last.setLastButton();\n      });\n  }\n\n  registerOnChange(onChangeCallback: any): void {\n    this.onChangeCallback = onChangeCallback;\n  }\n\n  registerOnTouched(onTouchedCallback: any): void {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n\n  /** Preselects the respective options. */\n  @Input('nxSelection')\n  writeValue(value: string): void {\n    this._selection = value;\n    const correspondingButton =\n      this.toggleButtons.find((button: NxRadioToggleButtonComponent) => button.value === this._selection);\n    if (correspondingButton) {\n      (correspondingButton as NxRadioToggleButtonComponent).select();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return `nx-radio-toggle-${this._toggleId}`;\n  }\n\n  /** Sets the modifiers for the component. */\n  @Input('nxStyle')\n  set style(value: string) {\n    const modifierClasses = mapClassNames(value, [], MAPPING);\n    modifierClasses.split(' ')\n      .forEach(className => this.renderer.addClass(this.toggleContainer.nativeElement, className));\n  }\n\n  /** @docs-private */\n  set selection(selection: any) {\n    this._selection = selection;\n    this.onChangeCallback(selection);\n  }\n\n  get selection(): any {\n    return this._selection;\n  }\n\n  /** @docs-private */\n  change(value) {\n    this.onChangeCallback(value);\n    if (this.onTouchedCallback) {\n      this.onTouchedCallback();\n    }\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n    }\n  }\n}\n","import { takeUntil } from 'rxjs/operators';\nimport {Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Inject, Input, Renderer2,\n  OnDestroy, HostListener\n} from '@angular/core';\n\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\n\n/** @docs-private */\nexport class NxRadioToggleButtonChange {\n  constructor(\n    public source: NxRadioToggleButtonComponent,\n    public value: any\n  ) {}\n}\n\n@Component({\n  selector: 'nx-radio-toggle-button',\n  styleUrls: ['radio-toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'radio-toggle-button.component.html',\n  providers: [\n    {\n      provide: NxRadioToggleButtonBaseComponent, useExisting: forwardRef(() => NxRadioToggleButtonComponent)\n    }\n  ],\n  host: {\n    '[class.has-error]': '_controlInvalid() || null',\n    '[attr.aria-invalid]': '_controlInvalid() || null'\n  }\n})\nexport class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent implements OnDestroy {\n\n  /** @docs-private */\n  // emits when the button is checked to notify the group\n  readonly onChecked = new Subject<NxRadioToggleButtonChange>();\n\n  private _destroyed: Subject<void> = new Subject();\n  private _disabled: boolean = false;\n  private _selected: boolean = false;\n\n  /** @docs-private */\n  @Input('nxDisabled')\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled || (this.radioToggle && this.radioToggle.disabled);\n  }\n\n  /** Sets the checked state and notify siblings and the parent group about the change */\n  // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!\n  // To select a button without firing the event use the select() function\n  @Input('nxSelected')\n  set selected(value: boolean) {\n    if (this._selected !== value) {\n      this._selected = value;\n      if (this._selected) {\n        this._notifySiblings();\n        this._emitCheckedEvent();\n\n        if (this.radioToggle !== null) {\n          this.radioToggle.change(this.value);\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => { };\n\n  constructor(\n    @Inject(forwardRef(() => NxRadioToggleComponent)) private radioToggle: NxRadioToggleComponent,\n    /** @docs-private */\n    renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _toggleDispatcher: UniqueSelectionDispatcher) {\n    super(renderer);\n\n    this._removeUniqueSelectionListener = this._toggleDispatcher.listen((id: string, radioToggleId: string) => {\n      if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {\n        this._selected = false;\n        // need to let change detector know in case that the select() function was called on another button\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n\n    this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._removeUniqueSelectionListener();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get toggleId(): string {\n    return this.radioToggle.id;\n  }\n\n  /** @docs-private */\n  get id(): string {\n    return this.toggleButtonId;\n  }\n\n  private _notifySiblings() {\n    const toggleId = this.radioToggle ? this.radioToggle.id : this.id;\n    this._toggleDispatcher.notify(this.id, toggleId);\n  }\n\n  private _emitCheckedEvent() {\n    this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));\n  }\n\n  // Does NOT emit the onChecked event. Useful when you need to set initial\n  // state. Used by the parent to set checked states on initialization and during\n  // writeValue() changes.\n  /** @docs-private */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._notifySiblings();\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n  /** @docs-private */\n  @HostListener('keyup.space')\n  onKeyupSpace(): void {\n    this._selected = false;\n    this._notifySiblings();\n  }\n\n  /** @docs-private */\n  _controlInvalid(): boolean {\n    return !!(this.radioToggle && this.radioToggle.errorState);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxRadioToggleComponent } from './radio-toggle.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxRadioToggleButtonComponent } from './radio-toggle-button.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  exports: [ NxRadioToggleComponent, NxRadioToggleButtonComponent ],\n  imports: [ CommonModule, FormsModule, NxIconModule ]\n})\nexport class NxRadioToggleModule { }\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** @docs-private */\n@Injectable()\nexport class NxModalService {\n\n  private subject = new Subject();\n  close$: Observable<any> = this.subject.asObservable();\n\n  close() {\n    this.subject.next();\n  }\n}\n","import { animate, animation, AnimationReferenceMetadata, style } from '@angular/animations';\n\nexport const fadeIn: AnimationReferenceMetadata = animation([\n    style({opacity: 0}),\n    animate('300ms', style({opacity: 1}))\n  ]);\n\nexport const fadeOut: AnimationReferenceMetadata = animation(\n  animate('300ms', style({opacity: 0}))\n);\n\nexport const scaleUp: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1)', opacity: 1}),\n    animate('250ms', style({transform: 'scale(1.3)', opacity: 0}))\n  ]);\n\nexport const scaleDown: AnimationReferenceMetadata = animation([\n    style({transform: 'scale(1.3)', opacity: 0}),\n    animate('250ms', style({transform: 'scale(1)', opacity: 1}))\n  ]);\n","import { OnDestroy, ChangeDetectionStrategy, Directive, ChangeDetectorRef } from '@angular/core';\nimport { Component, Input, OnInit, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { NxModalService } from './modal.service';\nimport { EventManager } from '@angular/platform-browser';\nimport { fadeIn, fadeOut, scaleDown, scaleUp } from './animations';\nimport { animateChild, query, transition, trigger, useAnimation } from '@angular/animations';\nimport { Subscription } from 'rxjs';\n\n/** Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll. */\n@Directive({\n  selector: '[nxModalActions]',\n  host: {\n    '[class.nx-modal__actions]': 'true'\n  }\n})\nexport class NxModalActionsDirective {}\n\n/** Scrollable container for the content of a modal. */\n@Directive({\n  selector: '[nxModalContent]',\n  host: {\n    '[class.nx-modal__content]': 'true'\n  }\n})\nexport class NxModalContentDirective {}\n\n@Component({\n  selector: 'nx-modal',\n  templateUrl: 'modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './modal.component.scss' ],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(fadeIn),\n        query('@scaleUpDown', [\n          animateChild()\n        ])\n      ]),\n      transition(':leave', [\n        query('@scaleUpDown', [\n          animateChild()\n        ]),\n        useAnimation(fadeOut)\n      ])\n    ]),\n    trigger('scaleUpDown', [\n      transition(':enter', useAnimation(scaleDown)),\n      transition(':leave', useAnimation(scaleUp))\n    ])\n  ],\n  host: {\n    '[@fadeInOut]': '',\n    '[class.nx-modal--fixed-width]': 'size === \"fixed\"'\n  }\n})\n\nexport class NxModalComponent implements OnInit, OnDestroy {\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the 'aria-label' of the modal close button needed for accessibility.\n   *\n   * Default value is 'Close dialog'.\n   */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n  /**\n   * A template reference variable pointing to the template\n   * which contains the content of the modal view.\n   */\n  @Input('nxBody') body: TemplateRef<any>;\n\n  /**\n   * Whether the modal view should close when the user hits the escape key.\n   * Default is true.\n   */\n  @Input('nxHideOnEsc') hideOnEsc: boolean = true;\n\n  /**\n   * Whether the modal view should close when the user clicks on the backdrop.\n   * Default is true.\n   */\n  @Input('nxHideOnClickOutside') hideOnClickOutside: boolean = true;\n\n  /**\n   * Whether the modal view should have a close icon in the upper right corner.\n   * Default is true.\n   */\n  @Input('nxShowCloseIcon') showCloseIcon: boolean = true;\n\n  /**\n   * Controls the width of the dialog.\n   * On `auto` the width is controlled by the content width,\n   * on `fixed` the dialog gets a fixed width of 736px if the viewport is big enough. */\n  @Input('nxSize') size: 'fixed' | 'auto';\n\n  /**\n   * An event emitted when the user clicks on the backdrop or uses the built-in close button.\n   * This event can be applied in conjunction with the custom open state handling\n   * of a modal to close it when requested by the user.\n   */\n  @Output('nxClose') closeEvent = new EventEmitter<void>();\n\n  private closeSubscription: Subscription = Subscription.EMPTY;\n  private removeEventListener: Function = undefined;\n\n  constructor(private modalService: NxModalService, private eventManager: EventManager, private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.closeSubscription = this.modalService.close$.subscribe(() => this.closeEvent.emit());\n\n    this.removeEventListener = this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      if (this.hideOnEsc) {\n        this.modalService.close();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.removeEventListener();\n    this.closeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickOutsideModal() {\n    if (this.hideOnClickOutside) {\n      this.modalService.close();\n    }\n  }\n\n  /** @docs-private */\n  closeButtonClick() {\n    this.modalService.close();\n  }\n\n  /** @docs-private */\n  cancelClick(evt: KeyboardEvent) {\n    evt.stopPropagation();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\n\nimport { NxModalService } from './modal.service';\n\n@Directive({selector: '[nxOpenModalOnClick]'})\nexport class NxOpenModalOnClickDirective implements OnInit, OnDestroy {\n\n  /** @docs-private */\n  elements: Array<any>;\n\n  private subscription: ISubscription;\n\n  constructor(private templateRef: TemplateRef<any>,\n              private viewContainer: ViewContainerRef,\n              private modalService: NxModalService) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.modalService.close$.subscribe(() => this.viewContainer.clear());\n  }\n\n  ngOnDestroy() {\n    this.elements.forEach(el => {\n      if (el.removeEventListener) {\n        el.removeEventListener('click', this.clickHandler);\n      }\n    });\n\n    this.subscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  clickHandler = (event: any) => {\n    this.viewContainer.clear();\n    // instantiate the template onto which this directive is applied\n    const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n    // we need to mark the viewRef explicitly if the modal is used inside another\n    // component that is using onPush change detection\n    viewRef.markForCheck();\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * One or multiple template reference variables pointing to elements\n   * which should trigger opening the modal on click.\n   *\n   * Value: A single template reference variable or an array of template reference variables.\n   */\n  @Input()\n  set nxOpenModalOnClick(elements) {\n    // also support the case where only one element is passed, check for the length property to be sure elements is an array\n    if (elements.length) {\n      this.elements = elements;\n    } else {\n      this.elements = [ elements ];\n    }\n    // add a click event listener to any element passed as property to this directive\n    this.elements.forEach(el => {\n      if (el.addEventListener) {\n        el.addEventListener('click', this.clickHandler);\n      // workaround until refactoring: if the reference is a component\n      // reference the component has to implement a getter to its own elementRef\n      } else if (el.elementRef) {\n        el.elementRef.nativeElement.addEventListener('click', this.clickHandler);\n      } else {\n        console.warn(`nxOpenModalOnClick: Given Element doesn't appear to be an ElementRef.`, el);\n      }\n    });\n  }\n\n}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {NxModalComponent, NxModalActionsDirective, NxModalContentDirective} from './modal.component';\nimport { CommonModule } from '@angular/common';\nimport { NxOpenModalOnClickDirective } from './modal-open-on-click.directive';\nimport { NxModalService } from './modal.service';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n@NgModule({\n  imports: [ CommonModule, A11yModule, NxIconModule ],\n  declarations: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n  exports: [\n    NxModalComponent,\n    NxOpenModalOnClickDirective,\n    NxModalActionsDirective,\n    NxModalContentDirective\n  ],\n})\n\nexport class NxModalModule {\n  // define the modal service on root level as an application wide singleton,\n  // assuming that we only display one modal at a time, which seems quite reasonable\n  // this is static and named \"forRoot\" by convention\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NxModalModule,\n      providers: [NxModalService]\n    };\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Optional,\n  Self,\n  DoCheck,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nlet nextId = 0;\n/** Options for placement of the label */\nexport type POSITION = 'left' | 'right';\n/** Options for sizing of the label */\nexport type LABEL_SIZE = 'small' | 'large';\n\n@Component({\n  selector: 'nx-switcher',\n  templateUrl: 'switcher.component.html',\n  styleUrls: ['./switcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n    and on label click the input click is not triggered (double id problem) */\n    '[attr.id]': 'null',\n    '[class.is-negative]': 'negative',\n    '[class.is-checked]': 'checked',\n    '[class.is-big]': 'big',\n    '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n    '[class.nx-switcher--large-label]': 'labelSize === \"large\"',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-swapped]': 'labelPosition === \"left\"',\n    '[class.has-error]': 'errorState',\n    '[attr.aria-invalid]': 'errorState'\n  }\n})\n\nexport class NxSwitcherComponent implements ControlValueAccessor, DoCheck {\n\n  private _id: string = `nx-switcher-${nextId++}`;\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** @docs-private */\n  @ViewChild('switcherLabelWrapper', { static: true }) _switcherLabelWrapper: ElementRef;\n\n  /** Sets the id of the switcher */\n  @Input()\n  set id(value: string) {\n    this._id = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get id(): string {\n    return this._id;\n  }\n\n  private _labelPosition: POSITION = 'right';\n  /** Specifies the placement of the label */\n  @Input()\n  set labelPosition(value: POSITION) {\n    this._labelPosition = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelPosition(): POSITION {\n    return this._labelPosition;\n  }\n\n  private _name: string = null;\n  /** Sets the label text of the switcher */\n  @Input()\n  set name(value: string) {\n    this._name = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get name(): string {\n    return this._name;\n  }\n\n  private _checked: boolean = false;\n  /** Whether the switcher is checked (on) or unchecked (off) */\n  @Input()\n  set checked(value: boolean) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get checked(): boolean {\n    return this._checked;\n  }\n\n  private _big: boolean = false;\n  /** Whether the big switcher is used */\n  @Input('nxBig')\n  set big(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._big = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get big(): boolean {\n    return this._big;\n  }\n\n  private _labelSize: LABEL_SIZE = 'large';\n  /** Sets the size of the label */\n  @Input()\n  set labelSize(value: LABEL_SIZE) {\n    this._labelSize = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get labelSize(): LABEL_SIZE {\n    return this._labelSize;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the style for a dark background is used */\n  @Input('nxNegative')\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._negative = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the switcher is in the disabled state */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    this._disabled = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  /** An event is dispatched each time the switcher value is changed */\n  @Output('checkedChange') checkedChange = new EventEmitter<boolean>();\n\n  private onChangeCallback = (_: any) => {};\n  private onTouchedCallback = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Self() public ngControl: NgControl,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /** Allows to toggle between the states */\n  toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.onChangeCallback(this.checked);\n      this.checkedChange.emit(this.checked);\n      if (this.onTouchedCallback) {\n        this.onTouchedCallback();\n      }\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value === null) {\n      value = false;\n    }\n    if (value !== this.checked) {\n      this.checked = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouchedCallback = fn;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  touch() {\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n    }\n  }\n\n  /** @docs-private */\n  get labelHasContent() {\n    return !!this._switcherLabelWrapper.nativeElement.innerHTML.trim();\n  }\n\n  /** @docs-private\n   * Callback for when the content of the label has changed.\n   */\n  labelContentChanged() {\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxSwitcherComponent } from './switcher.component';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n@NgModule({\n  declarations: [ NxSwitcherComponent ],\n  exports: [ NxSwitcherComponent ],\n  imports: [ CommonModule, NxIconModule, ObserversModule ]\n})\nexport class NxSwitcherModule {}\n","import {Directive, TemplateRef} from '@angular/core';\n\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\n@Directive({\n  selector: 'ng-template[nxPopoverContent]'\n})\nexport class NxPopoverContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'nx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./popover.component.scss'],\n  exportAs: 'nxPopover',\n})\nexport class NxPopoverComponent implements OnDestroy {\n  /** @docs-private */\n  @ViewChild(TemplateRef, { static: false })\n  templateRef: TemplateRef<any>;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(NxPopoverContentDirective, {static: false}) _lazyContent: NxPopoverContentDirective;\n\n  /** Event emitted when the popover is closed. */\n  @Output('nxClosed')\n  closed = new EventEmitter<void>();\n\n  /** @docs-private */\n  closeButtonClick = new Subject<void>();\n\n  /** @docs-private */\n  id: string;\n\n  /** @docs-private */\n  direction;\n\n  /** @docs-private */\n  showCloseButton: boolean = false;\n\n  /** @docs-private */\n  arrowStyle = {};\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    this.closed.complete();\n  }\n\n  // emit to notify the popover trigger directive that the close button was clicked\n  /** @docs-private */\n  emitCloseButtonClick() {\n    this.closeButtonClick.next();\n  }\n\n  /** @docs-private */\n  _onCloseKeyup($event) {\n    if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {\n      this.emitCloseButtonClick();\n    }\n    $event.preventDefault();\n  }\n\n  /** @docs-private */\n  emitClosedEvent() {\n    this.closed.emit();\n  }\n\n  /** @docs-private */\n  get classList(): string[] {\n    if (this.direction) {\n      return [`nx-popover--${this.direction}`];\n    }\n  }\n\n  /** Prevent the popover from closing when the user clicks on the popover content. */\n  _onClick(event) {\n    event.stopPropagation();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ConnectedPosition,\n  ConnectionPositionPair,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewContainerRef,\n  NgZone\n} from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { NxPopoverComponent } from './popover.component';\nimport { FocusTrapFactory, FocusTrap } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\n\nexport declare type PopoverDirection = 'left' | 'top' | 'right' | 'bottom';\nexport declare type PopoverTriggerType = 'click' | 'hover' | 'manual';\nexport declare type PopoverTriggerScrollStrategy = 'close' | 'reposition';\nlet nextId = 0;\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top',\n    offsetX: 0,\n    offsetY: 16\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n    offsetX: 16,\n    offsetY: 0\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n    offsetX: -16,\n    offsetY: 0\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  },\n  {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom',\n    offsetX: 0,\n    offsetY: -16\n  }\n];\n\n@Directive({\n  selector: '[nxPopoverTriggerFor]',\n  exportAs: 'nxPopoverTrigger',\n  host: {\n    '(click)': 'handleClick()',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'isOpen',\n    '[attr.aria-describedby]': 'isOpen ? id : null'\n  }\n})\nexport class NxPopoverTriggerDirective implements AfterViewInit, OnDestroy, OnInit {\n  private overlayRef: OverlayRef;\n  private portal: TemplatePortal<any>;\n  private _destroyed = new Subject<void>();\n  private _show: boolean = false;\n  private _closeable: boolean = null;\n  private _positionStrategy: PositionStrategy;\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n  private _documentClickObservable: Observable<MouseEvent>;\n  /** The class that traps and manages focus within the popover. */\n  private _focusTrap: FocusTrap;\n  /** Element that was focused before the Popover was opened. Save this to restore upon close. */\n  private _elementFocusedBeforePopoverWasOpened: HTMLElement | null = null;\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n  /** @docs-private */\n  id = 'nx-popover-' + nextId++;\n\n  /** An event is emitted if the visibility status of the popover changes. */\n  @Output('nxPopoverShowChange')\n  changeShow: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether to show or hide the popover. */\n  @Input('nxPopoverShow')\n  set show(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._show !== value) {\n      this._show = value;\n      if (this._show) {\n        this.openPopover();\n      } else {\n        this.closePopover();\n      }\n    }\n  }\n\n  get show() {\n    return this._show;\n  }\n\n  /** Whether to show a close button. By default a close icon is only shown for trigger type click. */\n  @Input('nxPopoverCloseable')\n  set closeable(value: boolean) {\n    this._closeable = coerceBooleanProperty(value);\n\n    if (this.popover) {\n      this.popover.showCloseButton = this.isCloseable();\n    }\n  }\n  get closeable(): boolean {\n    return this._closeable;\n  }\n\n  /** Whether the popover should be closed on click outside of the popover in the trigger modes 'manual' and 'click'. */\n  @Input()\n  set closeOnClickOutside(value: boolean) {\n    this._closeOnClickOutside = coerceBooleanProperty(value);\n  }\n  get closeOnClickOutside(): boolean {\n    return this._closeOnClickOutside;\n  }\n\n  private _closeOnClickOutside: boolean = true;\n\n  /** Links the trigger with the popover to open. */\n  @Input('nxPopoverTriggerFor')\n  popover: NxPopoverComponent;\n\n  /** Sets the desired direction to open the popover. E.g., right, left, bottom, top */\n  @Input('nxPopoverDirection')\n  direction: PopoverDirection = 'right';\n\n  /** Whether the popover will be opened automatically. */\n  @Input('nxPopoverInitialVisible')\n  popoverInitialVisible: boolean = false;\n\n  /** An event is emitted when the visibility of the popopver changes. */\n  @Input('nxPopoverVisibleChange')\n  visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n  /** Whether the popover opens in modal state. */\n  @Input('nxPopoverModal')\n  modal: boolean = false;\n\n  // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n  // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n  // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n  /** Sets the way to trigger the popover. Options are hover, click, manual */\n  @Input('nxPopoverTrigger')\n  trigger: PopoverTriggerType = 'click';\n\n  /** Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin. */\n  @Input('nxPopoverScrollStrategy')\n  scrollStrategy: PopoverTriggerScrollStrategy = 'close';\n\n  constructor(private overlay: Overlay,\n              private elementRef: ElementRef,\n              private viewContainerRef: ViewContainerRef,\n              private eventManager: EventManager,\n              private _focusTrapFactory: FocusTrapFactory,\n              private _focusMonitor: FocusMonitor,\n              private _ngZone: NgZone,\n              private _platform: Platform,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    this._documentClickObservable = fromEvent<MouseEvent>(document, 'click');\n    const element: HTMLElement = elementRef.nativeElement;\n    if (!this._platform.IOS && !this._platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => {\n          if (this.trigger === 'hover') {\n            this.show = true;\n          }\n        })\n        .set('mouseleave', () => {\n          if (this.trigger === 'hover') {\n            this.show = false;\n          }\n        })\n        .set('keydown', (event: KeyboardEvent) => {\n          switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n              this.handleClick();\n              break;\n            default:\n              return;\n          }\n        });\n    } else {\n      this._manualListeners.set('touchstart', () => {\n        if (this.trigger === 'hover') {\n          this.show = true;\n        }\n      });\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    this._focusMonitor.monitor(element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      if (origin === 'keyboard' && this.trigger === 'hover') {\n        this._ngZone.run(() => this.show = true);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.popover.showCloseButton = this.isCloseable();\n  }\n\n  ngAfterViewInit(): void {\n    this.popover.id = this.id;\n\n    this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n      if (this.isOpen) {\n        this.show = false;\n      }\n    });\n\n    this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this.show = false;\n    });\n\n    if (this.popoverInitialVisible || this._show) {\n      this.show = true;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.show = false;\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this.elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** @docs-private */\n  get isOpen() {\n    return this.overlayRef && this.createOverlay().hasAttached();\n  }\n\n  /** @docs-private */\n  isCloseable() {\n    return (this.trigger === 'click' && this._closeable === null) || this._closeable;\n  }\n\n  /** Update the popover with the given position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n\n  /** @docs-private */\n  handleClick() {\n    if (this.trigger === 'click') {\n      this.show = !this.isOpen;\n    } else if (this.trigger === 'hover') {\n      this.show = true;\n    }\n  }\n\n  /** Open the popover instance. */\n  open(): void {\n    this.show = true;\n  }\n\n  /** Close the popover instance. */\n  close(): void {\n    this.show = false;\n  }\n\n  /** Toggle the popover instance. */\n  toggle(): void {\n    this.show = !this.show;\n  }\n\n  private openPopover(): void {\n    if (!this.createOverlay().hasAttached()) {\n      this._embeddedViewRef = this.createOverlay().attach(this.portal);\n\n      const element = this._embeddedViewRef.rootNodes[0] as HTMLElement;\n      this._focusTrap = this._focusTrapFactory.create(element);\n      this._elementFocusedBeforePopoverWasOpened = this.elementRef.nativeElement;\n      this._autoFocusFirstTabbableElement(element);\n\n      // attach a close click listener only if it makes sense (ignore it on hover e.g.)\n      if (this.shouldReactOnClickOutside()) {\n        this.waitForClose();\n      }\n    }\n  }\n\n  /**\n   * Autofocus the first tabbable element inside of the popover, if there is not a tabbable element,\n   * focus the popover instead.\n   */\n  private _autoFocusFirstTabbableElement(element: HTMLElement) {\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If we didn't find any focusable elements inside the popover, focus the\n      // container so the user can't tab into other elements behind it.\n      if (!hasMovedFocus) {\n        element.focus();\n      }\n    });\n  }\n\n  private shouldReactOnClickOutside() {\n    return (!this.modal && this.closeOnClickOutside);\n  }\n\n  // detaches the overlay\n  // we are listening to the detachments observable which will then emit the nxClosed event\n  // on the popover component\n  private closePopover(): void {\n    if (this.overlayRef) {\n      this._returnFocusAfterPopover();\n      this.overlayRef.detach();\n      this._embeddedViewRef = null;\n      this._focusTrap.destroy();\n    }\n  }\n\n  private createOverlay(): OverlayRef {\n    if (!this.overlayRef) {\n      this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n      const overlayState = new OverlayConfig();\n      overlayState.positionStrategy = this.getPosition();\n      this._positionStrategy = overlayState.positionStrategy;\n\n      if (this.scrollStrategy === 'reposition') {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.reposition();\n      } else {\n        overlayState.scrollStrategy = this.overlay.scrollStrategies.close();\n      }\n\n      overlayState.scrollStrategy.enable();\n\n      if (this.modal && this.trigger === 'click') {\n        overlayState.hasBackdrop = true;\n      }\n\n      this.overlayRef = this.overlay.create(overlayState);\n      this.subscribeToPositions(overlayState.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._subscribeToAttach();\n      this._subscribeToDetach();\n      if (this.modal) {\n        this._subscribeToBackdropClick();\n      }\n    }\n    return this.overlayRef;\n  }\n\n  private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    position.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      const pair = change.connectionPair;\n      this.positionOverlay(pair);\n      this.positionArrow(pair);\n\n      // These position changes arrive too late,\n      // We have to trigger the change detection manually\n      // as it's detached from any render hierarchy\n      // and only updated by the overlay when attached.\n      if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n        this._embeddedViewRef.detectChanges();\n      }\n    });\n  }\n\n  // for modal popovers close the popover on backdrop clicks\n  private _subscribeToBackdropClick() {\n    this.overlayRef.backdropClick().pipe(takeUntil(this._destroyed)).subscribe((event) => {\n      this.show = false;\n    });\n  }\n\n  // Emit the nxClosed and the show status change event on the popover component when the overlay detaches\n  private _subscribeToDetach() {\n    this.overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(data => {\n      // This is an exception: when the popover is closed by a scrolling event,\n      // then only the detached method is called but the show state variable remains unchanged.\n      if (this.show) {\n        this.show = false;\n      }\n      this.changeShow.emit(this._show);\n      this.popover.emitClosedEvent();\n    });\n  }\n\n  private _subscribeToAttach() {\n    this.overlayRef.attachments().pipe(takeUntil(this._destroyed)).subscribe(data => {\n      this.changeShow.emit(this._show);\n    });\n  }\n\n  // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n  private waitForClose() {\n    return this._documentClickObservable\n      .pipe(\n        map(event => event.target),\n        filter(target => !this.elementRef.nativeElement.contains(target)),\n        takeUntil(this.popover.closed))\n      .subscribe(() => {\n        this.show = false;\n      });\n  }\n\n  private positionOverlay(pair: ConnectionPositionPair) {\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this.popover.direction = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this.popover.direction = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this.popover.direction = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this.popover.direction = 'top';\n    }\n  }\n\n  private positionArrow(pair: ConnectionPositionPair) {\n\n    const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const parentElementLeftOffset = this.overlayRef.overlayElement.parentElement.offsetLeft;\n    const overlayElementLeftOffset = this.overlayRef.overlayElement.offsetLeft;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this.popover.arrowStyle = arrowStyle;\n    }\n    if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n      this.popover.arrowStyle = { left: targetPosition + 'px' };\n    }\n\n    if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n      this.popover.arrowStyle = { top: '50%' };\n    }\n  }\n\n  private getPosition(): FlexibleConnectedPositionStrategy {\n    let positions: ConnectedPosition[];\n    let offsetX = 0;\n    let offsetY = 0;\n    if (this.direction === 'top') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'bottom',\n        originX: 'center',\n        originY: 'top'\n      }];\n      offsetX = 0;\n      offsetY = -20;\n    } else if (this.direction === 'right') {\n      positions = [{\n        overlayX: 'start',\n        overlayY: 'center',\n        originX: 'end',\n        originY: 'center'\n      }];\n      offsetX = 20;\n      offsetY = 0;\n    } else if (this.direction === 'bottom') {\n      positions = [{\n        overlayX: 'center',\n        overlayY: 'top',\n        originX: 'center',\n        originY: 'bottom'\n      }];\n      offsetX = 0;\n      offsetY = 20;\n    } else if (this.direction === 'left') {\n      positions = [{\n        overlayX: 'end',\n        overlayY: 'center',\n        originX: 'start',\n        originY: 'center'\n      }];\n      offsetX = -20;\n      offsetY = 0;\n    }\n    return this.overlay.position().flexibleConnectedTo(this.elementRef)\n      .withPositions([...positions, ...fallbacks])\n      .withDefaultOffsetX(offsetX)\n      .withDefaultOffsetY(offsetY);\n  }\n\n  /** Returns the focus to the element focused before the Popover was open. */\n  private _returnFocusAfterPopover() {\n    const toFocus = this._elementFocusedBeforePopoverWasOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxPopoverTriggerDirective} from './popover-trigger.directive';\nimport {NxPopoverComponent} from './popover.component';\nimport {NxPopoverContentDirective} from './popover-content';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ],\n  exports: [\n    NxPopoverTriggerDirective,\n    NxPopoverComponent,\n    NxPopoverContentDirective\n  ]\n})\nexport class NxPopoverModule {\n\n}\n","import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DELETE, BACKSPACE, ENTER } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'nx-tag',\n  templateUrl: 'tag.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['tag.component.scss'],\n  host: {\n    '(click)': 'tagClickHandler()',\n    '(keydown)': 'removeKeyHandler($event)',\n    '[attr.tabindex]': 'tabindex'\n  }\n})\nexport class NxTagComponent {\n  private _removable: boolean;\n\n  /** Whether the tag is removeable. */\n  @Input()\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get removable() {\n    return this._removable;\n  }\n\n  private _tabindex: number = -1;\n  /**\n   * Sets the tab-index of a tag. Default value: -1.\n   *\n   * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.\n   */\n  @Input()\n  set tabindex(value: number) {\n    this._tabindex = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get tabindex(): number {\n    return this.removable ? 0 : this._tabindex;\n  }\n\n  private _value: string;\n  /** Sets the value of the tag. */\n  @Input()\n  set value(value: string) {\n    if (this._value !== value) {\n      this._value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get value(): string {\n    return this._value;\n  }\n\n  /** An event is dispatched each time when the tag is clicked. */\n  @Output() readonly clicked: EventEmitter<any> = new EventEmitter<any>();\n  /** An event is dispatched each time when the tag is removed. */\n  @Output() readonly removed: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  // Emit the removed event that the parent can remove the value\n  removeClickHandler(event: MouseEvent) {\n    event.stopPropagation();\n    this.removed.emit(this.value);\n  }\n\n  /** @docs-private */\n  removeKeyHandler(event: KeyboardEvent) {\n    if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.removed.emit(this.value);\n    }\n\n    if (event.keyCode === ENTER) {\n      this.clicked.emit(this.value);\n    }\n  }\n\n  /** @docs-private */\n  tagClickHandler() {\n    this.clicked.emit(this.value);\n  }\n}\n","import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, forwardRef, Input, Output, ChangeDetectionStrategy,\n  ChangeDetectorRef, ViewChildren, ElementRef, QueryList, AfterContentInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NxTagComponent } from './tag.component';\n\n@Component({\n  selector: 'nx-taglist',\n  templateUrl: 'taglist.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './taglist.component.scss' ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxTaglistComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-taglist--keyword]': 'isKeywordList',\n    '[attr.aria-labelledby]': 'labelledby || null',\n    '[attr.tabindex]': '-1'\n  }\n})\n\nexport class NxTaglistComponent implements ControlValueAccessor {\n\n  /** An event is dispatched each time when the list of tags changed. */\n  @Output('nxTagsChange') tagsChange: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n  /** An event is dispatched each time when a tag is clicked. */\n  @Output('nxTagClick') tagClickEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  /** @docs-private */\n  @ViewChildren(NxTagComponent, {read: ElementRef}) tagChildren: QueryList<ElementRef>;\n\n  private _tags: Array<any> = [];\n  /** Sets the list of tags. */\n  @Input('nxTags')\n  set tags(value: Array<any>) {\n    this._tags = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get tags(): Array<any> {\n    return this._tags;\n  }\n\n  private _tabindex: number = -1;\n  /** Sets the tabindex of the contained tags. Default value: -1. */\n  @Input()\n  set tabindex(value: number) {\n    this._tabindex = coerceNumberProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get tabindex(): number {\n    return this.allowTagDeletion ? 0 : this._tabindex;\n  }\n\n  private _allowTagDeletion: boolean = true;\n  /** Whether the tags can be removed from the list. Default: true. */\n  @Input('nxAllowTagDeletion')\n  set allowTagDeletion(value: boolean) {\n    this._allowTagDeletion = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowTagDeletion(): boolean {\n    return this._allowTagDeletion;\n  }\n\n  private _isKeywordList: boolean = false;\n  /** Whether the tags can be styled as keywords. */\n  @Input('nxIsKeywordList')\n  set isKeywordList(value: boolean) {\n    this._isKeywordList = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get isKeywordList(): boolean {\n    return this._isKeywordList;\n  }\n\n  private _labelProperty: string = 'nxTaglistLabel';\n    /** Sets the label property, in case tags represent objects. */\n  @Input('nxLabelProperty')\n  set labelProp(value: string) {\n    if (this._labelProperty !== value) {\n      this._labelProperty = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelProp(): string {\n    return this._labelProperty;\n  }\n\n  private _ariaLabelledBy: string;\n  /** Sets the label property to improve accessibility. */\n  @Input('aria-labelledby')\n  set labelledby(value: string) {\n    if (this._ariaLabelledBy !== value) {\n      this._ariaLabelledBy = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get labelledby(): string {\n    return this._ariaLabelledBy;\n  }\n\n  private _valueFormatterFn: (value: any) => string = (value) => value;\n  /** Sets the customization function for tag value.  */\n  @Input('nxValueFormatter')\n  set valueFormatter(fn: (value: any) => string) {\n    this._valueFormatterFn = fn;\n    this._changeDetectorRef.markForCheck();\n  }\n  get valueFormatter(): (value: any) => string {\n    return this._valueFormatterFn;\n  }\n\n  private _onChange: (value: any) => void = () => {};\n  private _onTouched: () => any = () => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** Allows to delete a tag given index. Takes index of the tag to be deleted as a parameter */\n  delete(index: number, value: any) {\n\n    if (this.allowTagDeletion) {\n      this.tags = [\n        ...this.tags.slice(0, index),\n        ...this.tags.slice(index + 1)\n      ];\n\n      // focus next element after deletion\n      if (this.tagChildren.toArray()[index + 1]) {\n        this.tagChildren.toArray()[index + 1].nativeElement.focus();\n      }\n\n      this._onChange(this.tags);\n\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to add a tag. Takes tag object as an input */\n  addTag(tag: any) {\n    if (!tag) {\n      return;\n    }\n\n    // make sure tag is either string or has the configured label prop and is not yet in the list\n    if ((typeof tag === 'string' && this.tags.indexOf(tag) === -1) ||\n      (tag[ this.labelProp ] && this.tags.filter((t) => t[ this.labelProp ] === tag[ this.labelProp ]).length < 1)) {\n\n      this.tags = [ ...this.tags, tag ];\n      this._onChange(this.tags);\n      this.tagsChange.emit(this.tags);\n    }\n  }\n\n  /** Allows to clear the tag list. */\n  clearTags() {\n    this.tags = [];\n    this._onChange(this.tags);\n    this.tagsChange.emit(this.tags);\n  }\n\n  /** @docs-private */\n  writeValue(tags: any): void {\n    this.tags = tags;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** @docs-private */\n  renderTag(tag: any) {\n    const tagStr: string = typeof tag === 'string' ? tag : tag[ this.labelProp ];\n    return this.valueFormatter(tagStr);\n  }\n\n  /** @docs-private */\n  tagClick(index, value: any) {\n    this.tagClickEvent.emit(this.tags[index]);\n  }\n}\n","import { NxTagComponent } from './tag.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NgModule } from '@angular/core';\nimport { NxTaglistComponent } from './taglist.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [ NxTaglistComponent, NxTagComponent ],\n  exports: [ NxTaglistComponent, NxTagComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxTaglistModule {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'img[nxImg]'\n})\nexport class NxImageDirective {\n  constructor() {\n    console.warn('Directive nxImg which was used together with nxFigure ' +\n    'is now deprecated and not required anymore. Please remove it from your ' +\n    'tag. Check the documentation for more details.');\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/** Types of figures. */\nexport type FigureType = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1' | 'rounded';\n/** @docs-private */\nexport type figureSizes = 'auto' | '1by1' | '1dot8by1' | '1dot2by1' | '1by1dot1' | '2dot6by1';\n\nconst DEFAULT_SIZE = 'auto';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'figure[nxFigure]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./figure.component.scss'],\n  host: {\n    '[class.nx-image--auto]': 'size === \"auto\" && !rounded',\n    '[class.nx-image--1by1]': 'size === \"1by1\"',\n    '[class.nx-image--1dot8by1]': 'size === \"1dot8by1\"',\n    '[class.nx-image--1dot2by1]': 'size === \"1dot2by1\"',\n    '[class.nx-image--1by1dot1]': 'size === \"1by1dot1\"',\n    '[class.nx-image--2dot6by1]': 'size === \"2dot6by1\"',\n    '[class.nx-image--rounded]': 'rounded'\n  }\n})\nexport class NxFigureComponent {\n  private _classNames: FigureType;\n\n  /** @docs-private */\n  rounded: boolean;\n\n  /** @docs-private */\n  size: figureSizes;\n\n  /**\n   * Sets the type of the visual appearance of the image.\n   * The default value  is 'auto'.\n   */\n  @Input('nxFigure')\n  set classNames(value: FigureType) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;\n    const [size = null] = this._classNames.match(sizeRegex) || [DEFAULT_SIZE];\n    this.size = size as any;\n\n    this.rounded = !!this._classNames.match(/rounded/);\n  }\n\n  get classNames(): FigureType {\n    return this._classNames;\n  }\n}\n","import { NxImageDirective } from './image.directive';\nimport { NgModule } from '@angular/core';\nimport { NxFigureComponent } from './figure.component';\n\n@NgModule({\n  declarations: [ NxFigureComponent, NxImageDirective ],\n  exports: [ NxFigureComponent, NxImageDirective ]\n})\nexport class NxImageModule {\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'nx-video',\n  templateUrl: 'video.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './video.component.scss' ],\n})\n\n// note that this currently only supports youtube videos\nexport class NxVideoComponent {\n\n  private _videoId: string = null;\n\n  /** Sets the id of the YouTube video. */\n  @Input('nxVideoId')\n  set videoId(value: string) {\n    if (this._videoId !== value) {\n      this._videoId = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get videoId(): string {\n    return this._videoId;\n  }\n\n  private _altText: string = '';\n\n  /** Sets the value of the alt attribute for the preview image. */\n  @Input('nxAltText')\n  set altText(value: string) {\n    if (this._altText !== value) {\n      this._altText = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get altText(): string {\n    return this._altText;\n  }\n\n  private _playButtonAriaLabel: string = '';\n\n  /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */\n  @Input('nxPlayButtonAriaLabel')\n  set nxPlayButtonAriaLabel(value: string) {\n    if (this._playButtonAriaLabel !== value) {\n      this._playButtonAriaLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get nxPlayButtonAriaLabel(): string {\n    return this._playButtonAriaLabel;\n  }\n\n  private _previewImageSrc: string = null;\n\n  /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */\n  @Input('nxPreviewImageSrc')\n  set previewImageSrc(value: string) {\n    if (this._previewImageSrc !== value) {\n      this._previewImageSrc = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get previewImageSrc(): string {\n    return this._previewImageSrc;\n  }\n\n  private _showPlayerControls: boolean = true;\n\n  /** Sets player controls. If set to false, player controls are not available. */\n  @Input('nxShowPlayerControls')\n  set showPlayerControls(value: boolean) {\n    this._showPlayerControls = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showPlayerControls(): boolean {\n    return this._showPlayerControls;\n  }\n\n  private _allowFullScreen: boolean = true;\n\n  /** Sets fullscreen option. If set to false, fullscreen option is not available. */\n  @Input('nxAllowFullScreen')\n  set allowFullScreen(value: boolean) {\n    this._allowFullScreen = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get allowFullScreen(): boolean {\n    return this._allowFullScreen;\n  }\n\n  private _interfaceLanguage: string = null;\n\n  /** Sets interface language. Can be used to override the interface language determined by YouTube. */\n  @Input('nxInterfaceLanguage')\n  set interfaceLanguage(value: string) {\n    if (this._interfaceLanguage !== value) {\n      this._interfaceLanguage = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get interfaceLanguage(): string {\n    return this._interfaceLanguage;\n  }\n\n  /** @docs-private */\n  showPlayer = false;\n\n  constructor(private sanitizer: DomSanitizer, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  select(): void {\n    this.showPlayer = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n   /** Returns the safe resource URL of the YouTube video, given video id.  */\n  get videoSrc(): SafeResourceUrl {\n    let url = `https://www.youtube.com/embed/${this.videoId}?rel=0&showinfo=0&autoplay=1`;\n    if (!this.showPlayerControls) {\n      url += '&controls=0';\n    }\n    if (!this.allowFullScreen) {\n      url += '&fs=0';\n    }\n    if (this.interfaceLanguage) {\n      url += `&hl=${this.interfaceLanguage}`;\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  /** Returns the preview image source URL, given video id. */\n  get imgSrc() {\n    return this.previewImageSrc ? this.previewImageSrc : `https://img.youtube.com/vi/${this.videoId}/sddefault.jpg`;\n  }\n\n  /** Returns the labels for the control buttons. */\n  get playButtonAriaLabel() {\n    const defaultLabel = this.altText ? `${this.altText} - Play Video` : 'Play Video';\n    return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxVideoComponent } from './video.component';\nimport { CommonModule } from '@angular/common';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\n\n@NgModule({\n  declarations: [ NxVideoComponent ],\n  exports: [ NxVideoComponent ],\n  imports: [ CommonModule, NxIconModule ]\n})\nexport class NxVideoModule {}\n","\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getNxDropdownDynamicMultipleError(): Error {\n  return Error('Cannot change `multiselect` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiselect` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getNxDropdownNonArrayValueError(): Error {\n  return Error('Value must be an array in multiselect mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getNxDropdownNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","import { NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { Input } from '@angular/core';\n\nexport abstract class NxDropdownControl extends NxFormfieldControl<any> {\n  /**\n   * Whether the dropdown should allow multi selection and additional checkboxes are shown.\n   *\n   * Note: Please make sure the value you bind is an array. If not an error is thrown! */\n  @Input('nxIsMultiselect') isMultiSelect: boolean = false;\n\n  /** @docs-private */\n  abstract formatValue?(value): string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'nx-dropdown-group',\n  templateUrl: 'dropdown-group.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown-group.scss']\n})\nexport class NxDropdownGroupComponent {\n  /** Label displayed in the group. */\n  @Input('nxLabel') label: string;\n}\n","import { Highlightable } from '@angular/cdk/a11y';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxDropdownComponent } from '../dropdown';\nimport { NxDropdownControl } from '../dropdown.control';\nimport { NxDropdownGroupComponent } from './../group/dropdown-group';\n\nexport class NxDropdownItemChange {\n\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public item: NxDropdownItemComponent,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/** the unique id counter */\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-dropdown-item',\n  templateUrl: 'dropdown-item.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [\n    'dropdown-item.scss'\n  ],\n  host: {\n    '[id]': 'id',\n    'role': 'option',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[class.nx-hidden]': '_hidden',\n    '[class.nx-dropdown-item--active]': 'active',\n    '[class.nx-selected]': 'selected',\n    '[class.nx-multiselect]': 'multiselect',\n    '(click)': '_onClick($event)'\n  }\n})\nexport class NxDropdownItemComponent implements Highlightable, OnDestroy, AfterViewChecked {\n  _hidden = false;\n\n  private _mostRecentViewValue = '';\n\n  private _id = `nx-dropdown-item-${nextId++}`;\n\n  /**\n   * The value of the dropdown item.\n   * You can't use undefined, null and '' (empty strings)\n   * as they are sentinel values signalling empty data.\n   */\n  @Input('nxValue') value;\n\n  /** The unique ID of the option. */\n  get id(): string { return this._id; }\n\n  private _selected: boolean = false;\n\n  /** Whether the item is selected. */\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _active: boolean;\n\n  /** Whether the item is active. */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * @docs-private\n   * Whether the parent dropdown is in multiselect mode.\n   */\n  get multiselect(): boolean {\n    return this._dropdown && this._dropdown.isMultiSelect;\n  }\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<NxDropdownItemChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The wrapping div in the template. Used by dropdown to use the container height for scrolling.\n   */\n  @ViewChild('container', { static: true }) containerElement;\n\n  constructor(\n    @Inject(NxDropdownControl) private _dropdown: NxDropdownControl,\n    /** @docs-private */\n    @Optional() readonly group: NxDropdownGroupComponent,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef) {\n    (this._dropdown as NxDropdownComponent).filterChanges.pipe(takeUntil(this._destroy)).subscribe((value) => {\n      this._showOrHideByFilter(value);\n    });\n    // reset the hidden state when dropdown closes that on next open the user is seeing the full list again\n    (this._dropdown as NxDropdownComponent)._closedStream.pipe(takeUntil(this._destroy)).subscribe(() => {\n      this._hidden = false;\n    });\n  }\n\n  ngAfterViewChecked() {\n    // Since the parent dropdown component could be using the item's label to display the selected values\n    // and it doesn't have a way of knowing if the item's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  _onClick(event) {\n    /* preventDefault to stop triggering the event twice when you click on the checkbox or the label inside the item */\n    event.preventDefault();\n    event.stopPropagation();\n    this._selectViaInteraction();\n  }\n\n  /**\n  * `Selects the option while indicating the selection came from the user. Used to\n  * determine if the select's view -> model callback should be invoked.`\n  */\n  _selectViaInteraction(): void {\n    this._selected = this.multiselect ? !this._selected : true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent(true);\n  }\n\n  /** @docs-private */\n  show() {\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  hide() {\n    this._hidden = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showOrHideByFilter(search) {\n    const constraint = (this._dropdown as NxDropdownComponent).filterFn(search, this.viewValue);\n    this._hidden = constraint ? false : true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get _formattedValue() {\n    return (this._dropdown as NxDropdownComponent).valueFormatter(this.value);\n  }\n\n  /** @docs-private */\n  get viewValue() {\n    return (this._elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /** @docs-private */\n  get elementRef() {\n    return this._elementRef;\n  }\n\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  private _emitSelectionChangeEvent(isUserInput: boolean = false) {\n    this.onSelectionChange.emit(new NxDropdownItemChange(this, isUserInput));\n  }\n\n  /** @docs-private */\n  setActiveStyles(): void {\n    this._active = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** @docs-private */\n  setInactiveStyles(): void {\n    this._active = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Returns the list item's text label. Implemented as a part of the ListKeyManagerOption.\n   * @docs-private */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  _isContentEmpty(element) {\n    return element.children.length === 0 && !element.textContent.trim();\n  }\n\n  _onLabelChange() {\n    // trigger change detection when the label content changes for the case that ng-content was empty before.\n    // this is also important when the label comes in deferred, e.g. by a delayed observable,\n    // then first the default label derived from the value is shown\n    // and after the value from the async observable is ready we need to trigger change detection that the derived label\n    // gets hidden again.\n    // Notice(!): the event of (cdkObserveContent) is run outside of the ngZone\n    // We run detectChanges directly here as markForCheck wasn't enough to always trigger change detection correctly\n    this._changeDetectorRef.detectChanges();\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n// This Directive solely purpose is to mark given ng-template and project it into the required destination.\n@Directive({\n  selector: '[nxClosedLabel]'\n})\nexport class NxDropdownClosedLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import { NxFormfieldComponent, NxFormfieldControl } from '@allianz/ngx-ndbx/formfield';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW, SHIFT, TAB } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, ConnectionPositionPair, FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  isDevMode,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n  ViewChild,\n  TemplateRef,\n  ContentChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {delay, filter, map, startWith, switchMap, take, takeUntil} from 'rxjs/operators';\n\nimport { getNxDropdownNonArrayValueError, getNxDropdownNonFunctionValueError } from './dropdown-errors';\nimport { NxDropdownControl } from './dropdown.control';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemChange, NxDropdownItemComponent } from './item/dropdown-item';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n/** Change event object that is emitted when the select value has changed. */\nexport class NxDropdownSelectChange<T = any> {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: NxDropdownComponent,\n    /** Current value of the select that emitted the event. */\n    public value: T) { }\n}\n\nfunction getPositions(): ConnectionPositionPair[] {\n  return [{\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center'\n  }, {\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }];\n}\n\n@Component({\n  selector: 'nx-dropdown',\n  templateUrl: 'dropdown.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['dropdown.scss'],\n  providers: [\n    { provide: NxDropdownControl, useExisting: NxDropdownComponent },\n    { provide: NxFormfieldControl, useExisting: NxDropdownComponent },\n  ],\n  host: {\n    'role': 'button',\n    '[class.nx-dropdown]': 'true',\n    '[class.is-filled]': 'hasValue',\n    '[class.has-focus]': 'focused',\n    '[class.nx-dropdown--negative]': '_negative',\n    '[class.nx-dropdown--disabled]': 'disabled',\n    '[attr.aria-describedby]': 'ariaDescribedby || null',\n    '[attr.aria-required]': 'required',\n    '[attr.aria-label]': '_getAriaLabel()',\n    'aria-haspopup': 'listbox',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.tabindex]': 'tabIndex',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': 'openPanel()'\n  }\n})\nexport class NxDropdownComponent extends NxDropdownControl implements ControlValueAccessor,\n  OnInit, AfterContentInit, OnDestroy, DoCheck {\n\n  // The dropdown currently doesn't support readonly of the NxFormfieldControl so we hardcode it here\n  readonly readonly: boolean = false;\n\n  private _selectionModel: SelectionModel<NxDropdownItemComponent>;\n\n  protected _disabled: boolean = false;\n\n  private _focused: boolean = false;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** @docs-private */\n  isStable: boolean = false;\n\n  /**\n   * Name of this control that is used inside the formfield component\n   * @docs-private\n   */\n  controlType = 'nx-dropdown';\n\n  /** Holds the value from nxValue. */\n  private _value: any;\n\n  /** The minimal space between the viewport and the overlay */\n  _overlayViewportMargin: number = 16;\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** Holds the panelWidth after panel was attached. */\n  _panelWidth: number;\n\n  /**\n   * @docs-private\n   * Emits when internal state changes to inform formfield about it.\n   */\n  readonly stateChanges = new Subject<any>();\n\n  /** The IDs of child options to be passed to the aria-owns attribute. */\n  _optionIds: string = '';\n\n  /** @docs-private */\n  ariaDescribedby: string;\n\n  private _tabIndex: number = 0;\n\n  /** @docs-private */\n  currentFilter: string = '';\n\n  @Input()\n  get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n  set tabIndex(value: number) {\n    // If the specified tabIndex value is null or undefined, fall back to the default value.\n    this._tabIndex = value != null ? value : 0;\n  }\n\n  /** Label to describe the component. */\n  @Input('nxAriaLabel') _ariaLabel: string = '';\n\n  /** Selected value */\n  @Input('nxValue')\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (newValue !== this._value) {\n      this.writeValue(newValue);\n      this._value = newValue;\n      this._onChange(newValue);\n    }\n  }\n\n  /** Whether the dropdown is disabled. */\n  @Input('nxDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n\n  /** Whether the component is required. This adds an aria-required label to the component. */\n  @Input('nxRequired') required: boolean;\n\n  private _style: string = '';\n  /** Whether the dropdown should render in its negative style or not. */\n  _negative: boolean = false;\n\n  /** If set to 'negative', the component is displayed with the negative set of styles. */\n  @Input('nxStyle')\n  set styles(value: string) {\n\n    if (this._style === value) {\n      return;\n    }\n\n    this._style = value;\n    this._negative = !!this._style.match(/negative/);\n  }\n\n  /** Whether the dropdown should be shown with an additional filter input. */\n  @Input('nxShowFilter') showFilter: boolean = false;\n\n  /** Text displayed as placeholder for the filter. */\n  @Input('nxFilterPlaceholder') filterPlaceholder: string = '';\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => o), map(() => { }));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n    this.openedChange.pipe(filter(o => !o), map(() => { }));\n\n  /** Event emitted when the user types in the filter input. */\n  @Output('filterInput') readonly filterChanges: Subject<any> = new Subject<any>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output('nxValueChange') readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Event emitted when the selected value has been changed. */\n  @Output() readonly selectionChange: EventEmitter<NxDropdownSelectChange> =\n    new EventEmitter<NxDropdownSelectChange>();\n\n  /** @docs-private */\n  readonly optionSelectionChanges: Observable<NxDropdownItemChange> = defer<Observable<NxDropdownItemChange>>(() => {\n    if (this.options) {\n      return merge(...this.options.map(option => option.onSelectionChange));\n    }\n\n    return this._ngZone.onStable\n      .asObservable()\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  });\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions:  ConnectionPositionPair[];\n\n  /**\n   * @docs-private\n   * Panel containing the select options.\n   */\n  @ViewChild('panel', { static: false }) panel: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('panelBody', { static: false }) panelBody: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('trigger', { static: true }) trigger: ElementRef;\n\n  /** @docs-private */\n  @ViewChild('filterInput', { static: false }) filterInput: ElementRef;\n\n  /**\n   * @docs-private\n   * Overlay pane containing the options.\n   */\n  @ViewChild(CdkConnectedOverlay, { static: true }) overlayDir: CdkConnectedOverlay;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownItemComponent, { descendants: true }) options;\n\n  /** @docs-private */\n  @ContentChildren(NxDropdownGroupComponent) groups;\n\n  @ContentChild(NxDropdownClosedLabelDirective, {static: false})\n  _customClosedDropdownLabel: NxDropdownClosedLabelDirective;\n\n  @ViewChild('defaultClosedDropdownLabel', { static: true })\n  private _defaultClosedDropdownLabel: TemplateRef<any>;\n\n  /** @docs-private */\n  get closedDropdownLabel(): TemplateRef<any> {\n    return this._closedDropdownLabel;\n  }\n  private _closedDropdownLabel: TemplateRef<any>;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /**\n   * @docs-private\n   * The currently selected option.\n   */\n  get selected(): NxDropdownItemComponent | NxDropdownItemComponent[] {\n    return this.isMultiSelect ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  private _keyManager: ActiveDescendantKeyManager<NxDropdownItemComponent>;\n\n  /** @docs-private */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n  set panelOpen(value: boolean) {\n    this._panelOpen = value;\n  }\n\n  /**\n   * Function that transforms the value into a string.\n   * This function is used for displaying and filtering the content\n   * ( Default: (value) => value ? value.toString() : null; ).\n   */\n  @Input('nxValueFormatter') valueFormatter = (value) => {\n    return value == null ? '' : value.toString();\n  }\n\n  /** @docs-private */\n  get label(): string {\n    return this.formFieldComponent ? this.formFieldComponent.label : '';\n  }\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  private _filterFn = (search: string, itemValue: string) => {\n    return itemValue.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) >= 0;\n  }\n\n  /**\n   * Function to be used when the user types into the search filter. The first argument is the user input,\n   * the second argument is the dropdown item value. The dropdown items will use this function to set their\n   * visibility state.\n   * A boolean should be returned.\n   */\n  @Input()\n  get filterFn() { return this._filterFn; }\n  set filterFn(fn: (search: string, itemValue: string) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getNxDropdownNonFunctionValueError();\n    }\n    this._filterFn = fn;\n  }\n\n  /**\n   * @docs-private\n   * Whether the select is focused.\n   */\n  get focused(): boolean {\n    return this._focused || this.panelOpen;\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => { };\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => { };\n\n  /** @docs-private */\n  get elementRef(): ElementRef {\n    return this._elementRef;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    @Attribute('tabindex') tabIndex: string,\n    @Optional() private formFieldComponent: NxFormfieldComponent,\n    /** @docs-private */\n    @Self() @Optional() public ngControl: NgControl,\n    @Optional() private _parentForm: NgForm,\n    @Optional() private _parentFormGroup: FormGroupDirective) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    this._positions = getPositions();\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<NxDropdownItemComponent>(this.isMultiSelect);\n  }\n\n  ngAfterContentInit() {\n    this._closedDropdownLabel =\n      this._customClosedDropdownLabel && this._customClosedDropdownLabel.templateRef || this._defaultClosedDropdownLabel;\n    this._initKeyManager();\n\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  /** @docs-private */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<NxDropdownItemComponent>(this.options)\n      .withTypeAhead()\n      .withWrap()\n      .withVerticalOrientation()\n      .withHorizontalOrientation('ltr')\n      .skipPredicate(item => item._hidden);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      // Restore focus to the trigger before closing. Ensures that the focus\n      // position won't be lost if the user got focus into the overlay.\n      this.closePanel();\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        // Delay the auto scrolling until all items have settled otherwise the item containers might\n        // not exist yet\n        this._ngZone.onStable\n          .asObservable()\n          .pipe(take(1)).subscribe(() => {\n            this._scrollActiveOptionIntoView();\n          });\n      } else if (!this._panelOpen && !this.isMultiSelect && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.item, event.isUserInput);\n\n      if (event.isUserInput && !this.isMultiSelect && this._panelOpen) {\n        this.closePanel();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        // defer it for the next cycle to not run in changed after checked errors\n        // the combination of dropdown-item notifying parent and when the parent\n        // tries to fetch the triggerValue from the child throws these errors\n        setTimeout(() => {\n          this._changeDetectorRef.markForCheck();\n          this.stateChanges.next();\n        });\n      });\n\n    this._setOptionIds();\n  }\n\n  /** Records option IDs to pass to the aria-owns property. */\n  private _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: NxDropdownItemComponent, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this.isMultiSelect) {\n      option.deselect();\n      this._selectionModel.clear();\n      this._propagateChanges(option.value);\n    } else {\n      option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.isMultiSelect) {\n        this._sortValues();\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    if (this.isMultiSelect && value) {\n      if (!Array.isArray(value)) {\n        throw getNxDropdownNonArrayValueError();\n      }\n\n      this._selectionModel.clear();\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      this._selectionModel.clear();\n      const correspondingOption = this._selectValue(value);\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(correspondingOption);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): NxDropdownItemComponent | undefined {\n    const correspondingOption = this.options.find((option: NxDropdownItemComponent) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value, value);\n      } catch (error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n    return correspondingOption;\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.isMultiSelect) {\n      valueToEmit = (this.selected as NxDropdownItemComponent[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as NxDropdownItemComponent).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(new NxDropdownSelectChange(this, valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.isMultiSelect) {\n      const options = this.options.toArray();\n      this._selectionModel.sort((a, b) => options.indexOf(a) - options.indexOf(b));\n      this.stateChanges.next();\n    }\n  }\n\n  /** Adds a offset to the overlay position, so the formfield label and the dropdown panel header are vertically aligned. */\n  private _updatePositionOffset() {\n    let offset = 0;\n\n    if (this.formFieldComponent !== null) {\n      const formFieldRect = this.formFieldComponent.elementRef.nativeElement.getBoundingClientRect();\n      const dropdownRect = this._elementRef.nativeElement.getBoundingClientRect();\n      const panelHeader = this.overlayDir.overlayRef.overlayElement.querySelector('.nx-dropdown__panel-header');\n      const panelHeaderPaddingTop = panelHeader ? parseInt(getComputedStyle(panelHeader).paddingTop, 10) : 0;\n      offset = formFieldRect.top - dropdownRect.top - panelHeaderPaddingTop;\n    }\n\n    this._positions[0].offsetY = offset;\n  }\n\n  /** Focuses the select element. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Opens the panel of the dropdown. */\n  openPanel() {\n    if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n      return;\n    }\n    this._panelOpen = true;\n    this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n    this._keyManager.withHorizontalOrientation(null);\n    this._highlightCorrectOption();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Closes the panel of the dropdown. */\n  closePanel() {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this.isStable = false;\n      this._keyManager.withHorizontalOrientation('ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n      this.openedChange.emit(false);\n      // defer the focus if the dropdown triggers actions that detach\n      // a template/view from the DOM to prevent changed after checked errors\n      setTimeout(() => this.focus());\n    }\n  }\n\n  // calculate inital scrollTop when the dropdown opens\n  // scrolls the selected item to the middle of the panel if possible\n  private _calculateScrollTop() {\n    // reset the scrolltop to make calculation easier\n    this.panelBody.nativeElement.scrollTop = 0;\n\n    if (!this.empty) {\n      const offset = this._getItemOffset(this._keyManager.activeItem);\n      const panelHeight = this.panelBody.nativeElement.offsetHeight;\n      const panelRect = this.panelBody.nativeElement.getBoundingClientRect();\n      const middleOfPanel = panelRect.top + panelHeight / 2;\n\n      if (offset > middleOfPanel) {\n        // because we reset the scrollTop to 0 at the top we can simply take the middleOfPanel which is our\n        // target position for the item and subtract it from the offset (which is now always relative to the viewport)\n        this.panelBody.nativeElement.scrollTop = offset - middleOfPanel;\n      }\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  private _scrollActiveOptionIntoView(): void {\n    if (!this.panelOpen || !this._keyManager.activeItem) {\n      return;\n    }\n\n    const activeItem = this._keyManager.activeItem.containerElement.nativeElement;\n    const panel = this.panelBody.nativeElement;\n    const panelOffset = panel.offsetTop;   // how much the overlay is repositioned on the page\n    const panelTopScrollPosition = panel.scrollTop;\n    const panelHeight = panel.clientHeight;\n    const itemTop = activeItem.offsetTop - panelOffset;\n    const itemBottom = activeItem.offsetTop - panelOffset + activeItem.getBoundingClientRect().height;\n\n    // item half or less visible on top\n    if (itemTop < panelTopScrollPosition) {\n      this.panelBody.nativeElement.scrollTop = itemTop;\n      // item half or less visible on bottom\n    } else if (itemBottom > (panelTopScrollPosition + panelHeight)) {\n      this.panelBody.nativeElement.scrollTop = itemBottom - panelHeight;\n    }\n  }\n\n  /** @docs-private */\n  private _getItemOffset(item) {\n    const itemRect = item.containerElement.nativeElement.getBoundingClientRect();\n\n    return itemRect.top + (itemRect.height / 2); // get position of the item's center\n  }\n\n  /**\n   * @docs-private\n   * Formfield Implementation\n   */\n  setDescribedByIds(ids: string[]): void {\n    this.ariaDescribedby = ids.join(' ');\n  }\n\n  /** @docs-private */\n  setAriaLabel(value: string) {\n    this._ariaLabel = value;\n  }\n\n  _getAriaLabel() {\n    return this._ariaLabel || (this.formFieldComponent ? this.formFieldComponent.label : null);\n  }\n\n  get _isInOutlineField(): boolean {\n    return this.formFieldComponent !== null\n      && this.formFieldComponent.appearance === 'outline';\n  }\n\n  /**\n   * @docs-private\n   * Whether the select has a value.\n   */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  /** @docs-private */\n  get hasValue() {\n    return this._selectionModel.hasValue();\n  }\n\n  /** @docs-private */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n  /** End Formfield */\n\n  /** ControlValueAccessor */\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  /** End ControlValueAccessor */\n\n  _handleKeydown(event: KeyboardEvent) {\n    this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n  }\n\n  private _handleClosedKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n      keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (isOpenKey || ((this.isMultiSelect || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.openPanel();\n    } else if (!this.isMultiSelect && !this.disabled) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n\n  private _handleOpenKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    // if has filter all events other than the listed ones should be ignored or handled in _onFilter()\n    if (!([DOWN_ARROW, UP_ARROW, HOME, END, ENTER, LEFT_ARROW, RIGHT_ARROW, SHIFT, SPACE, TAB].indexOf(keyCode) >= 0)\n         && this.showFilter) {\n      return;\n    }\n\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const manager = this._keyManager;\n\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n\n    if (keyCode === HOME || keyCode === END) {\n      event.preventDefault();\n      keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n    } else if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.closePanel();\n    } else if (keyCode === ENTER && manager.activeItem && !allHidden) {\n      event.preventDefault();\n\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === ENTER && allHidden) {\n      event.preventDefault();\n\n      this.closePanel();\n    } else if (!this.showFilter && keyCode === SPACE && manager.activeItem) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (keyCode === TAB) {\n      this.closePanel();\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n      manager.onKeydown(event);\n\n      this._ngZone.onStable\n        .asObservable()\n      .pipe(\n        take(1),\n        delay(251) // we need to defer to get the new activeItemIndex. delay > debouncing of the typeAhead\n       ).subscribe(() => {\n          this.isStable = true;\n          this._changeDetectorRef.detectChanges();\n        });\n\n      if (this.isMultiSelect && isArrowKey && event.shiftKey && manager.activeItem &&\n        manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  /** @docs-private */\n  formatValue(value): string {\n    return this.valueFormatter(value);\n  }\n\n  /** Called when the user types in the filter input */\n  _onFilter(event) {\n    event.preventDefault();\n    this.currentFilter = event.target.value;\n    this.filterChanges.next(event.target.value);\n    const allHidden = this.options.map(option => option._hidden).every(option => Boolean(option));\n    if (allHidden) {\n      this._keyManager.setActiveItem(null);\n    } else {\n      this._keyManager.setFirstItemActive();\n    }\n  }\n\n  /**\n   * @docs-private\n   * The value displayed in the trigger.\n   */\n  get triggerValue(): string {\n\n    if (this.empty) {\n      return '';\n    }\n\n    if (this.isMultiSelect) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      return selectedOptions.join(', ');\n    }\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      const overlayRef = this.overlayDir.overlayRef;\n      const positionStrategy = overlayRef.getConfig()\n        .positionStrategy as FlexibleConnectedPositionStrategy;\n\n      this._updatePositionOffset();\n      positionStrategy.withPositions(this._positions.slice());\n      overlayRef.updatePosition();\n\n      if (this._keyManager.activeItem) {\n        this._calculateScrollTop();\n      }\n\n      this._changeDetectorRef.markForCheck();\n      this.openedChange.emit(true);\n\n      // If there is no item selected, the filter takes the focus.\n      if (this.showFilter && !this._value) {\n        this.filterInput.nativeElement.focus();\n      } else {\n        this.panelBody.nativeElement.focus();\n      }\n    });\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (this.filterInput && this.showFilter) {\n      this._clearFilter();\n    }\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /** @docs-private */\n  get isFilterEmpty() {\n    return this.currentFilter.length === 0;\n  }\n\n  /** @docs-private */\n  _clearFilter() {\n    this.filterInput.nativeElement.value = '';\n    this.currentFilter = '';\n    this.filterChanges.next('');\n  }\n\n  /** @docs-private determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n}\n","import { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';\nimport { NxDropdownComponent } from './dropdown';\nimport { NxDropdownGroupComponent } from './group/dropdown-group';\nimport { NxDropdownItemComponent } from './item/dropdown-item';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { NxDropdownClosedLabelDirective } from './closed-label.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxFormfieldModule,\n    NxCheckboxModule,\n    OverlayModule,\n    A11yModule,\n    NxIconModule,\n    ObserversModule\n  ],\n  declarations: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ],\n  exports: [\n    NxDropdownComponent,\n    NxDropdownItemComponent,\n    NxDropdownGroupComponent,\n    NxDropdownClosedLabelDirective\n  ]\n})\nexport class NxDropdownModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\n\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Option selected event */\nexport class NxAutocompleteOptionSelected {\n  constructor(\n    /** The option that is selected or deselected. */\n    public source: NxAutocompleteOptionComponent,\n    /** Whether the input was triggered by the user. */\n    public isUserInput = false) { }\n}\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n@Component({\n  selector: 'nx-autocomplete-option',\n  templateUrl: 'autocomplete-option.component.html',\n  styleUrls: ['autocomplete-option.component.scss'],\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    '[class.nx-active]': 'active',\n    '[class.nx-disabled]': 'disabled',\n    '[style.display]': '\\'block\\'' // needed for to be able to calculate offset height\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxAutocompleteOptionComponent {\n\n  /** Id of the autocomplete option. By default it is set to an incremented value. */\n  public get id(): string {\n    return this._id;\n  }\n  private _id = `nx-autocomplete-option-${_uniqueIdCounter++}`;\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n  private _selected = false;\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n  private _active = false;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n    }\n  }\n  private _disabled = false;\n\n  /** The value of the autocomplete option. */\n  @Input() value: any;\n\n  /** Event emitted when the option is selected or deselected. */\n  @Output() readonly onSelectionChange = new EventEmitter<NxAutocompleteOptionSelected>();\n\n  constructor(\n    /** @docs-private */ public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new NxAutocompleteOptionSelected(this, isUserInput));\n  }\n\n  /** @docs-private */\n  get viewValue(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  /**\n   * @docs-private\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * @docs-private\n   * Gets the label to be used when determining whether the option should be focused.\n   */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Selects the option. */\n  select(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n\n  /**\n   * @docs-private\n   * Sets focus onto this option.\n   */\n  focus(): void {\n    const element = this.elementRef.nativeElement;\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n}\n","\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy, ChangeDetectorRef, OnDestroy,\n  Optional\n} from '@angular/core';\n\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\n/** Event object that is emitted when an autocomplete option is selected. */\nexport class NxAutocompleteSelectedEvent {\n  constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    public source: NxAutocompleteComponent,\n    /** Option that was selected. */\n    public option: NxAutocompleteOptionComponent\n    ) { }\n}\n\n@Component({\n  selector: 'nx-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  styleUrls: ['autocomplete.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxAutocomplete',\n  host: {\n    'class': 'nx-autocomplete'\n  }\n})\nexport class NxAutocompleteComponent implements AfterViewInit, OnDestroy {\n\n  /** Manages active item in option list based on key events. */\n  _keyManager: ActiveDescendantKeyManager<NxAutocompleteOptionComponent>;\n\n  /** Whether the autocomplete panel should be visible, depending on option length. */\n  showPanel: boolean = false;\n\n  /** Whether the autocomplete panel is open. */\n  get isOpen(): boolean { return this._isOpen && this.showPanel; }\n  _isOpen: boolean = false;\n\n  /** @docs-private */\n  @ViewChild(TemplateRef, { static: false }) template: TemplateRef<any>;\n\n  /**\n   * @docs-private\n   * Element for the panel containing the autocomplete options.\n   */\n  @ViewChild('panel', { static: false }) panel: ElementRef;\n\n  /** Items observable. If given, autocomplete takes care of the options and ng-content is discarderd */\n  @Input()\n  set items(val: Array<string> | Observable<Array<string>>) {\n    this._hasItems = true;\n    if (Array.isArray(val)) {\n      this._items = val;\n    } else if (val instanceof Observable) {\n      if (this._itemsSubscription) {\n        this._itemsSubscription.unsubscribe();\n      }\n      this._itemsSubscription = val.subscribe((itms) => {\n        this._items = itms;\n        this._changeDetectorRef.markForCheck();\n        // and check visibility in next cycle, when options are set\n        setTimeout(() => this._setVisibility());\n      });\n    } else if (val === null) {\n      this._items = val;\n    } else {\n      throw new Error('Invalid argument for autocomplete items. It has to be Array<string> or Observable<Array<string>>');\n    }\n  }\n  get items(): Array<string> | Observable<Array<string>> {\n    return this._items;\n  }\n  private _items: Array<string> = null;\n  private _itemsSubscription: Subscription;\n\n  /**\n   * @docs-private\n   * Is items observable set\n   */\n  public get hasItems(): boolean {\n    return this._hasItems;\n  }\n  private _hasItems = false;\n\n  /** Event that is emitted whenever an option from the list is selected. */\n  @Output() readonly optionSelected: EventEmitter<NxAutocompleteSelectedEvent> =\n      new EventEmitter<NxAutocompleteSelectedEvent>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Autocomplete options in view - ie from items */\n  @ViewChildren(NxAutocompleteOptionComponent)\n  private _vOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options in content - ie user provided */\n  @ContentChildren(NxAutocompleteOptionComponent, { descendants: true})\n  private _cOptions: QueryList<NxAutocompleteOptionComponent>;\n\n  /** Autocomplete options */\n  public get options(): QueryList<NxAutocompleteOptionComponent> {\n    return this.hasItems ? this._vOptions : this._cOptions;\n  }\n\n  /**\n   * Takes classes set on the host nx-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  @Input('class')\n  set classList(value: string) {\n    if (value && value.length) {\n      value.split(' ').forEach(className => this._classList[className.trim()] = true);\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  _classList: {[key: string]: boolean} = {};\n\n  /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n  id: string = `nx-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n\n  // As autocomplete option can hold any value, we might need a converter\n  // to get a string representation, which can be stored in input. Default value ? value.toString() : null.\n  /**\n   * Value to string converter.\n   */\n  @Input('nxValueFormatter')\n  public valueFormatter: (value: any) => string = (value: any) => value ? value.toString() : null\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n    @Optional() private formFieldComponent: NxFormfieldComponent) {\n  }\n\n  ngAfterViewInit(): void {\n    this._keyManager = new ActiveDescendantKeyManager<NxAutocompleteOptionComponent>(this.options).withWrap();\n    this._setVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._itemsSubscription) {\n      this._itemsSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n\n  /** Returns the panel's scrollTop. */\n  _getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!(this.options && this.options.length);\n    this._classList['nx-autocomplete-visible'] = this.showPanel;\n    this._classList['nx-autocomplete-hidden'] = !this.showPanel;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Emits the `select` event. */\n  _emitSelectEvent(option: NxAutocompleteOptionComponent): void {\n    const event = new NxAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n\n  get _isInOutlineField(): boolean {\n    return this.formFieldComponent !== null\n      && this.formFieldComponent.appearance === 'outline';\n  }\n}\n","import { NxFormfieldComponent } from '@allianz/ngx-ndbx/formfield';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ViewportRuler,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject, Subscription, defer, of, merge, fromEvent } from 'rxjs';\nimport { delay, filter, switchMap, take, tap, debounceTime, first } from 'rxjs/operators';\n\nimport { NxWordComponent } from '@allianz/ngx-ndbx/natural-language-form';\nimport { NxAutocompleteOptionComponent, NxAutocompleteOptionSelected } from './autocomplete-option.component';\nimport { NxAutocompleteComponent } from './autocomplete.component';\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nexport const NX_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxAutocompleteTriggerDirective),\n  multi: true\n};\n\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n */\nexport function getNxAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `nx-autocomplete`. ' +\n               'Make sure that the id passed to the `nxAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n\n@Directive({\n  selector: `input[nxAutocomplete], textarea[nxAutocomplete]`,\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  exportAs: 'nxAutocompleteTrigger',\n  providers: [NX_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class NxAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy, OnChanges, AfterViewInit {\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _componentDestroyed = false;\n\n  /** Old value of the native input. Used to work around issues with the `input` event on IE. */\n  private _previousValue: string | number | null;\n\n  /** Strategy that is used to position the panel. */\n  private _positionStrategy: FlexibleConnectedPositionStrategy;\n\n  /** Whether or not the label state is being overridden. */\n  private _manuallyFloatingLabel = false;\n\n  /** The subscription for closing actions (some are bound to document). */\n  private _closingActionsSubscription: Subscription;\n\n  /** Subscription to viewport size changes. */\n  private _viewportSubscription = Subscription.EMPTY;\n\n  /** Subscription to control value changes */\n  private _controlValueChangesSubscription: Subscription;\n\n  /** Subscription to items observable */\n  private _itemsSubscription: Subscription;\n\n  /** Stream of keyboard events that can close the panel. */\n  private readonly _closeKeyEventStream = new Subject<void>();\n\n  /** Value changes */\n  private readonly _valueChanges: Subject<any> = new Subject<any>();\n\n  /** The autocomplete panel to be attached to this trigger. */\n  @Input('nxAutocomplete') autocomplete: NxAutocompleteComponent;\n\n  /** The items callback. Called with input value, must return Observable of Array of strings */\n  @Input('nxAutocompleteItems')\n  set itemsCb(val: (val: string) => Observable<Array<string>>) {\n    if (typeof val === 'function') {\n      this._itemsCb = val;\n    } else {\n      throw new Error('Wrong value type for nxAutocompleteItems');\n    }\n  }\n  get itemsCb() {\n    return this._itemsCb;\n  }\n  private _itemsCb: (val: string) => Observable<Array<string>> = null;\n\n  /** Debounce in ms before items callback is triggered. Defaults to 400 */\n  @Input('nxAutocompleteDebounce')\n  set debounce(val: number) {\n    this._debounce = coerceNumberProperty(val);\n  }\n  private _debounce: number = 400;\n\n  /** Whether autocomplete functionality is disabled. */\n  @Input('nxAutocompleteDisabled')\n  set autocompleteDisabled(val: boolean) {\n    this._autocompleteDisabled = val;\n    this._bindAutocompleteItems();\n  }\n  get autocompleteDisabled() {\n    return this._autocompleteDisabled;\n  }\n  private _autocompleteDisabled = false;\n\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen(): boolean {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  private _overlayAttached: boolean = false;\n\n  /** Stream of autocomplete option selections. */\n  readonly optionSelections: Observable<NxAutocompleteOptionSelected> = defer<Observable<NxAutocompleteOptionSelected>>(() => {\n    if (this.autocomplete && this.autocomplete.options) {\n     return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n    }\n\n    // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n    // Return a stream that we'll replace with the real one once everything is in place.\n    return this._zone.onStable\n        .asObservable()\n        .pipe(take(1), switchMap(() => this.optionSelections));\n  });\n\n  /** The currently active option, coerced to NxAutocompleteOptionComponent type. */\n  get activeOption(): NxAutocompleteOptionComponent | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  /** Stream of clicks outside of the autocomplete panel. */\n  private get _outsideClickStream(): Observable<any> {\n    if (!this._document) {\n      return of(null);\n    }\n\n    return merge(\n      fromEvent(this._document, 'click'),\n      fromEvent(this._document, 'touchend')\n    )\n    .pipe(filter((event: MouseEvent | TouchEvent) => {\n      const clickTarget = event.target as HTMLElement;\n      const formField = this._formField ?\n          this._formField.elementRef.nativeElement : null;\n\n      return this._overlayAttached &&\n              clickTarget !== this._element.nativeElement &&\n              (!formField || !formField.contains(clickTarget)) &&\n              (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }));\n  }\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = (val) => {\n    this._valueChanges.next(val);\n  }\n\n  /** `View -> model callback called when autocomplete has been touched` */\n  _onTouched = () => {};\n\n  private get _formField(): NxFormfieldComponent | NxWordComponent {\n    if (this._nxFormField) {\n      return this._nxFormField;\n    } else if (this._nxWordField) {\n      return this._nxWordField;\n    }\n  }\n\n  constructor(private _element: ElementRef, private _overlay: Overlay,\n              private _viewContainerRef: ViewContainerRef,\n              private _zone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() @Host() private _nxFormField: NxFormfieldComponent,\n              @Optional() @Host() private _nxWordField: NxWordComponent,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              // @deletion-target 7.0.0 Make `_viewportRuler` required.\n              private _viewportRuler?: ViewportRuler) {}\n\n  ngOnDestroy() {\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    if (this._controlValueChangesSubscription) { this._controlValueChangesSubscription.unsubscribe(); }\n    if (this._itemsSubscription) { this._itemsSubscription.unsubscribe(); }\n  }\n\n  ngOnChanges() {\n    this._bindAutocompleteItems();\n  }\n\n  ngAfterViewInit() {\n    this._bindAutocompleteItems();\n  }\n\n  /**\n   * Binds or rebinds the autocomplete items. Prerequisites:\n   * - items callback has to be defined\n   * - autocomplete panel has to be bound\n   */\n  private _bindAutocompleteItems() {\n    if (this._controlValueChangesSubscription) {\n      this._controlValueChangesSubscription.unsubscribe();\n    }\n\n    if (typeof this._itemsCb === 'function' && this.autocomplete && !this.autocompleteDisabled) {\n\n      const itemsSubject = new Subject<string[]>();\n\n      this.autocomplete.items = itemsSubject;\n\n      const valueChanges =\n        this._formField &&\n        this._formField._control &&\n        this._formField._control.ngControl &&\n        this._formField._control.ngControl.valueChanges ?\n          this._formField._control.ngControl.valueChanges : this._valueChanges;\n\n      this._controlValueChangesSubscription = valueChanges.pipe(debounceTime(this._debounce))\n        .subscribe((input) => {\n          if (this._itemsSubscription) {\n            this._itemsSubscription.unsubscribe();\n          }\n          this._itemsSubscription = this._itemsCb(input).pipe(first()).subscribe(\n            (result) => {\n              itemsSubject.next(result);\n            },\n            (err) => {\n              // On error reset\n              // TODO: Log error?\n              itemsSubject.next([]);\n            }\n          );\n        });\n    }\n  }\n\n  /** Opens the autocomplete suggestion panel. */\n  openPanel(): void {\n    if (!this.autocompleteDisabled) {\n      this._attachOverlay();\n      this._floatLabel();\n    }\n  }\n\n  /** Closes the autocomplete suggestion panel. */\n  closePanel(): void {\n    this._resetLabel();\n\n    if (!this._overlayAttached) {\n      return;\n    }\n\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      this.autocomplete.closed.emit();\n    }\n\n    this.autocomplete._isOpen = this._overlayAttached = false;\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions(): Observable<NxAutocompleteOptionSelected> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)),\n      this._closeKeyEventStream,\n      this._outsideClickStream,\n      this._overlayRef ?\n          this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n          of()\n    );\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE) {\n      event.preventDefault();\n    }\n\n    // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n    // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n    if (this.panelOpen && (keyCode === ESCAPE || (keyCode === UP_ARROW && event.altKey))) {\n      this._resetActiveItem();\n      this._closeKeyEventStream.next();\n      event.stopPropagation();\n    } else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n\n      if (this.panelOpen || keyCode === TAB) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._isFieldEnabled()) {\n        this.openPanel();\n      }\n\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption();\n      }\n    }\n  }\n\n  _handleInput(event: KeyboardEvent): void {\n    const target = event.target as HTMLInputElement;\n    let value: number | string | null = target.value;\n\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value === '' ? null : parseFloat(value);\n    }\n\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._isFieldEnabled() && this._previousValue !== value &&\n      document.activeElement === event.target) {\n      this._previousValue = value;\n      this._onChange(value);\n      this.openPanel();\n    }\n  }\n\n  _handleFocus(): void {\n    if (this._isFieldEnabled()) {\n      this._previousValue = this._element.nativeElement.value;\n      this.openPanel();\n    }\n  }\n\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  private _floatLabel(): void {\n    if (this._nxFormField && this._nxFormField.floatLabel === 'auto') {\n      this._nxFormField.floatLabel = 'always';\n      this._manuallyFloatingLabel = true;\n    }\n  }\n\n  /** If the label has been manually elevated, return it to its normal state. */\n  private _resetLabel(): void  {\n    if (this._manuallyFloatingLabel) {\n      this._nxFormField.floatLabel = 'auto';\n      this._manuallyFloatingLabel = false;\n    }\n  }\n\n  /**\n   * Given that we are not actually focusing active options, we must manually adjust scroll\n   * to reveal options below the fold. First, we find the offset of the option from the top\n   * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n   * the panel height + the option height, so the active option will be just visible at the\n   * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n   * will become the offset. If that offset is visible within the panel already, the scrollTop is\n   * not adjusted.\n   */\n  private _scrollToOption(): void {\n\n    if (this.autocomplete.options.length === 0) {\n      return;\n    }\n    let optionOffset = 0;\n    const optionHeight = this.autocomplete.options.first.elementRef.nativeElement.offsetHeight;\n    if (this.autocomplete._keyManager.activeItem) {\n      optionOffset = this.autocomplete._keyManager.activeItem.elementRef.nativeElement.offsetTop;\n    }\n\n    const newScrollPosition = _getOptionScrollPosition(\n      optionOffset,\n      optionHeight,\n      this.autocomplete._getScrollTop(),\n      this.autocomplete.panel.nativeElement.offsetHeight\n    );\n\n    this.autocomplete._setScrollTop(newScrollPosition);\n  }\n\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  private _subscribeToClosingActions(): Subscription {\n    const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(\n      tap(() =>  this._positionStrategy.reapplyLastPosition()),\n      // Defer emitting to the stream until the next tick, because changing\n      // bindings in here will cause \"changed after checked\" errors.\n      delay(0)\n    );\n\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges)\n      .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n          this._resetActiveItem();\n          this.autocomplete._setVisibility();\n          return this.panelClosingActions;\n        }),\n        // when the first closing event occurs...\n        take(1)\n      )\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n  }\n\n  /** Destroys the autocomplete suggestion panel. */\n  private _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  private _setTriggerValue(value: any): void {\n\n    const toDisplay = this.autocomplete && this.autocomplete.valueFormatter ?\n      this.autocomplete.valueFormatter(value) :\n      value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `NxFormField` or `NxWord`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n  }\n\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  private _setValueAndClose(event: NxAutocompleteOptionSelected | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  private _clearPreviousSelectedOption(skip: NxAutocompleteOptionComponent) {\n    this.autocomplete.options.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getNxAutocompleteMissingPanelError();\n    }\n\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      this._overlayRef = this._overlay.create(this._getOverlayConfig());\n\n      if (this._viewportRuler) {\n        this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n          if (this.panelOpen && this._overlayRef) {\n            this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n          }\n        });\n      }\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.updateSize({minWidth: this._getHostWidth()});\n    }\n\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    const wasOpen = this.panelOpen;\n\n    this.autocomplete._setVisibility();\n    this.autocomplete._isOpen = this._overlayAttached = true;\n\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this.autocomplete.opened.emit();\n    }\n  }\n\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      minWidth: this._getHostWidth(),\n      direction: this._dir ? this._dir.value : 'ltr'\n    });\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this._getConnectedElement())\n      .withViewportMargin(16)\n      .withPush(false)\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom',\n        }\n      ]);\n\n    return this._positionStrategy;\n  }\n\n  private _scrollStrategy() {\n    return this._overlay.scrollStrategies.reposition();\n  }\n\n  private _getConnectedElement(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n\n  /** Returns the width of the input element, so the panel min-width can match it. */\n  private _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n\n  /**\n   * Resets the active item to -1 so arrow events will activate the\n   * correct options, or to 0 if the consumer opted into it.\n   */\n  private _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(-1);\n  }\n\n  /** Determines whether the panel can be opened. */\n  private _isFieldEnabled(): boolean {\n    const element: HTMLInputElement = this._element.nativeElement;\n    return !element.readOnly && !element.disabled;\n  }\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Option offset\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset: number, optionHeight: number,\n  currentScrollPosition: number, panelHeight: number): number {\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAutocompleteComponent } from './autocomplete.component';\nimport { NxAutocompleteOptionComponent } from './autocomplete-option.component';\nimport { NxAutocompleteTriggerDirective } from './autocomplete-trigger.directive';\n\n@NgModule({\n  declarations: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  exports: [NxAutocompleteComponent, NxAutocompleteOptionComponent, NxAutocompleteTriggerDirective],\n  imports: [CommonModule, OverlayModule, A11yModule]\n})\nexport class NxAutocompleteModule { }\n","import { NxFormfieldControl, NxFormfieldErrorDirective } from '@allianz/ngx-ndbx/formfield';\nimport { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { Overlay, OverlayConfig, OverlayPositionBuilder,\n  OverlayRef, FlexibleConnectedPositionStrategy, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  EmbeddedViewRef,\n  OnInit\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subject ,  Subscription } from 'rxjs';\n\nimport { NxPopoverComponent } from '@allianz/ngx-ndbx/popover';\nimport { NxDropdownComponent } from '@allianz/ngx-ndbx/dropdown';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\n/** Type to determine the minimal width of a word. */\nexport type SIZES = 'regular' | 'short' | 'long';\n\n@Component({\n  selector: 'nx-word',\n  templateUrl: 'word.component.html',\n  styleUrls: [\n    'word.component.scss'\n  ],\n  host: {\n    '[class.size-short]': 'size == \"short\"',\n    '[class.size-regular]': 'size == \"regular\"',\n    '[class.size-long]': 'size == \"long\"',\n    '[class.has-error]': '_hasErrors',\n    '[class.is-focused]': 'isFocused',\n    '[class.is-filled]': 'isFilled',\n    '[class.has-dropdown]': 'hasDropdown',\n\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n\nexport class NxWordComponent implements AfterContentInit, OnDestroy, OnInit {\n  private subscription: Subscription = Subscription.EMPTY;\n  private subscriptionValues: Subscription = Subscription.EMPTY;\n  private measureCanvas: HTMLCanvasElement;\n\n  /** @docs-private */\n  inputChanges = new Subject<any>();\n\n  _hasErrors: boolean = false;\n  private _overlayRef: OverlayRef;\n  private _embeddedViewRef: EmbeddedViewRef<any>;\n  private _overlayState: OverlayConfig;\n\n  @ContentChild(NxFormfieldControl, {static: false}) _control: NxFormfieldControl<any>;\n  @ContentChildren(NxFormfieldErrorDirective) _errorChildren: QueryList<NxFormfieldErrorDirective>;\n  @ViewChild('popover', { static: true }) _popover: NxPopoverComponent;\n  @ContentChild(NxDropdownComponent, {static: false}) _dropdown: NxDropdownComponent;\n\n  /** @docs-private */\n  @HostBinding('style.width.px')\n  currentTextWidth: number = 0;\n\n  // this will apply different min-widths to our component through our styles\n  /** Provide a hint for a minimal width. The actual size will be determined for inputs for each change. */\n  @Input('nxSize') size: SIZES = 'regular';\n\n  /**\n   * A word doesn't have a set place to show labels.\n   * In order to be accessible, you have to provide a label with this property.\n   * It will be attached to the given input through `aria-label`.\n   */\n  @Input('nxLabel') label: string;\n\n  constructor(\n    /** @docs-private */\n    public elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _overlay: Overlay,\n    private _viewContainerRef: ViewContainerRef,\n    private _overlayPositionBuilder: OverlayPositionBuilder\n  ) { }\n\n  ngOnInit() {\n    this.setupErrorPopover();\n  }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n    this.subscription = this._control.stateChanges.pipe(startWith(null)).subscribe(() => {\n      this._hasErrors = this._control.errorState;\n      this.updateErrorPopoverState();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // if we have a ngcontrol available stick to its valueChanges subject\n    if (this._control.ngControl) {\n      this.subscriptionValues = this._control.ngControl.valueChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    // in any other case it is a bre input and input changes are signaled through simple state changes\n    } else {\n      this.subscriptionValues = this._control.stateChanges.subscribe(value => {\n        this.updateCurrentTextWidth();\n        this.inputChanges.next();\n      });\n    }\n\n    this._control.setAriaLabel(this.label);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n    @docs-private\n    Calculate the width of the full text given by the input,\n    that value is bound to this component so it can grow.\n\n    The involved input is known to have a width of 100% an will fit the additional space given\n    which completes the auto growing behavior.\n  */\n  updateCurrentTextWidth() {\n    // provide the canvas only lazy\n    if (!this.measureCanvas) {\n      this.measureCanvas = this._renderer.createElement('canvas');\n    }\n\n    const ctx = this.measureCanvas.getContext('2d');\n    const inputRef = this._control.elementRef;\n    const styles = window.getComputedStyle(inputRef.nativeElement);\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._control.value);\n    // add 1px (cursor width) to prevent jumping of the text on blur.\n    const newWidth = metrics.width + parseInt(styles.paddingRight, 10) + parseInt(styles.paddingLeft, 10) + 1;\n\n    // This should be injected via @Host to get an exact reference to NxNaturalLanguageFormComponent\n    // Works as promised as long as there is not other tag around the word. Not expected but possible.\n    const parent: HTMLElement = this.elementRef.nativeElement.parentElement;\n    const parentMeasurement = parent.getBoundingClientRect();\n\n    // Limit to own given minimal width\n    this.currentTextWidth = Math.max(parseInt(styles.minWidth, 10), newWidth);\n\n    // Limit to container width\n    this.currentTextWidth = Math.min(this.currentTextWidth, parentMeasurement.width);\n\n    if (this._overlayRef.hasAttached()) {\n      this._overlayState.positionStrategy.apply();\n    }\n  }\n\n  /** @docs-private */\n  repositionError() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayState.positionStrategy.apply();\n    }\n  }\n\n  // Fail if the required control is missing.\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw new Error('NxWordComponent requires an NxFormfieldControl compatible input.');\n    }\n  }\n\n  /** @docs-private */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this.elementRef;\n  }\n\n  /** @docs-private */\n  get isFocused(): boolean {\n    return this._control.focused;\n  }\n\n  /** @docs-private */\n  get isFilled(): boolean {\n    return !this._control.empty;\n  }\n\n  /** @docs-private */\n  get hasDropdown(): boolean {\n    return Boolean(this._dropdown);\n  }\n\n  updateErrorPopoverState() {\n    if (this._hasErrors && this._errorChildren.length > 0) {\n        this.showPopover();\n      } else {\n        this.hidePopover();\n    }\n  }\n\n  setupErrorPopover() {\n    const positionStrategy = this._overlayPositionBuilder\n      .flexibleConnectedTo(this.elementRef)\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true)\n      .withPositions([{\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n      },\n      {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n      }])\n      .withDefaultOffsetY(-8);\n\n    this._overlayState = new OverlayConfig();\n    this._overlayState.positionStrategy = positionStrategy;\n    this._overlayState.scrollStrategy = this._overlay.scrollStrategies.reposition();\n    this._overlayRef = this._overlay.create(this._overlayState);\n\n    (this._overlayState.positionStrategy as FlexibleConnectedPositionStrategy).positionChanges.subscribe(change => {\n      const pair = change.connectionPair;\n      this.positionArrow(pair);\n\n      // These position changes arrive too late,\n      // We have to trigger the change detection manually\n      // as it's detached from any render hierarchy\n      // and only updated by the overlay when attached.\n      if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n        this._embeddedViewRef.detectChanges();\n      }\n    }\n    );\n  }\n\n  private positionArrow(pair: ConnectionPositionPair) {\n    const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const parentElementLeftOffset = this._overlayRef.overlayElement.parentElement.offsetLeft;\n    const overlayElementLeftOffset = this._overlayRef.overlayElement.offsetLeft;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (parentElementLeftOffset + overlayElementLeftOffset);\n\n    if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this._popover.direction = 'top';\n    } else {\n      this._popover.direction = 'bottom';\n    }\n\n    this._popover.arrowStyle = {left: targetPosition + 'px'};\n  }\n\n  showPopover() {\n    if (!this._overlayRef.hasAttached()) {\n      const tooltipPortal = new TemplatePortal(this._popover.templateRef, this._viewContainerRef);\n      this._embeddedViewRef = this._overlayRef.attach(tooltipPortal);\n    }\n  }\n\n  hidePopover() {\n    this._overlayRef.detach();\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { delay, throttleTime } from 'rxjs/operators';\n\nimport { NxWordComponent } from './word.component';\n\n/** Size of the NLF. */\nexport type NxNaturalLanguageFormSize = 'small' | 'large';\n\nconst DEFAULT_SIZE = 'large';\n\n@Component({\n  selector: 'nx-natural-language-form',\n  templateUrl: 'natural-language-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['natural-language-form.scss'],\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.nx-natural-language-form--small]' : 'size === \"small\"',\n    '[class.nx-natural-language-form--large]' : 'size === \"large\"',\n  }\n})\n\nexport class NxNaturalLanguageFormComponent implements AfterContentInit, OnDestroy {\n  private _negative = false;\n\n  /** @docs-private */\n  resizeEvent$: Subject<void> = new Subject<void>();\n\n  /** @docs-private */\n  resizeObservable: Observable<void>;\n\n  @ContentChildren(NxWordComponent) _words: QueryList<NxWordComponent>;\n\n  /** @docs-private */\n  updatePopoversSubscription: Subscription = Subscription.EMPTY;\n\n  /** @docs-private */\n  private _size: NxNaturalLanguageFormSize = DEFAULT_SIZE;\n\n  /** Whether the negative set of stylings should be used. */\n  @Input('nxNegative')\n  set negative(value) {\n    this._negative = coerceBooleanProperty(value);\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  /**\n   * Sets the size of the NLF. Default value: large\n   */\n  @Input()\n  set size(value: NxNaturalLanguageFormSize) {\n    this._size = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get size(): NxNaturalLanguageFormSize {\n    return this._size;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  @HostListener('window:orientationchange', ['$event'])\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.resizeEvent$.next();\n  }\n\n  ngAfterContentInit() {\n    // Collect all words and listen for changes so we can update any open error popover\n    // which would otherwise get wrongly positioned.\n    const subjects = this._words.map((word: NxWordComponent) => word.inputChanges);\n    const source = merge(...subjects);\n\n    this.updatePopoversSubscription = source.subscribe( () => {\n      this.updatePositionPopovers();\n    });\n\n    this.resizeObservable = this.resizeEvent$.pipe(throttleTime(500), delay(100));\n    this.resizeObservable.subscribe(() => this.resizeWords());\n  }\n\n  /** @docs-private */\n  resizeWords() {\n    this._words.forEach((word: NxWordComponent) => {\n      word.updateCurrentTextWidth();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updatePopoversSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  updatePositionPopovers() {\n    if (this._words) {\n      this._words.forEach((word: NxWordComponent) => {\n        word.repositionError();\n      });\n    }\n  }\n}\n","import { NxPopoverModule } from '@allianz/ngx-ndbx/popover';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NxWordComponent } from './word.component';\nimport { NxNaturalLanguageFormComponent } from './natural-language-form.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxInputModule,\n    NxPopoverModule\n  ],\n  declarations: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ],\n  exports: [\n    NxNaturalLanguageFormComponent,\n    NxWordComponent\n  ]\n})\nexport class NxNaturalLanguageFormModule {}\n","import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** The contextual type of a message. */\nexport type CONTEXT = 'regular' | 'info' | 'error' | 'success' | 'warning';\n\nconst ICONS = {\n  info: 'info-circle',\n  error: 'exclamation-triangle',\n  success: 'check-circle',\n  warning: 'exclamation-circle'\n};\n\n@Component({\n  selector: 'nx-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'nxMessage',\n  host: {\n    '[class.context-info]': 'context === \"info\"',\n    '[class.context-error]': 'context === \"error\"',\n    '[class.context-success]': 'context === \"success\"',\n    '[class.context-warning]': 'context === \"warning\"',\n    '[class.nx-message--closable]': 'closable'\n\n  }\n})\nexport class NxMessageComponent {\n\n  private _context: CONTEXT = 'regular';\n\n  /**\n   * Sets the context of the message.\n   * The message box will color accordingly. Default: 'regular' */\n  @Input('nxContext')\n  set context(value: CONTEXT) {\n    if (value !== this._context) {\n      this._context = value;\n      this._icon = this.getIconName();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get context(): CONTEXT {\n    return this._context;\n  }\n\n  private _showIcon: boolean = false;\n\n  /**\n   * Whether an icon that belongs to the context of the message should be displayed.\n   *\n   * **Important:** The `showIcon` attribute should always be set to `true` due to deprecation.\n   *\n   * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.\n   * @deletion-target 9.0.0\n   * */\n  @Input()\n  set showIcon(value: boolean) {\n    this._showIcon = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n\n  private _closable: boolean = false;\n\n  /** Whether a message should have a close icon in order to be dismissed. */\n  @Input()\n  set closable(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._closable) {\n      this._closable = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  private _icon: string;\n\n  /** @docs-private */\n  get icon(): string {\n    return this._icon;\n  }\n\n  private _closeButtonLabel: string = 'Close dialog';\n\n  /** Sets the label of the close button of the message. */\n  @Input()\n  set closeButtonLabel(value: string) {\n    if (value !== this._closeButtonLabel) {\n      this._closeButtonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get closeButtonLabel(): string {\n    return this._closeButtonLabel;\n  }\n\n  /** Event emitted when the close icon of the message has been clicked. */\n  @Output('close') closeEvent = new EventEmitter<void>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /** @docs-private */\n  _emitCloseEvent() {\n    this.closeEvent.emit();\n  }\n\n  /** @docs-private */\n  getIconName(): string {\n    if (this._context === 'info') {\n      return ICONS.info;\n    } else if (this._context === 'error') {\n      return ICONS.error;\n    } else if (this._context === 'success') {\n      return ICONS.success;\n    } else if (this._context === 'warning') {\n      return ICONS.warning;\n    }\n    return '';\n  }\n}\n","import {\n  AnimationTriggerMetadata,\n  trigger,\n  state,\n  transition,\n  style,\n  animate,\n} from '@angular/animations';\n\n/**\n * Animations used by the Message Toast.\n * @docs-private\n */\nexport const messageToastAnimations: {\n   toastState: AnimationTriggerMetadata\n} = {\n  toastState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0, transform: 'translateY(100%)' })),\n    state('visible', style({ opacity: 1 })),\n    transition('* => visible', animate('300ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 1, transform: 'translateY(0)' })\n    )),\n    transition('* => hidden', animate('300ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 0, transform: 'translateY(200%)' }))),\n  ])\n};\n\n/** @docs-private */\nexport type NxMessageToastAnimationState = 'void' | 'visible' | 'hidden';\n","\nimport { AriaLivePoliteness } from '@angular/cdk/a11y';\n\n/** The contextual type of a message. */\nexport type NxMessageToastContext = 'info' | 'success';\n\n/**\n * Configuration used when opening a message toast.\n */\nexport class NxMessageToastConfig {\n  /** The politeness level for the LiveAnnouncer announcement.\n   *\n   *  Default value: 'polite'.\n   */\n  politeness?: AriaLivePoliteness = 'polite';\n\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a toast message without a custom\n   * component or template, the announcement message will default to the specified message.\n   *\n   * Default value: ''.\n   */\n  announcementMessage?: string = '';\n\n  /** The length of time in milliseconds to wait before automatically dismissing the message toast.\n   *\n   * Default value: 3000.\n   */\n  duration?: number = 3000;\n\n  /** Context of the message toast.\n   *\n   * Default value: 'info'. */\n  context?: NxMessageToastContext = 'info';\n}\n\n/**\n * @docs-private\n * Needed so that the user text data can be injected in the message toastcomponent\n */\nexport class NxMessageToastData {\n  constructor(public data: string) { }\n}\n","import { Component, OnDestroy, ViewChild, NgZone, ChangeDetectorRef, ComponentRef, EmbeddedViewRef } from '@angular/core';\nimport { messageToastAnimations } from './message-toast-animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { NxMessageToastConfig, NxMessageToastData } from './message-toast-config';\nimport { take } from 'rxjs/operators';\nimport { AnimationEvent } from '@angular/animations';\n\nconst ICONS = {\n  info: 'info-circle',\n  success: 'check-circle',\n};\n\n/**\n * Internal component that wraps user-provided message toastcontent.\n * @docs-private\n */\n@Component({\n  selector: 'nx-message-toast',\n  templateUrl: './message-toast.component.html',\n  styleUrls: ['./message-toast.component.scss'],\n  host: {\n    '[attr.role]': '_role',\n    '[class.context-info]': '_context === \"info\"',\n    '[class.context-success]': '_context === \"success\"',\n    '[@state]': '_animationState',\n    '(@state.done)': 'onAnimationEnd($event)'\n  },\n  animations: [messageToastAnimations.toastState]\n})\nexport class NxMessageToastComponent extends BasePortalOutlet implements OnDestroy {\n\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the message toastcontent will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** Subject for notifying that the message toasthas exited from view. */\n  readonly _onExit: Subject<any> = new Subject();\n\n  /** Subject for notifying that the message toasthas finished entering the view. */\n  readonly _onEnter: Subject<any> = new Subject();\n\n  /** The state of the message toastanimations. */\n  _animationState = 'void';\n\n  /** ARIA role for the message toastcontainer. */\n  _role: 'alert' | 'status' | null;\n\n  _context;\n\n  constructor(\n    private _ngZone: NgZone,\n    private _changeDetectorRef: ChangeDetectorRef,\n    /** The message toastconfiguration. */\n    public config: NxMessageToastConfig,\n    /** Injected data into the notifciation. */\n    public data?: NxMessageToastData\n  ) {\n    super();\n\n    this._context = this.config.context;\n    this._setAriaLabels();\n  }\n\n  /** Attach a component portal as content to this message toastcontainer. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._assertNotAttached();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this message toastcontainer. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._assertNotAttached();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /** Handle end of animations, updating the state of the notification. */\n  onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n      this._completeExit();\n    }\n\n    if (toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this._onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  /** Begin animation of message toastentrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the message toastexiting from view. */\n  exit() {\n    // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n    // where multiple notifications are opened in quick succession (e.g. two consecutive calls to\n    // `NxMessageToastService.open`).\n    this._animationState = 'hidden';\n  }\n\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  /**\n   * Waits for the zone to settle before removing the element. Helps prevent\n   * errors where we end up removing an element which is in the middle of an animation.\n   */\n  private _completeExit() {\n    this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n\n  /** Asserts that no content is already attached to the container. */\n  private _assertNotAttached() {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach message toastcontent after content is already attached');\n    }\n  }\n\n  _getIconName(): string {\n    return this._context === 'success' ? ICONS.success : ICONS.info;\n  }\n\n  _setAriaLabels() {\n     // Based on the ARIA spec, `alert` and `status` roles have an\n    // implicit `assertive` and `polite` politeness respectively.\n    if (this.config.politeness === 'assertive' && !this.config.announcementMessage) {\n      this._role = 'alert';\n    } else if (this.config.politeness === 'off') {\n      this._role = null;\n    } else {\n      this._role = 'status';\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxMessageComponent } from './message/message.component';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { NxMessageToastComponent } from './message-toast/message-toast.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule,\n    OverlayModule,\n    PortalModule\n  ],\n  declarations: [\n    NxMessageComponent,\n    NxMessageToastComponent\n  ],\n  exports: [\n    NxMessageComponent\n  ],\n  entryComponents: [\n    NxMessageToastComponent\n  ]\n})\nexport class NxMessageModule {\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { Subject, Observable } from 'rxjs';\nimport { NxMessageToastComponent } from './message-toast.component';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n\nexport class NxMessageToastRef {\n\n  /**\n   * The instance of the component making up the content of the message toast.\n   * @docs-private\n   */\n  toastInstance: NxMessageToastComponent;\n\n  /** Subject for notifying the user that the message toasthas been dismissed. */\n  private readonly _afterDismissed = new Subject<any>();\n\n  /** Subject for notifying the user that the message toasthas opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the message toastis\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: any;\n\n  constructor(toastInstance: NxMessageToastComponent,\n              private _overlayRef: OverlayRef) {\n    this.toastInstance = toastInstance;\n    toastInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the message toast. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.toastInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Dismisses the message toastafter some duration */\n  _dismissAfter(duration: number): void {\n    // Note that we need to cap the duration to the maximum value for setTimeout, because\n    // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n  }\n\n  /** Marks the message toastas opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    this._afterDismissed.next();\n    this._afterDismissed.complete();\n  }\n\n  /** Gets an observable that is notified when the message toastis finished closing. */\n  afterDismissed(): Observable<any> {\n    return this._afterDismissed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the message toasthas opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.toastInstance._onEnter;\n  }\n}\n","import { Injectable, Injector, ComponentRef, TemplateRef, InjectionToken, Inject, Optional, SkipSelf, OnDestroy } from '@angular/core';\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { NxMessageToastComponent } from './message-toast.component';\nimport { NxMessageToastConfig, NxMessageToastData } from './message-toast-config';\nimport { NxMessageToastRef } from './message-toast-ref';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { NxMessageModule } from '../message.module';\n\n/** Injection token that can be used to specify default message toast. */\nexport const NX_MESSAGE_TOAST_DEFAULT_CONFIG =\n  new InjectionToken<NxMessageToastConfig>('NX_MESSAGE_TOAST_DEFAULT_CONFIG');\n\n/** A service for dispatching and displaying toast messages. */\n@Injectable({ providedIn: NxMessageModule })\nexport class NxMessageToastService implements OnDestroy {\n\n/**\n * Reference to the current message toast in the view *at this level* (in the Angular injector tree).\n * If there is a parent message toast service, all operations should delegate to that parent\n * via `_oldToastMessageRef`.\n */\n  private _toastRefAtThisLevel: NxMessageToastRef | null = null;\n\n  /** Reference to the currently opened message toastat *any* level. */\n  get _oldToastMessageRef(): NxMessageToastRef | null {\n    const parent = this._parentMessageToastService;\n    return parent ? parent._oldToastMessageRef : this._toastRefAtThisLevel;\n  }\n\n  set _oldToastMessageRef(value: NxMessageToastRef | null) {\n    if (this._parentMessageToastService) {\n      this._parentMessageToastService._oldToastMessageRef = value;\n    } else {\n      this._toastRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n    private _overlay: Overlay,\n    private _injector: Injector,\n    private _live: LiveAnnouncer,\n    @Optional() @SkipSelf() private _parentMessageToastService: NxMessageToastService,\n    @Optional() @Inject(NX_MESSAGE_TOAST_DEFAULT_CONFIG) private _defaultConfig: NxMessageToastConfig) { }\n\n  /** Creates and dispatches a message toastwith a custom text.\n   *\n   * @param text Text to be used for the message toast.\n   * @param config Extra configuration for the message toast.\n  */\n  open(text: string, config?: NxMessageToastConfig): NxMessageToastRef {\n    const currentConfig = { ...new NxMessageToastConfig(), ...this._defaultConfig, ...config };\n    const overlayRef = this._createOverlay(currentConfig);\n    const injector = this._createInjector(currentConfig, new NxMessageToastData(text), this._injector);\n\n    const componentPortal = new ComponentPortal(NxMessageToastComponent, undefined, injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const toastRef = new NxMessageToastRef(componentRef.instance, overlayRef);\n\n    this._animateToast(toastRef, currentConfig);\n    this._oldToastMessageRef = toastRef;\n    return this._oldToastMessageRef;\n  }\n\n  /** Creates and dispatches a message toastwith a custom template for the content.\n   *\n   * @param template Template to be used for the message toast.\n   * @param config Extra configuration for the message toast.\n  */\n  openFromTemplate(template: TemplateRef<any>, config?: NxMessageToastConfig): NxMessageToastRef {\n    const currentConfig = { ...new NxMessageToastConfig(), ...this._defaultConfig, ...config };\n    const overlayRef = this._createOverlay(currentConfig);\n    const container = this._attachToastComponent(overlayRef, currentConfig);\n    const toastRef = new NxMessageToastRef(container, overlayRef);\n    const portal = new TemplatePortal(template, null!, toastRef);\n\n    container.attachTemplatePortal(portal);\n    this._animateToast(toastRef, currentConfig);\n    this._oldToastMessageRef = toastRef;\n    return this._oldToastMessageRef;\n  }\n\n  // Attaches the message toastcontainer component to the overlay.\n  private _attachToastComponent(overlayRef: OverlayRef, config: NxMessageToastConfig): NxMessageToastComponent {\n    const injector = this._createInjector(config, null, this._injector);\n    const containerPortal = new ComponentPortal(NxMessageToastComponent, null, injector);\n    const containerRef: ComponentRef<NxMessageToastComponent> = overlayRef.attach(containerPortal);\n    containerRef.instance.config = config;\n\n    return containerRef.instance;\n  }\n\n  // Creates a new overlay and places it in the correct place.\n  private _createOverlay(config: NxMessageToastConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    const positionStrategy = this._overlay.position().global();\n\n    positionStrategy.bottom('0');\n    positionStrategy.centerHorizontally();\n    overlayConfig.positionStrategy = positionStrategy;\n\n    return this._overlay.create(overlayConfig);\n  }\n\n  /** Animates the old message toastout and the new one in. */\n  private _animateToast(toastRef: NxMessageToastRef, config: NxMessageToastConfig) {\n    // When the message toastis dismissed, clear the reference to it.\n    toastRef.afterDismissed().subscribe(() => {\n      // Clear the message toastref if it hasn't already been replaced by a newer message toast.\n      if (this._oldToastMessageRef === toastRef) {\n        this._oldToastMessageRef = null;\n      }\n\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n\n    if (this._oldToastMessageRef) {\n      // If a message toastis opened, dismiss it and enter the\n      // new message toastafter exit animation is complete.\n      this._oldToastMessageRef.afterDismissed().subscribe(() => {\n        toastRef.toastInstance.enter();\n    });\n      this._oldToastMessageRef.dismiss();\n\n    } else {\n      // If no message toastis in view, enter the message toast.\n      toastRef.toastInstance.enter();\n    }\n\n    // If a message toastduration is provided, set up dismiss based on after the message toastis opened.\n    if (config.duration && config.duration > 0) {\n      toastRef.afterOpened().subscribe(() => toastRef._dismissAfter(config.duration!));\n    }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n  }\n\n  private _createInjector(config: NxMessageToastConfig, data: NxMessageToastData, injector: Injector): PortalInjector {\n    const tokens = new WeakMap();\n    tokens.set(NxMessageToastConfig, config);\n    tokens.set(NxMessageToastData, data);\n\n    return new PortalInjector(injector, tokens);\n  }\n\n  /**\n   * Dismisses the currently visible message toast.\n   */\n  dismiss(): void {\n    if (this._oldToastMessageRef) {\n      this._oldToastMessageRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._toastRefAtThisLevel) {\n      this._toastRefAtThisLevel.dismiss();\n    }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'nx-page-search',\n  templateUrl: 'page-search.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ 'page-search.component.scss' ],\n  host: {\n    '[attr.role]': '\"search\"'\n  }\n})\nexport class NxPageSearchComponent {\n  /** An event emitted when the user clicks the search button. */\n  @Output('nxButtonClick') buttonClick = new EventEmitter();\n\n  private _buttonLabel: string = null;\n\n  /** Sets the text label of the button. */\n  @Input('nxButtonLabel')\n  set buttonLabel(value: string) {\n    if (this._buttonLabel !== value) {\n      this._buttonLabel = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLabel(): string {\n    return this._buttonLabel;\n  }\n\n  private _hideSearchButton = false;\n\n  /** Whether the search button should be hidden. */\n  @Input('nxHideSearchButton')\n  set hideSearchButton(value: boolean) {\n    this._hideSearchButton = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get hideSearchButton(): boolean {\n    return this._hideSearchButton;\n  }\n\n  private _buttonLayout = '12,12,12,2';\n\n  /** Layout of the search button inside of a NxGrid. Default: 12,12,12,2. */\n  @Input('nxButtonLayout')\n  set buttonLayout(value: string) {\n    if (this._buttonLayout !== value) {\n      this._buttonLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get buttonLayout(): string {\n    return this._buttonLayout;\n  }\n\n  private _contentLayout: string = null;\n\n  /** Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden). */\n  @Input('nxContentLayout')\n  set contentLayout(value: string) {\n    if (this._contentLayout !== value) {\n      this._contentLayout = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get contentLayout(): string {\n    if (this._contentLayout) {\n      return this._contentLayout;\n    }\n    return !this.hideSearchButton ? '12,12,12,10' : '12';\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** @docs-private */\n  onButtonClick() {\n    this.buttonClick.emit();\n  }\n}\n","import { NxGridModule } from '@allianz/ngx-ndbx/grid';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NxAutocompleteModule} from '@allianz/ngx-ndbx/autocomplete';\nimport {NxFormfieldModule} from '@allianz/ngx-ndbx/formfield';\nimport {NxPageSearchComponent} from './page-search.component';\nimport {NxButtonModule} from '@allianz/ngx-ndbx/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxAutocompleteModule,\n    NxFormfieldModule,\n    NxButtonModule,\n    NxGridModule\n  ],\n  declarations: [\n    NxPageSearchComponent\n  ],\n  exports: [\n    NxPageSearchComponent\n  ]\n})\nexport class NxPageSearchModule {\n\n}\n","import { NxIconComponent } from '@allianz/ngx-ndbx/icon';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-rating',\n  templateUrl: './rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./rating.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NxRatingComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '[class.nx-rating--negative]': 'negative',\n    '[class.nx-rating--disabled]': 'disabled',\n  }\n})\nexport class NxRatingComponent implements ControlValueAccessor {\n\n  private _value: number = 0;\n  /** Sets the selected rating 1 - 5. */\n  @Input('nxValue')\n  set value(newValue: number) {\n    this._value = coerceNumberProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  private _disabled: boolean = false;\n  /** Whether the rating component should be disabled. */\n  @Input('nxDisabled')\n  set disabled( newValue: boolean) {\n    if (this._disabled === newValue) {\n      return;\n    }\n    this._disabled = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _negative: boolean = false;\n  /** Whether the negative colors be used. */\n  @Input('nxNegative')\n  set negative(newValue: boolean) {\n    if (this._negative === newValue) {\n      return;\n    }\n    this._negative = coerceBooleanProperty(newValue);\n    this._changeDetectorRef.markForCheck();\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  private _startLabel: string = null;\n  /** Sets the label painted at the start of the rating component. */\n  @Input('nxStartLabel')\n  set startLabel(newValue: string) {\n    this._startLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get startLabel(): string {\n    return this._startLabel;\n  }\n\n  private _endLabel: string = null;\n  /** Sets the label painted at the end of the rating component. */\n  @Input('nxEndLabel')\n  set endLabel(newValue: string) {\n    this._endLabel = newValue;\n    this._changeDetectorRef.markForCheck();\n  }\n  get endLabel(): string {\n    return this._endLabel;\n  }\n\n  private _ariaLabel: string[] = ['1/5', '2/5', '3/5', '4/5', '5/5'];\n  @Input('nxAriaLabel')\n  /** Sets an array of custom aria-describedby attributes for each of the stars in the component. */\n  set ariaLabel(newAriaLabels: string[]) {\n    this._ariaLabel = newAriaLabels;\n    this._changeDetectorRef.markForCheck();\n  }\n  get ariaLabel(): string[] {\n    return this._ariaLabel;\n  }\n  /** An event is dispatched each time when the rating changes. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** @docs-private */\n  @ViewChildren(NxIconComponent, {read: ElementRef}) icons: QueryList<ElementRef>;\n  private onTouchedCallback = () => {};\n  private onChangeCallback = (option: any) => {};\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /** Whether the given rating is selected. */\n  isSelected(index: number) {\n    return index <= this.value;\n  }\n\n  /** Allows to set the rating. */\n  setSelection(value: number) {\n    if (!this.disabled) {\n      this.value = value;\n      this.valueChange.emit(value);\n      this.onTouchedCallback();\n      this.onChangeCallback(this.value);\n    }\n  }\n\n  /** @docs-private */\n  handleKeyUp(event: KeyboardEvent, rating: number) {\n    const keyCode = event.keyCode;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (keyCode === ENTER) {\n      this.setSelection(rating);\n    }\n\n    if (keyCode === RIGHT_ARROW) {\n      this.value = Math.min(this.value + 1, 5);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n\n    if (keyCode === LEFT_ARROW) {\n      this.value = Math.max(this.value - 1, 1);\n      const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n      elementRef.nativeElement.focus();\n    }\n  }\n\n  writeValue(value: number): void {\n    this.value = value;\n  }\n\n  registerOnChange(callback: any): void {\n    this.onChangeCallback = callback;\n  }\n\n  registerOnTouched(callback: any): void {\n    this.onTouchedCallback = callback;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /** @docs-private */\n  getAriaLabel(rating) {\n    return this.ariaLabel[rating - 1];\n  }\n\n  /** @docs-private */\n  getIconName(rating: number) {\n    return 'star' + ((!this.isSelected(rating)) ? '-o' : '');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxRatingComponent} from './rating.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NxIconModule\n  ],\n  declarations: [\n    NxRatingComponent\n  ],\n  exports: [\n    NxRatingComponent\n  ]\n})\nexport class NxRatingModule {\n\n}\n","import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NxNumberStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** The aria label for the decrement '-' button */\n  decrementAriaLabel: string = 'Decrement';\n  /** The aria label for the increment '+' button */\n  incrementAriaLabel: string = 'Increment';\n}\n","import { getFontShorthand } from '@allianz/ngx-ndbx/utils';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer2,\n} from '@angular/core';\n\n/** @docs-private */\n@Directive({\n  selector: 'input[nxAutoResize]'\n})\nexport class NxAutoResizeDirective implements AfterViewInit, OnDestroy {\n\n  @HostBinding('style.width.px') width: number;\n\n  private _resize: boolean = true;\n  @Input('nxAutoResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    if (this._resize) {\n      this._addEventListener();\n      this.updateInputWidth();\n    } else {\n      this._removeEventListener();\n    }\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  constructor(private _element: ElementRef,\n              private _renderer: Renderer2,\n              private _cdr: ChangeDetectorRef) {\n    this.updateInputWidth = this.updateInputWidth.bind(this);\n  }\n\n  ngAfterViewInit() {\n    if (this.resize) {\n      this._addEventListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeEventListener();\n  }\n\n  updateInputWidth() {\n    const measureCanvas = this._renderer.createElement('canvas');\n\n    const ctx = measureCanvas.getContext('2d');\n    const styles = window.getComputedStyle(this._element.nativeElement);\n\n    ctx.font = getFontShorthand(styles);\n\n    const metrics = ctx.measureText(this._element.nativeElement.value);\n\n    const padding = this.sumStyles(styles.paddingLeft, styles.paddingRight);\n    const border = this.sumStyles(styles.borderLeftWidth, styles.borderRightWidth);\n    // the pixels are needed, because despite the correct calculation the last pixels of a number are always cut\n    const newWidth = metrics.width + padding + border + 16;\n\n    // Limit to own given minimal width\n    const parsed = parseFloat(styles.minWidth);\n    this.width = Math.max(Number.isNaN(parsed) ? 0 : parsed, newWidth);\n\n    // needed when the outer component is onPush\n    this._cdr.markForCheck();\n  }\n\n  _addEventListener() {\n    this._element.nativeElement.addEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.addEventListener('change', this.updateInputWidth, true);\n  }\n\n  _removeEventListener() {\n    this._element.nativeElement.removeEventListener('input', this.updateInputWidth, true);\n    this._element.nativeElement.removeEventListener('change', this.updateInputWidth, true);\n  }\n\n  sumStyles(left, right) {\n    left = parseInt(left, 10);\n    right = parseInt(right, 10);\n    left = Number.isNaN(left) ? 0 : left;\n    right = Number.isNaN(right) ? 0 : right;\n    return left + right;\n  }\n}\n","import { Subscription } from 'rxjs';\nimport { NxNumberStepperIntl } from './number-stepper-intl';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mapClassNames, pad } from '@allianz/ngx-ndbx/utils';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\nimport { MappedStyles } from '@allianz/ngx-ndbx/core';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { Decimal } from 'decimal.js';\n\nconst SIZE_MAPPING = {\n  big: 'nx-stepper--big',\n  normal: ''\n};\nconst DEFAULT_CLASSES = ['nx-stepper'];\nconst INPUT_CLASSES = ['nx-stepper__input'];\n\nconst ALLOWED_CHARACTERS = new RegExp(/^-?[0-9]\\d*(\\.\\d+)?$/g);\nconst CUSTOM_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\nconst CUSTOM_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NxNumberStepperComponent),\n  multi: true\n};\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'nx-number-stepper',\n  templateUrl: 'number-stepper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['number-stepper.component.scss'],\n  inputs: ['classNames: nxSize'],\n  host: {\n    '[class.is-negative]': 'negative'\n  },\n  providers: [CUSTOM_VALUE_ACCESSOR, CUSTOM_VALIDATOR]\n})\nexport class NxNumberStepperComponent extends MappedStyles\n  implements OnInit, AfterViewInit, ControlValueAccessor, Validator, OnDestroy {\n  private _step: number = 1;\n  private _min: number = 0;\n  private _max: number = 100;\n  private _value: number = 0;\n  private _label = null;\n  private _resize: boolean = false;\n  private _intlSubscription: Subscription;\n  private _negative: boolean = false;\n  private _leadingZero: boolean = true;\n\n  /** @docs-private */\n  numberInputValue: string;\n\n  /**\n   * Defines the size of the number stepper.\n   *\n   * Values: big | normal. Default: normal\n   */\n  classNames: string;\n\n  /** @docs-private */\n  public inputClassNames: string = mapClassNames(\n    'regular',\n    INPUT_CLASSES\n  );\n\n  /** @docs-private */\n  public inputId = `nx-number-stepper-${nextUniqueId++}`;\n\n  /** @docs-private */\n  public inputWidth;\n\n  /** @docs-private */\n  public ariaDescribedBy = null;\n\n  /** @docs-private */\n  @ViewChild('customLabel', { static: false }) ngContentWrapper: ElementRef;\n\n  /** @docs-private */\n  @ViewChild(NxAutoResizeDirective, { static: true }) autoResize: NxAutoResizeDirective;\n\n  /** An event emitted on value change. */\n  @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n  /** Whether the input should be resized. Default: false */\n  @Input('nxResize')\n  set resize(value: boolean) {\n    this._resize = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get resize(): boolean {\n    return this._resize;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  /** Defines the the label shown above the stepper input. */\n  @Input('nxLabel')\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Sets the step size. Default: 1 */\n  @Input('nxStep')\n  set step(value: number) {\n    // only internal changes no need to call markForCheck\n    this._step = Number(value);\n  }\n\n  get step(): number {\n    return this._step;\n  }\n\n  /** Sets the minimum accepted number. Default: 0 */\n  @Input('nxMin')\n  set min(value: number) {\n    this._min = Number(value);\n  }\n\n  get min(): number {\n    return this._min;\n  }\n\n  /** Sets the maximum accepted number. Default: 100 */\n  @Input('nxMax')\n  set max(value: number) {\n    this._max = Number(value);\n  }\n\n  get max(): number {\n    return this._max;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  /** Sets the value of the number-stepper. */\n  @Input('nxValue')\n  set value(value: number | null) {\n    this._value = value;\n    if (this._value !== null) {\n      this.setInputValue(this._value);\n    } else {\n      this.setInputValue(0);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  set negative(value: boolean) {\n    if (this._negative !== value) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  /** Whether the number stepper value should have a leading zero.\n   *\n   * Default value is true.\n   */\n  @Input()\n  set leadingZero(value: boolean) {\n    if (this._leadingZero !== value) {\n      this._leadingZero = coerceBooleanProperty(value);\n      this.setInputValue(this.value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get leadingZero(): boolean {\n    return this._leadingZero;\n  }\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    _renderer: Renderer2,\n    _elementRef: ElementRef,\n    public _intl: NxNumberStepperIntl\n  ) {\n    super(SIZE_MAPPING, DEFAULT_CLASSES, _elementRef, _renderer);\n    this._intlSubscription = this._intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    this.setInputValue(this._value);\n  }\n\n  ngAfterViewInit() {\n    if (this.ngContentWrapper) {\n      this.ariaDescribedBy = this.ngContentWrapper.nativeElement.children.length > 0 ? `label-for-${this.inputId}` : null;\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  setInputValue(value) {\n    if (this.leadingZero) {\n      this.numberInputValue = pad(value.toString(), 2);\n    } else {\n      this.numberInputValue = value.toString();\n    }\n    // use timeout to get the current value of numberInputValue\n    setTimeout(() => {\n      this.triggerResize();\n    });\n  }\n\n  /* ControlValueAccessor Implementations */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  private onChangeCallback = (_: any) => { };\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n  /** @docs-private */\n  onTouchedCallback = () => { };\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  /** @docs-private */\n  onInputChange(event) {\n    if (!this.validateUserInput(event.target.value)) {\n      this._value = null;\n    } else {\n      this._value = Number(event.target.value);\n    }\n\n    // setInputValue() should be called so that numberInputValue is updated with the user input\n    if (this._value !== null) {\n      this.setInputValue(this._value);\n    }\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  validateUserInput(input: string) {\n    return !!input.match(ALLOWED_CHARACTERS);\n  }\n\n  /** @docs-private */\n  incrementOnClick() {\n    this._increment();\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  incrementOnKey() {\n    this._increment();\n  }\n\n  /** @docs-private */\n  _increment() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextGreaterValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  triggerResize() {\n    if (this.resize) {\n      this.autoResize.updateInputWidth();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** @docs-private */\n  decrementOnClick() {\n    this._decrement();\n    this.onTouchedCallback();\n  }\n\n  /** @docs-private */\n  decrementOnKey() {\n    this._decrement();\n  }\n\n  /** @docs-private */\n  _decrement() {\n    let newValue;\n    if (this.isBetweenLimits(this._value)) {\n      newValue = this.getNextLowerValue(this._value);\n    } else {\n      newValue = this.enforceLimits(this._value);\n    }\n    this.value = newValue;\n    this.valueChange.emit(this._value);\n    this.onChangeCallback(this._value);\n  }\n\n  /** @docs-private */\n  enforceLimits(value) {\n    if (value > this._max) {\n      return this._max;\n    } else if (value < this._min) {\n      return this._min;\n    }\n    return value;\n  }\n\n  /** @docs-private */\n  getNextLowerValue(start) {\n    // if there is an invalid input start is null\n    if (!start) {\n      start = 0;\n    }\n\n    let next;\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).minus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_DOWN).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  getNextGreaterValue(start) {\n    let next;\n    if (!start) {\n      start = 0;\n    }\n    if (this.isValidStep(start)) {\n      next = (new Decimal(start).plus(new Decimal(this._step))).toNumber();\n    } else {\n      next = new Decimal(start).toNearest(this._step, Decimal.ROUND_UP).toNumber();\n    }\n    return this.enforceLimits(next);\n  }\n\n  /** @docs-private */\n  isBetweenLimits(value) {\n    return value <= this._max && value >= this._min;\n  }\n\n  /** @docs-private */\n  isMinimum() {\n    return this._value === this._min;\n  }\n\n  /** @docs-private */\n  isMaximum() {\n    return this._value === this._max;\n  }\n\n  /** @docs-private */\n  isValidStep(value) {\n    if (value === null) {\n      value = new Decimal(0);\n    }\n    const min = new Decimal(this._min);\n    const valueDec = new Decimal(value);\n    const checkValue = (min.minus(valueDec)).mod(new Decimal(this._step)).toNumber();\n\n    if (\n      this.isBetweenLimits(value) && ((this.isMinimum() || this.isMaximum()) ||\n      checkValue === 0)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  /** @docs-private */\n  userInputToNumber(value): number {\n    const current = value === '' ? 0 : value;\n    return parseInt(current, 10);\n  }\n\n  _validateFn() {\n    // the manual user input must match min + n * step, e.g. minimum 1 step 2: 1, 3, 5, 7 etc.\n    if (!this.isValidStep(this._value)) {\n      return { nxNumberStepperStepError: 'Value is not a valid step' };\n    } else if (this._value === null) {\n      return { nxNumberStepperFormatError: 'Not a valid number' };\n    }\n    return null;\n  }\n\n  /** @docs-private */\n  validate(c: FormControl) {\n    return this._validateFn();\n  }\n\n  get _buttonType(): string {\n    return 'secondary' + (this.negative ? ' negative' : '');\n  }\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-prefix',\n  host: {\n    'class': 'nx-stepper__prefix'\n  }\n})\nexport class NxNumberStepperPrefixDirective {\n}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-number-stepper-suffix',\n  host: {\n    'class': 'nx-stepper__suffix'\n  }\n})\nexport class NxNumberStepperSuffixDirective {\n}\n","import { NxNumberStepperIntl } from './number-stepper-intl';\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { CommonModule } from '@angular/common';\nimport { NxButtonModule } from '@allianz/ngx-ndbx/button';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxInputModule } from '@allianz/ngx-ndbx/input';\nimport { NgModule } from '@angular/core';\n\nimport { NxNumberStepperComponent } from './number-stepper.component';\nimport { FormsModule } from '@angular/forms';\nimport { NxNumberStepperPrefixDirective } from './number-stepper-prefix.directive';\nimport { NxNumberStepperSuffixDirective } from './number-stepper-suffix.directive';\n\n@NgModule({\n  imports: [\n    NxInputModule,\n    FormsModule,\n    NxIconModule,\n    NxButtonModule,\n    CommonModule\n  ],\n  exports: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  declarations: [\n    NxNumberStepperComponent,\n    NxAutoResizeDirective,\n    NxNumberStepperPrefixDirective,\n    NxNumberStepperSuffixDirective\n  ],\n  providers: [NxNumberStepperIntl],\n})\nexport class NxNumberStepperModule { }\n","\nimport {InjectionToken, LOCALE_ID} from '@angular/core';\n\n/**\n * Interface for providing custom labels in a simple pagination.\n * With an implementation you can localize your pagination with the NX_PAGINATION_TEXTS injection token.\n */\nexport interface IPaginationTexts {\n  /** Label that should replace 'previous'. */\n  previous: string;\n\n  /** Label that should replace 'next'. */\n  next: string;\n\n  /** Label that should replace 'first'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  first?: string;\n\n  /** Label that should replace 'last'.\n   *\n   * Optional attribute needed only for the advanced pagination.\n   */\n  last?: string;\n\n  /** Label that should replace 'of'. */\n  ofLabel: string;\n\n  /** Label that should replace the aria label. */\n  ariaLabel: string;\n}\n\nexport const DefaultPaginationTexts =  {\n  previous: 'Previous',\n  next: 'Next',\n  first: 'First',\n  last: 'Last',\n  ofLabel: 'of',\n  ariaLabel: 'Please select your page'\n};\n\n/** InjectionToken for pagination that can be used to override default locale code. */\nexport const NX_PAGINATION_TEXTS = new InjectionToken<IPaginationTexts>('nx-pagination-texts');\n","import { Injectable } from '@angular/core';\nimport { Page } from './pagination.component';\n\n/** @docs-private */\n@Injectable()\nexport class NxPaginationUtils  {\n  private _pagesMobile = 3;\n  private _elipsisText: string = '...';\n  private _classExpanded: string = 'expanded-view';\n\n  getPages(currentPage: number, totalPages: number): Page[] {\n\n    let pages = [];\n    let start = [], middle = [], end = [];\n\n    // First array -> start\n    start = this.getStartArray(currentPage, totalPages);\n    // Second array -> middle\n    middle =  this.getMiddleArray(currentPage, totalPages);\n    // Third array -> end\n    end = this.getEndArray(currentPage, totalPages);\n\n    pages = [ ...start, ...middle, ...end ];\n\n    return pages;\n  }\n\n  getMiddleArray(currentPage: number, totalPages: number): Array<any> {\n    let pageNumber = currentPage < 6 ? 4 : currentPage - 1;\n    const middle = [];\n\n    while (\n      middle.length < 3 &&\n      pageNumber >= 2 &&\n      pageNumber <= totalPages - 3 &&\n      (pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1)\n    ) {\n      middle.push(this.createPaginationItem(pageNumber, pageNumber));\n      pageNumber++;\n    }\n    return middle;\n  }\n  getEndArray(currentPage: number, totalPages: number): Array<any> {\n    const end = [];\n    let currentItemToShow: number =\n      totalPages <= 3 ? totalPages + 1 :\n      totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2 ;\n    const showEllipsis = currentPage < totalPages - 4;\n\n    while (currentItemToShow <= totalPages) {\n      const endItem = end.length === 0 && showEllipsis ?\n        this.createPaginationItem(this._elipsisText, currentItemToShow, true) :\n        this.createPaginationItem(currentItemToShow , currentItemToShow, true);\n      end.push(endItem);\n      currentItemToShow++;\n    }\n\n    return end;\n  }\n  getStartArray(currentPage: number, totalPages: number): Array<any> {\n    let counterPages = 0;\n    const start = [];\n    const maxSizeArray = 3;\n\n    while (counterPages < maxSizeArray && counterPages < totalPages) {\n      const startItem = counterPages === 2 && currentPage > 5 ?\n        this.createPaginationItem(this._elipsisText, counterPages, true) :\n        this.createPaginationItem(counterPages + 1 , counterPages + 1, true);\n\n      start.push(startItem);\n      counterPages++;\n    }\n\n    return start;\n  }\n\n  getMobilePages(currentPage: number, totalPages: number): Array<any> {\n    // if we have less pages than the number we want to display take all\n    if (totalPages < this._pagesMobile) {\n      return Array.from(Array(totalPages).keys()).map(item => this.createPaginationItem(item + 1, item + 1));\n    }\n\n    switch (currentPage) {\n      // first page active\n      case 1:\n        return [1, 2, 3].map( item => this.createPaginationItem(item, item));\n      // last page active\n      case totalPages:\n        return [totalPages - 2, totalPages - 1, totalPages].map( item => this.createPaginationItem(item, item));\n      // any other page active\n      default:\n        return [currentPage - 1, currentPage, currentPage + 1].map( item => this.createPaginationItem(item, item));\n    }\n  }\n\n  private createPaginationItem(label: string | number, value: number, classExpanded?: boolean) {\n    return { label: label, value: value, class: classExpanded ? this._classExpanded : ''  };\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { DefaultPaginationTexts, IPaginationTexts, NX_PAGINATION_TEXTS } from './pagination-texts';\nimport { NxPaginationUtils } from './pagination-utils';\n\n/** @docs-private */\nexport interface Page {\n  label: string;\n  value: any;\n  class: string;\n}\n\n@Component({\n  selector: 'nx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './pagination.component.scss' ],\n})\n\nexport class NxPaginationComponent implements OnInit, AfterContentInit {\n  private _page: number;\n  private _count: number;\n  private _perPage: number;\n  private _type: string = 'simple';\n\n  /** @docs-private */\n  paginationTexts: IPaginationTexts;\n\n  /** @docs-private */\n  totalNumberPages: number = 0;\n\n  get page(): number { return this._page; }\n\n  /** Sets the current page. */\n  @Input('nxPage') // the current page\n  set page(value: number) {\n    this._page = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get count(): number { return this._count; }\n\n  /** Number of total items over all pages. */\n  @Input('nxCount') // how many total items there are in all pages\n  set count(value: number) {\n    this._count = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get perPage(): number { return this._perPage; }\n\n  /** Sets the number of items you want to show per page. */\n  @Input('nxPerPage') // how many items we want to show per page\n  set perPage(value: number) {\n    this._perPage = value;\n    this.totalNumberPages =  this.calculateTotalPages();\n    this._changeDetectorRef.markForCheck();\n  }\n  get type(): string { return this._type; }\n\n  /**\n   * Determines the type of pagination.\n   *\n   * Values: simple | advanced, default: simple.\n   */\n  @Input('nxType')\n  set type(value: string) { // type advanced or simple\n    this._type = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** An event emitted when the previous page button is clicked. */\n  @Output() nxGoPrev = new EventEmitter<void>();\n\n  /** An event emitted when the next page button is clicked */\n  @Output() nxGoNext = new EventEmitter<void>();\n\n  /**\n   * An event emitted when a page number is clicked.\n   * Provides the number of the page as parameter.\n   */\n  @Output() nxGoPage = new EventEmitter<number>();\n\n  constructor(\n      @Optional() @Inject(NX_PAGINATION_TEXTS) paginationTexts: IPaginationTexts,\n      private paginationUtilsService: NxPaginationUtils,\n      private _changeDetectorRef: ChangeDetectorRef) {\n    this.paginationTexts = paginationTexts || DefaultPaginationTexts;\n   }\n\n  ngOnInit() {\n    this.totalNumberPages =  this.calculateTotalPages();\n  }\n\n  ngAfterContentInit() {\n    if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {\n      console.warn('Please define aria labels for the last and first arrows.');\n    }\n  }\n\n  /** Returns the number of the first page. */\n  getMin(): number {\n    return this.totalNumberPages > 0 ? 1 : 0;\n  }\n\n  /** Returns the number of the last page. */\n  getMax(): number {\n    let max = this._perPage * this._page;\n    if (max > this._count) {\n      max = this._count;\n    }\n    return max;\n  }\n\n  /** Returns the total number of pages */\n  calculateTotalPages(): number {\n    return Math.ceil(this._count / this._perPage) || 0;\n  }\n\n  /** Directs to the page with number n. */\n  onPage(n: number): void {\n    this.nxGoPage.emit(n);\n  }\n\n  /** Directs to the previous page. */\n  onPrev(): void {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.nxGoPrev.emit();\n    }\n  }\n\n  /** Directs to the next page. */\n  onNext(): void {\n    if (!this._isPaginationNextDisabled()) {\n      this.nxGoNext.emit();\n    }\n  }\n\n  /** Directs to the first page. */\n  onFirst() {\n    if (!this._isPaginationPreviousDisabled()) {\n      this.onPage(1);\n    }\n  }\n\n  /** Directs to the last page. */\n  onLast() {\n    if (!this._isPaginationNextDisabled()) {\n      this.onPage(this.totalNumberPages);\n    }\n  }\n\n  /** Returns if the current page is the last page. */\n  lastPage(): boolean {\n    return this._perPage * this._page >= this._count;\n  }\n\n  /** @docs-private */\n  getPages(): Page[] {\n    return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);\n  }\n\n  /** @docs-private */\n  getMobilePages(): Page[] {\n    return this.paginationUtilsService.getMobilePages(this._page, this.totalNumberPages);\n  }\n\n  /** @docs-private */\n  getPaginationItemClasses(page: Page): Object {\n    const classes = {\n      'is-ellipsis': page.label === '...',\n      'nx-pagination__item--expanded-view': page.class === 'expanded-view'\n    };\n    return classes;\n  }\n\n  /** @docs-private */\n  getPaginationNumberClasses(page: Page): Object {\n    const classes = {\n      'is-active': page.value === this.page,\n      'nx-pagination__ellipsis': page.label === '...',\n      'nx-pagination__link': page.label !== '...'\n    };\n    return classes;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0, else false. */\n  isPaginationVisible(): boolean {\n    return this.count > 0;\n  }\n\n  /** Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false. */\n  isPaginationCompactVisible(): boolean {\n    return this.type.includes('simple') && this.count > 0;\n  }\n\n  /** @docs-private */\n  isPaginationContainerVisible(): boolean {\n    return this.type.includes('advanced');\n  }\n\n  _isPaginationPreviousDisabled(): boolean {\n    return this.page === this.getMin();\n  }\n\n  _isPaginationNextDisabled(): boolean {\n    return this.page === this.totalNumberPages;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxPaginationComponent } from './pagination.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxPaginationUtils } from './pagination-utils';\n\n@NgModule({\n  imports: [\n    CommonModule, NxIconModule\n  ],\n  declarations: [\n    NxPaginationComponent\n  ],\n  exports: [\n    NxPaginationComponent\n  ],\n  providers: [\n    NxPaginationUtils\n  ]\n})\nexport class NxPaginationModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\n\nexport class TableDataSource extends DataSource<any> {\nconstructor(private _datachange: BehaviorSubject<any[]>) {\nsuper();\n}\n/** @docs-private Connect function called by the table to retrieve one stream containing the data to render. */\nconnect(): Observable<Object[]> {\nreturn this._datachange;\n}\n/** @docs-private */\ndisconnect() { }\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnInit, Output, ChangeDetectorRef } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NxDisplayedColumns } from './displayedColumns';\nimport { TableDataSource } from './tabledata-source';\n\n@Component({\n  selector: 'nx-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [ './dynamic-table.component.scss' ]\n})\nexport class NxDynamicTableComponent implements OnInit {\n\n  private _dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n  private _dataSource: TableDataSource | null;\n  private _data: any[];\n  private _displayedColumns: NxDisplayedColumns[];\n  private _columnKeys: string[];\n\n  /** Sets the data that it will show in the table. */\n  @Input('nxData')\n  set data(value: any[]) {\n    this._data = value\n      .filter(element => element);\n    // If user dont pass displayedColumns the table will show all data and the name of columns will be the key of data\n    if (!this._displayedColumns) {\n      const keys = [], cArray = [];\n      // For catch keys of data Objects and assing title, key and type string by default to displayedColumns\n      this._data\n        .forEach(element => {\n          for (const key in element) {\n            if (keys.indexOf(key) === -1) {\n              keys.push(key);\n              cArray.push({ title: key, key: key, type: 'string' });\n            }\n          }\n        });\n      this._columnKeys = keys;\n      this._displayedColumns = cArray;\n      // need to call markForCheck as the setter changes displayedColumns here\n      // sidenote: isn't needed for the data itself as it gets passed to the cdk-table\n      // by the datasource observable\n      this._changeDetectorRef.markForCheck();\n    }\n    this._dataChange.next(this._data);\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /** Sets the name order and type of columns. */\n  @Input('nxDisplayedColumns')\n  set displayedColumns(value: NxDisplayedColumns[]) {\n    this._displayedColumns = value;\n    this._columnKeys = value.map(column => column.key);\n    this._changeDetectorRef.markForCheck();\n  }\n  get displayedColumns(): NxDisplayedColumns[] {\n    return this._displayedColumns;\n  }\n\n  /** An event is dispatched when a row is clicked. */\n  @Output() nxRowClick = new EventEmitter();\n\n  /** @docs-private */\n  get dataSource(): TableDataSource {\n    return this._dataSource;\n  }\n\n  /** @docs-private */\n  get columnKeys(): string[] {\n    return this._columnKeys;\n  }\n\n  constructor(private el: ElementRef, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (!this._data) {\n      this._data = [];\n      this._dataChange.next(this._data);\n    }\n    this._dataSource = new TableDataSource(this._dataChange);\n  }\n\n  /** @docs-private */\n  handleRowClick(row: Object): void {\n    this.nxRowClick.emit(row);\n  }\n\n  /** @docs-private */\n  isNumeric(element: NxDisplayedColumns): boolean {\n    if (element.type === 'numeric') {\n      return true;\n    }\n    return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxDynamicTableComponent } from './dynamic-table.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n@NgModule({\n  declarations: [ NxDynamicTableComponent ],\n  exports: [ NxDynamicTableComponent ],\n  imports: [ CommonModule, CdkTableModule, ScrollingModule ]\n})\nexport class NxDynamicTableModule { }\n","import { Directive, Input } from '@angular/core';\nimport { CdkAccordion } from '@angular/cdk/accordion';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AccordionStyle } from './expansion-panel';\n\nconst DEFAULT_TYPE: AccordionStyle = 'regular';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-accordion',\n  host: {\n    '[class.nx-accordion]': 'true',\n    'role': 'presentation'\n  }\n})\nexport class NxAccordionDirective extends CdkAccordion {\n\n  private _style: AccordionStyle = 'regular';\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n  }\n  get style(): AccordionStyle {\n    return this._style;\n  }\n\n  private _negative: boolean = null;\n\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n}\n","import { AnimationTriggerMetadata, trigger, state, style, transition, animate } from '@angular/animations';\n\nexport const nxAccordionAnimations: {\n  readonly bodyExpansion: AnimationTriggerMetadata;\n  readonly indicatorRotate: AnimationTriggerMetadata;\n} = {\n  bodyExpansion: trigger('bodyExpansion', [\n    state('closed', style({height: '0px', visibility: 'hidden'})),\n    state('open', style({height: '*', visibility: 'visible'})),\n    transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)'))\n  ]),\n  indicatorRotate: trigger('indicatorRotate', [\n    state('closed', style({transform: 'rotate(0deg)'})),\n    state('open', style({transform: 'rotate(180deg)'})),\n    transition('open <=> closed', animate('.3s ease')),\n  ])\n};\n","\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[nxExpansionPanelBody]' })\nexport class NxExpansionPanelBodyDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n","import { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n  ViewContainerRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\n\nimport { NxAccordionDirective } from './accordion';\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nlet nextId = 0;\n\n/** The styling of the accordion. */\nexport type AccordionStyle = 'regular' | 'light';\nconst DEFAULT_TYPE = 'regular';\n\n@Component({\n  selector: 'nx-expansion-panel',\n  exportAs: 'NxExpansionPanelComponent',\n  templateUrl: 'expansion-panel.html',\n  styleUrls: ['expansion-panel.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.bodyExpansion],\n  host: {\n    '[class.nx-expanded]': 'expanded',\n    '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n    '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n    '[class.nx-expansion-panel--negative]': 'negative',\n    '[class.is-disabled]': 'disabled',\n  },\n  providers: [\n    // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n    // to the same accordion.\n    { provide: NxAccordionDirective, useValue: undefined },\n  ],\n})\nexport class NxExpansionPanelComponent extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n  /** Whether the negative set of styles should be used. */\n  @Input()\n  set negative(value: boolean) {\n    this._negative = coerceBooleanProperty(value);\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n  private _negative: boolean = null;\n  _accordionStyle: AccordionStyle = DEFAULT_TYPE;\n\n  /**\n   * Value for the styling that should be chosen.\n   * Default value: 'regular'.\n   */\n  @Input('nxStyle')\n  set style(value: AccordionStyle) {\n    value = value ? value : DEFAULT_TYPE;\n\n    const [newValue] = value.match(/regular|light/) || [DEFAULT_TYPE];\n    this._style = newValue as AccordionStyle;\n    this._accordionStyle = newValue as AccordionStyle;\n  }\n\n  get style(): AccordionStyle {\n    return this._style;\n  }\n  private _style: AccordionStyle = null;\n\n  /** @docs-private */\n  @ContentChild(NxExpansionPanelBodyDirective, {static: false}) lazyContent;\n\n  private _portal: TemplatePortal;\n\n  /** @docs-private */\n  get portal() {\n    return this._portal;\n  }\n\n  /** @docs-private */\n  accordion: NxAccordionDirective;\n  _headerId = `nx-expansion-panel-header-${nextId++}`;\n\n  /** Stream that emits for changes in `@Input` properties. */\n  readonly _inputChanges = new Subject<SimpleChanges>();\n\n  constructor(@Optional() @SkipSelf() accordion: NxAccordionDirective,\n    _changeDetectorRef: ChangeDetectorRef,\n    _expansionDispatcher: UniqueSelectionDispatcher,\n    private _viewContainerRef: ViewContainerRef\n  ) {\n    super(accordion, _changeDetectorRef, _expansionDispatcher);\n    this.accordion = accordion;\n  }\n\n  ngAfterContentInit() {\n    if (this.lazyContent) {\n      // Render the content as soon as the panel becomes open.\n      this.opened.pipe(\n        startWith(null),\n        filter(() => this.expanded && !this._portal),\n        take(1)\n      ).subscribe(() => {\n        this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n      });\n    }\n\n    // Inherit appearance given by the accordion (if any).\n    if (Boolean(this.accordion)) {\n\n      if (this.style === null && this.accordion.style !== null) {\n        this.style = this.accordion.style;\n      }\n\n      if (this.negative === null && this.accordion.negative !== null) {\n        this.negative = this.accordion.negative;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._inputChanges.complete();\n  }\n\n  /** @docs-private */\n  getOpenState() {\n    return this.expanded ? 'open' : 'closed';\n  }\n}\n","import { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Host, OnDestroy } from '@angular/core';\nimport { merge, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelComponent } from './expansion-panel';\n\n@Component({\n  selector: 'nx-expansion-panel-header',\n  templateUrl: 'expansion-panel-header.html',\n  styleUrls: ['expansion-panel-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxAccordionAnimations.indicatorRotate],\n  host: {\n    '[class.nx-expanded]': 'isExpanded()',\n    'class': 'nx-expansion-panel__header',\n    'role': 'button',\n    '[attr.id]': 'panel._headerId',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': 'isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.is-disabled]': 'panel.disabled',\n    '(keydown)': 'keydown($event)',\n    '(click)': 'toggle()'\n  }\n})\nexport class NxExpansionPanelHeaderComponent implements OnDestroy {\n  private _parentChangeSubscription = Subscription.EMPTY;\n\n  constructor(\n    /** @docs-private */ @Host() public panel: NxExpansionPanelComponent,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled)))\n    )\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n  }\n\n  ngOnDestroy() {\n    this._parentChangeSubscription.unsubscribe();\n  }\n\n  /** @docs-private */\n  isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n\n  /** @docs-private */\n  getOpenState(): string {\n    return this.panel.getOpenState();\n  }\n\n  _getPanelId(): string {\n    return this.panel.id;\n  }\n\n  /**\n   * Toggle the expansion panel.\n   */\n  toggle() {\n    this.panel.toggle();\n  }\n\n  /** @docs-private */\n  keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        break;\n      default:\n        return;\n    }\n  }\n}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-description',\n  host : {\n    class: 'nx-expansion-panel__header-description'\n  }\n})\nexport class NxExpansionPanelDescriptionDirective {}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'nx-expansion-panel-title',\n  host : {\n    class: 'nx-expansion-panel__header-title'\n  }\n})\nexport class NxExpansionPanelTitleDirective {}\n","import { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionDirective } from './accordion';\nimport { NxExpansionPanelComponent } from './expansion-panel';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport {\n  NxExpansionPanelDescriptionDirective,\n  NxExpansionPanelHeaderComponent,\n  NxExpansionPanelTitleDirective,\n} from './expansion-panel-header';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxIconModule\n  ],\n  exports: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  declarations: [\n    NxAccordionDirective,\n    NxExpansionPanelComponent,\n    NxExpansionPanelHeaderComponent,\n    NxExpansionPanelDescriptionDirective,\n    NxExpansionPanelTitleDirective,\n    NxExpansionPanelBodyDirective\n  ],\n  providers: [],\n})\nexport class NxAccordionModule { }\n","/** @docs-private */\nexport abstract class NxTabGroupBase {\n\n}\n","import { Component, EmbeddedViewRef, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NxTabGroupBase } from './tab-group-base';\nimport { NxTabGroupComponent } from './tab-group';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header-outlet',\n  template: '<ng-container #outlet></ng-container>'\n})\nexport class NxTabHeaderOutletComponent implements OnInit, OnDestroy {\n  @ViewChild('outlet', { static: true, read: ViewContainerRef }) _outlet: ViewContainerRef;\n\n  @Input() content: EmbeddedViewRef<any>;\n\n  constructor(private _tabGroup: NxTabGroupBase) { }\n\n  private _appearanceSubscription: Subscription;\n\n  ngOnInit() {\n    this._appearanceSubscription = (this._tabGroup as NxTabGroupComponent)._appearanceChange.subscribe(() => {\n      this.detach();\n    });\n    this.attach();\n  }\n\n  attach() {\n    this._outlet.insert(this.content);\n  }\n\n  detach() {\n    const index = this._outlet.indexOf(this.content);\n    if (index !== -1) {\n      this._outlet.detach(index);\n    }\n  }\n\n  ngOnDestroy() {\n    this._appearanceSubscription.unsubscribe();\n  }\n}\n","import { Directive} from '@angular/core';\nimport { CdkPortal } from '@angular/cdk/portal';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabel]' })\nexport class NxTabLabelDirective extends CdkPortal {}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[nxTabContent]' })\nexport class NxTabContentDirective {\n  constructor(/** @docs-private */public template: TemplateRef<any>) { }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  Optional,\n  Inject,\n  Host,\n  ContentChild,\n  EmbeddedViewRef,\n  AfterContentInit\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabContentDirective } from './tab-content';\n\n@Component({\n  selector: 'nx-tab',\n  exportAs: 'nxTab',\n  templateUrl: 'tab.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxTabComponent implements OnChanges, OnDestroy, AfterContentInit {\n  private _label: string;\n  private _disabled: boolean = false;\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * Content for the tab label given by `<ng-template nxTabLabel>`.\n   * @docs-private\n   * */\n  @ContentChild(NxTabLabelDirective, { read: TemplateRef, static: true })\n  get templateLabel(): TemplateRef<any> {return this._templateLabel; }\n  set templateLabel(value: TemplateRef<any>) {\n    // Only update the templateLabel via query if there is actually\n    // a nxTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n\n  private _templateLabel: TemplateRef<any>;\n\n  /** Template inside the NxTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, { static: true }) _implicitContent: TemplateRef<any>;\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(NxTabContentDirective, { read: TemplateRef, static: true })\n  _explicitContent: TemplateRef<any>;\n\n  /** Sets the label of the tab shown in the tablist. */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n    }\n  }\n\n  /** Sets the tab to disabled. */\n  @Input()\n  get disabled(): boolean {\n    return (this._tabGroup && (this._tabGroup as NxTabGroupComponent).disabled) ?\n    (this._tabGroup as NxTabGroupComponent).disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (this._disabled !== value) {\n      this._disabled = value;\n    }\n  }\n\n  private _headerViewRef: EmbeddedViewRef<any>;\n  private _contentViewRef: EmbeddedViewRef<any>;\n\n  /** @docs-private */\n  get headerViewRef() {\n    return this._headerViewRef;\n  }\n\n  /** @docs-private */\n  get contentViewRef() {\n    // for lazy loading we only create the viewref when it is asked for\n    if (!this._contentViewRef) {\n      const contentTemplate = this._explicitContent || this._implicitContent;\n      this._contentViewRef = contentTemplate.createEmbeddedView({});\n    }\n    return this._contentViewRef;\n  }\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    @Inject(NxTabGroupBase) @Optional() @Host() private _tabGroup: NxTabGroupBase) {\n    if (!this._tabGroup) {\n      throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.templateLabel) {\n      this._headerViewRef = this.templateLabel.createEmbeddedView({});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n    this._contentViewRef.destroy();\n    if (this._headerViewRef) { this._headerViewRef.destroy(); }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NxTabComponent } from './tab';\nimport { NxTabGroupBase } from './tab-group-base';\nimport { NxTabGroupComponent } from './tab-group';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-body',\n  templateUrl: 'tab-body.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./tab-body.scss']\n})\nexport class NxTabBodyComponent implements OnInit, OnDestroy {\n  private _appearanceSubscription: Subscription;\n\n  @ViewChild('outlet', { static: true, read: ViewContainerRef }) _outlet: ViewContainerRef;\n\n  @Input() tab: NxTabComponent;\n\n  private _active: boolean = false;\n\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active) {\n      this.attach();\n    } else {\n      this.detach();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  constructor(\n    private _tabGroup: NxTabGroupBase) { }\n\n  ngOnInit() {\n    this._appearanceSubscription = (this._tabGroup as NxTabGroupComponent)._appearanceChange.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  ngOnDestroy() {\n    this._appearanceSubscription.unsubscribe();\n  }\n\n  attach() {\n    this._outlet.insert(this.tab.contentViewRef);\n  }\n\n  detach() {\n    const index = this._outlet.indexOf(this.tab.contentViewRef);\n    if (index !== -1) {\n      this._outlet.detach(index);\n    }\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabelWrapper]' })\nexport class NxTabLabelWrapperDirective implements FocusableOption {\n  private _disabled: boolean = false;\n\n  constructor(public elementRef: ElementRef) {}\n\n  /** Whether the tab group is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n    }\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { NxTabLabelWrapperDirective } from './tab-label-wrapper';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['./tab-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxTabHeaderComponent implements AfterContentInit {\n\n  private _keyManager: FocusKeyManager<NxTabLabelWrapperDirective>;\n\n  private _selectedIndex: number = 0;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._selectedIndex = value;\n    if (this._keyManager) {\n      this._keyManager.updateActiveItem(value);\n    }\n  }\n\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) { return; }\n    this._keyManager.setActiveItem(value);\n  }\n\n  private _autoselect: boolean = true;\n\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = value;\n  }\n\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(NxTabLabelWrapperDirective) labels: QueryList<NxTabLabelWrapperDirective>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NxTabLabelWrapperDirective>(this.labels).withHorizontalOrientation('ltr').withWrap();\n    this._keyManager.updateActiveItem(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _isValidIndex(idx: number) {\n    if (!this.labels) { return true; }\n    const tab = this.labels.toArray()[idx] || null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Handles keyboard inputs on the labels\n   * If autoselect is enabled the tab gets changed immediately\n   * If autoselect is disabled only the focus changes but the user still has to select the item\n   * by himself\n   */\n  handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n\n    if (this.autoselect) {\n      this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n    } else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n      this.indexFocused.emit(this._keyManager.activeItemIndex);\n    }\n  }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnInit\n} from '@angular/core';\nimport { merge, Subscription, Subject } from 'rxjs';\n\nimport { NxAccordionDirective } from '@allianz/ngx-ndbx/accordion';\nimport { NxExpansionPanelComponent } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabHeaderComponent } from './tab-header';\n\nexport class NxTabChangeEvent {\n  /** The index of the selected or focused tab. */\n  index: number;\n\n  /** The component instance of the selected or focused tab. */\n  tab: NxTabComponent;\n}\n\nlet nextId: number = 0;\nconst MOBILE_BREAKPOINT = 480;\n\n@Component({\n  selector: 'nx-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['./tab-group.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.is-disabled]': 'disabled'\n  },\n  providers: [{ provide: NxTabGroupBase, useExisting: NxTabGroupComponent }]\n})\nexport class NxTabGroupComponent implements NxTabGroupBase, OnInit, OnDestroy, AfterContentInit, AfterContentChecked {\n  private _selectedIndex: number | null = null;\n  private _groupId: number;\n  private _negative: boolean = false;\n  private _disabled: boolean = false;\n  private _indexToSelect: number | null = 0;\n  private _autoselect: boolean = true;\n  private _mobileAccordion: boolean = true;\n  _showAccordion: boolean = false;\n\n  /** @docs-private */\n  @ContentChildren(NxTabComponent) tabs: QueryList<NxTabComponent>;\n\n  /** @docs-private */\n  @ViewChildren(NxTabBodyComponent) tabBodyChildren: QueryList<NxTabBodyComponent>;\n\n  /** @docs-private */\n  @ViewChild('tabHeader', { static: false }) tabHeader: NxTabHeaderComponent;\n\n  /** @docs-private */\n  @ViewChildren(NxExpansionPanelComponent) panels: QueryList<NxExpansionPanelComponent>;\n\n  /** @docs-private */\n  @ViewChild(NxAccordionDirective, { static: false }) accordion: NxAccordionDirective;\n\n  /** Sets the selected tab. */\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  get negative(): boolean {\n    return this._negative;\n  }\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab group is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (value !== this._disabled) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab should be immediately selected on focus. */\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = coerceBooleanProperty(value);\n  }\n\n  /** Whether the tabs should to accordion on mobile viewports. */\n  @Input()\n  get mobileAccordion(): boolean {\n    return this._mobileAccordion;\n  }\n  set mobileAccordion(value: boolean) {\n    this._mobileAccordion = coerceBooleanProperty(value);\n  }\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /**\n   * An event emitted when focus has changed within a tab group.\n   *\n   * **Note:** is not supported in mobile view.\n   */\n  @Output() readonly focusChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  private _disabledTabsCache = [];\n\n  _appearanceChange = new Subject();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnInit() {\n    this._switchAppearance(window.innerWidth);\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this.tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n    * After the content is checked, this component knows what tabs have been defined\n    * and what the selected index should be.\n    */\n  ngAfterContentChecked() {\n\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    let indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If the active tab is disabled select the next focusable tab\n    // if all tabs are disabled, allow selection of disabled active tab.\n    if (!this.disabled && this.tabs.toArray()[indexToSelect].disabled) {\n      const nextFocusable = this.tabs.toArray()\n        .map((tab, index) => ({ tab: tab, index: index }))\n        .find(item => !item.tab.disabled);\n\n      indexToSelect = nextFocusable ? nextFocusable.index : indexToSelect;\n    }\n\n    // If the index to select was disabled previously leave the selection on the current\n    // so that the selection does not jump from one to another tab.\n    if (this._disabledTabsCache[this._indexToSelect]) {\n      this._indexToSelect = this.selectedIndex;\n    }\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // cache the previous disabled status of all tabs\n    if (!this.disabled) {\n      this.tabs.toArray().forEach((tab, index) => this._disabledTabsCache[index] = tab.disabled);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /**\n  * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n  * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n  * binding to be updated, we need to subscribe to changes in it and trigger change detection\n  * manually.\n  */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this.tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** @docs-private */\n  focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): NxTabChangeEvent {\n    const event = new NxTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /** @docs-private */\n  handleClick(index: number) {\n    const clickedTab = this.tabs.toArray()[index];\n    if (!this.disabled && !clickedTab.disabled) {\n      this.selectedIndex = this.tabHeader.focusIndex = index;\n    }\n  }\n\n  /**\n   * @docs-private\n   * Returns the tabindex for a tab label\n   */\n  getTabIndex(tab: NxTabComponent, idx: number): number | null {\n    return (this.selectedIndex === idx && !tab.disabled && !this.disabled) ? 0 : -1;\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `nx-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `nx-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** @docs-private */\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this._switchAppearance(event.target.innerWidth);\n  }\n\n  private _switchAppearance(viewPortWidth) {\n    if (!this._mobileAccordion) {\n      return;\n    }\n    // notify the outlets to detach the viewrefs for header and body before\n    // we switch the appearance. this way we only instantiate the templates\n    // once so that they do not get destroyed during the switch\n    if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n      this._appearanceChange.next();\n      this._showMobileVersion();\n    } else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n      this._appearanceChange.next();\n      this._showDesktopVersion();\n    }\n  }\n\n  private _showMobileVersion() {\n    this._showAccordion = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showDesktopVersion() {\n    this._showAccordion = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Emulate the tab change event when an accordion panel is opened in\n   * mobile viewports.\n   */\n  _panelOpened(index: number) {\n    this.selectedIndex = index;\n  }\n}\n","import { Component, Input, Directive, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-tab-nav-bar',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['./tab-nav-bar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.is-disabled]': 'disabled',\n    'role': 'navigation',\n  }\n})\nexport class NxTabNavBarComponent {\n\n  private _negative: boolean = false;\n\n  /** Whether the tab nav bar has negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Whether the tab nav bar has disabled styling. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n}\n\n@Directive({\n  selector: '[nxTabLink]',\n  host: {\n    '[class.nx-tab-link]': 'true',\n    '[class.is-active]': 'active',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-current]': 'active',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  }\n})\nexport class NxTabLinkDirective {\n\n  private _active: boolean = false;\n  private _disabled: boolean = false;\n\n  /** Whether the tab link is active and has the active styling. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._active) {\n      this._active = value;\n    }\n  }\n\n  /** Whether the tab link is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return (this._tabNavBar && this._tabNavBar.disabled) ? this._tabNavBar.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = value;\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() private _tabNavBar: NxTabNavBarComponent\n  ) {\n    if (!this._tabNavBar) {\n      throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n    }\n\n  }\n\n  _getTabIndex(): string {\n    return (this.disabled) ? '-1' : '0';\n  }\n}\n","import { NxTabHeaderOutletComponent } from './tab-header-outlet';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabHeaderComponent } from './tab-header';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabNavBarComponent, NxTabLinkDirective } from './tab-nav-bar';\nimport { NxTabContentDirective} from './tab-content';\nimport { NxTabLabelWrapperDirective } from './tab-label-wrapper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxAccordionModule\n  ],\n  exports: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabLabelWrapperDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective,\n    NxTabContentDirective\n  ],\n  declarations: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabLabelWrapperDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective,\n    NxTabContentDirective,\n    NxTabHeaderOutletComponent\n  ],\n  providers: [],\n})\nexport class NxTabsModule { }\n","export const BREAKPOINT_MOBILE = '(max-width: 703px)';\nexport const BREAKPOINT_TABLET = '(min-width: 704px) and (max-width: 992px)';\nexport const BREAKPOINT_DESKTOP = '(min-width: 993px)';\n","import { ElementRef, Renderer2, Input } from '@angular/core';\n\nimport { appendClasses, mapClassNames, removeClasses } from '@allianz/ngx-ndbx/utils';\n\nexport type MappingObject = {\n  [key: string]: string;\n};\n\nexport class MappedStyles {\n  private _classNames: string;\n  private _classNamesSanitized: string;\n\n  constructor(\n    private mapping: MappingObject,\n    private baseClasses = [],\n    protected _elementRef: ElementRef,\n    protected _renderer: Renderer2) {\n      this.classNames = '';\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n    removeClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n    this._classNamesSanitized = mapClassNames(value, this.baseClasses, this.mapping);\n    this._classNames = value;\n    appendClasses(this._renderer, this._elementRef, this._classNamesSanitized);\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Attribute} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  template: '<ng-content></ng-content>',\n  styleUrls: ['card.scss'],\n  selector: 'nx-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nx-card',\n    '[class.is-selectable]': 'selectable',\n    '[class.is-selected]': 'selected',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '(click)': '_toggleSelected()',\n    '(keydown.enter)': '_toggleSelected()',\n    '[attr.tabindex]': '_getTabindex()'\n  }\n})\nexport class NxCardComponent {\n  _tabindex: string;\n\n  /**\n   * Whether this card is selectable or not.\n   *\n   * The selectable property of the card is deprecated.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n   */\n  @Input()\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  private _selectable: boolean;\n\n  /**\n   * Whether this card is selected or not.\n   *\n   * The selected property of the card is deprecated.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _selected: boolean;\n\n  /**\n   * Whether a selectable card is disabled or not.\n   *\n   * The disabled property of the card will be deprecated,\n   * as its selectable properties are deprecated as well.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled: boolean = false;\n\n  /**\n   * Event emitted when the selected value has changed.\n   *\n   * This output  property of the card is deprecated,\n   * as its selectable properties are deprecated as well.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Attribute('tabindex') tabindex: string) {\n    this._tabindex = tabindex;\n  }\n\n  _toggleSelected(): void {\n    if (this.selectable && !this.disabled) {\n      this.selected = !this.selected;\n      this.selectedChange.emit(this.selected);\n    }\n  }\n\n  _getTabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.selectable) {\n      return this._tabindex || '0';\n    }\n\n    return this._tabindex || '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxCardComponent} from './card.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCardComponent ],\n  exports: [ NxCardComponent ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NxCardModule { }\n","/** @docs-private */\nexport abstract class SelectableCard {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  checkedChange;\n  selectionChange;\n}\n","import { NxSelectableCardComponent } from './selectable-card.component';\n\nexport class NxSelectableCardChangeEvent {\n  constructor(\n    /** The checked value of the selectable card. */\n    public checked: boolean,\n    /** The value of the selectable card. */\n    public value: string,\n    /** The component instance of the selectable card which emitted the change event. */\n    public card: NxSelectableCardComponent\n  ) {}\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  DoCheck,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nimport {\n  ControlValueAccessor,\n  FormControl,\n  FormGroupDirective,\n  NgControl,\n  NgForm\n} from '@angular/forms';\nimport { SelectableCard } from './selectable-card';\nimport { NxSelectableCardChangeEvent } from './selectable-card-change-event';\nimport { NxErrorComponent } from '@allianz/ngx-ndbx/base';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-selectable-card',\n  templateUrl: './selectable-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./selectable-card.component.scss'],\n  providers: [{provide: SelectableCard, useExisting: forwardRef(() => NxSelectableCardComponent)}],\n  host: {\n    '[class.is-checked]': 'checked',\n    '[class.is-disabled]': 'disabled',\n    '[class.has-error]': 'errorState',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.role]': '\"checkbox\"',\n    '[attr.aria-checked]': 'checked'\n  }\n})\n\nexport class NxSelectableCardComponent extends SelectableCard implements ControlValueAccessor, DoCheck, AfterContentInit {\n  private _id: string = (nextId++).toString();\n  private _checked = false;\n  private _disabled: boolean = false;\n  private _value: string;\n  private _name: string;\n  private _negative: boolean = false;\n  private _tabindex: string = '0';\n  private _required: boolean;\n  /** @docs-private */\n  _errorListIds: string = '';\n\n  /** @docs-private */\n  @ContentChildren(NxErrorComponent) _errorList: QueryList<NxErrorComponent>;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** @docs-private */\n  stateChanges = new Subject<void>();\n\n  /** An event is dispatched each time the selectable card value is changed */\n  @Output()\n  selectionChange: EventEmitter<NxSelectableCardChangeEvent> = new EventEmitter<NxSelectableCardChangeEvent>();\n\n  /** An event is dispatched each time the selectable card value is changed */\n  @Output() checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * Id of the selectable card.\n   *\n   * If not set, the selectable card gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-selectable-card-${this._id}`;\n  }\n\n  /** Whether the selectable card  is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  /** The value attribute of the native input element  */\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n\n  set value(value: string) {\n    if (value) {\n      this._value = value;\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the selectable card is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled || null;\n  }\n\n  /** Whether the selectable card is negative. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return this._negative || null;\n  }\n\n  /** Whether the selectable card is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  /** Name of the selectable card. */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  /** The tabIndex of the element */\n  @Input()\n  get tabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    return this._tabindex;\n  }\n\n  set tabindex(value: string) {\n    this._tabindex = value;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Self() @Optional() public ngControl: NgControl,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._errorList.changes.subscribe((value) => {\n      this._errorListIds = value.map((errorItem: NxErrorComponent) => {\n        return errorItem.id;\n      }).join(' ');\n      this._changeDetectorRef.markForCheck();\n    });\n\n    this._errorListIds = this._errorList.map((errorItem: NxErrorComponent) => {\n      return errorItem.id;\n    }).join(' ');\n  }\n\n  /** @docs-private */\n  onChangeCallback = (_: any) => {};\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onTouchedCallback = (_: any) => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Toggles the checked state of the selectable card . */\n  public toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n\n  /** @docs-private */\n  _onInputClick(event: Event): void {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  _onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n\n  /** @docs-private */\n  private _emitChangeEvent() {\n    const event = new NxSelectableCardChangeEvent(this.checked, this.value, this);\n    this.onChangeCallback(this.checked);\n    this.selectionChange.emit(event);\n    this.checkedChange.emit(this.checked);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-card-header',\n  templateUrl: './card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxCardHeaderComponent {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-card-footer',\n  templateUrl: './card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxCardFooterComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxSelectableCardComponent } from './selectable-card.component';\nimport { NxCardHeaderComponent } from './card-header.component';\nimport { NxCardFooterComponent } from './card-footer.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxErrorModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  declarations: [\n    NxSelectableCardComponent,\n    NxCardHeaderComponent,\n    NxCardFooterComponent\n  ],\n  exports: [\n    NxSelectableCardComponent,\n    NxCardHeaderComponent,\n    NxCardFooterComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxErrorModule\n  ]\n})\nexport class NxSelectableCardModule { }\n"],"names":["NgModule","HostBinding","tslib_1.__extends","Component","ChangeDetectionStrategy","ChangeDetectorRef","ElementRef","Subject","EventEmitter","coerceBooleanProperty","NgControl","Optional","Self","ContentChildren","forwardRef","ContentChild","NxLabelComponent","Output","Input","ErrorStateMatcher","NgForm","FormGroupDirective","ViewChild","NxLabelModule","NxErrorModule","CommonModule","NxIconModule","ObserversModule","nextId","NG_VALUE_ACCESSOR","DEFAULT_TYPE","Renderer2","NxIconComponent","MappedStyles","startWith","filter","tap","takeUntil","merge","UniqueSelectionDispatcher","HostListener","ViewContainerRef","removeClasses","MAPPING","QueryList","mapClassNames","Inject","FormsModule","DEFAULT_SIZE","Injectable","animation","style","animate","Directive","Subscription","trigger","transition","useAnimation","query","animateChild","EventManager","TemplateRef","A11yModule","ENTER","SPACE","fromEvent","TemplatePortal","OverlayConfig","map","Overlay","FocusTrapFactory","FocusMonitor","NgZone","Platform","DOCUMENT","OverlayModule","coerceNumberProperty","DELETE","BACKSPACE","ViewChildren","DomSanitizer","NxFormfieldControl","defer","take","switchMap","SelectionModel","ActiveDescendantKeyManager","isDevMode","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","HOME","END","SHIFT","TAB","delay","Attribute","NxFormfieldComponent","CdkConnectedOverlay","NxFormfieldModule","NxCheckboxModule","Observable","of","debounceTime","first","ESCAPE","Directionality","Host","NxWordComponent","ViewportRuler","getFontShorthand","OverlayPositionBuilder","NxFormfieldErrorDirective","NxDropdownComponent","throttleTime","NxInputModule","NxPopoverModule","state","ICONS","CdkPortalOutlet","BasePortalOutlet","PortalModule","InjectionToken","ComponentPortal","portal","PortalInjector","Injector","LiveAnnouncer","SkipSelf","NxAutocompleteModule","NxButtonModule","NxGridModule","DEFAULT_CLASSES","NG_VALIDATORS","pad","Decimal","DataSource","BehaviorSubject","CdkTableModule","ScrollingModule","CdkAccordion","CdkAccordionItem","CdkPortal","FocusKeyManager","NxExpansionPanelComponent","NxAccordionDirective","NxAccordionModule","appendClasses","NxErrorComponent"],"mappings":"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"}