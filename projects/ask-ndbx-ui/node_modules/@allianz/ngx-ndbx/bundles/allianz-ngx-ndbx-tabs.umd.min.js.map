{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tabs/tab-group-base.ts","ng://@allianz/ngx-ndbx/tabs/tab-header-outlet.ts","ng://@allianz/ngx-ndbx/tabs/tab-label.ts","ng://@allianz/ngx-ndbx/tabs/tab-content.ts","ng://@allianz/ngx-ndbx/tabs/tab.ts","ng://@allianz/ngx-ndbx/tabs/tab-body.ts","ng://@allianz/ngx-ndbx/tabs/tab-label-wrapper.ts","ng://@allianz/ngx-ndbx/tabs/tab-header.ts","ng://@allianz/ngx-ndbx/tabs/tab-group.ts","ng://@allianz/ngx-ndbx/tabs/tab-nav-bar.ts","ng://@allianz/ngx-ndbx/tabs/tabs.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","NxTabHeaderOutletComponent","_tabGroup","this","prototype","ngOnInit","_this","_appearanceSubscription","_appearanceChange","subscribe","detach","attach","_outlet","insert","content","index","indexOf","ngOnDestroy","unsubscribe","Component","args","selector","template","NxTabGroupBase","ViewChild","static","read","ViewContainerRef","Input","NxTabLabelDirective","_super","__","constructor","create","tslib_1.__extends","Directive","CdkPortal","NxTabContentDirective","TemplateRef","NxTabComponent","_disabled","_stateChanges","Subject","isActive","Error","defineProperty","_templateLabel","_label","disabled","_headerViewRef","_contentViewRef","contentTemplate","_explicitContent","_implicitContent","createEmbeddedView","ngOnChanges","changes","ngAfterContentInit","templateLabel","complete","destroy","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","decorators","type","Inject","Optional","Host","ContentChild","NxTabBodyComponent","_active","coerceBooleanProperty","tab","contentViewRef","NxTabLabelWrapperDirective","elementRef","newValue","focus","nativeElement","ElementRef","NxTabHeaderComponent","_changeDetectorRef","_selectedIndex","_autoselect","selectFocusedIndex","EventEmitter","indexFocused","_keyManager","updateActiveItem","activeItemIndex","_isValidIndex","focusIndex","setActiveItem","FocusKeyManager","labels","withHorizontalOrientation","withWrap","markForCheck","idx","toArray","handleKeydown","event","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","emit","onKeydown","autoselect","ChangeDetectorRef","Output","ContentChildren","nextId","NxTabGroupComponent","_negative","_indexToSelect","_mobileAccordion","_showAccordion","selectedIndexChange","selectedTabChange","focusChange","_tabsSubscription","Subscription","EMPTY","_tabLabelSubscription","_disabledTabsCache","_groupId","coerceNumberProperty","_switchAppearance","window","innerWidth","_subscribeToTabLabels","tabs","_clampTabIndex","length","ngAfterContentChecked","indexToSelect","nextFocusable","map","find","item","selectedIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","forEach","merge","apply","arguments","concat","__spread","Math","min","max","focusChanged","NxTabChangeEvent","handleClick","clickedTab","tabHeader","getTabIndex","_getTabLabelId","_getTabContentId","onResize","target","viewPortWidth","_showMobileVersion","_showDesktopVersion","_panelOpened","host","[class.is-negative]","[class.is-disabled]","providers","provide","useExisting","ViewChildren","NxExpansionPanelComponent","NxAccordionDirective","HostListener","NxTabNavBarComponent","negative","role","NxTabLinkDirective","_tabNavBar","_getTabIndex","[class.nx-tab-link]","[class.is-active]","[attr.aria-current]","[attr.tabindex]","[attr.aria-disabled]","SkipSelf","NxTabsModule","NgModule","imports","CommonModule","PortalModule","NxAccordionModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** @docs-private */\nexport abstract class NxTabGroupBase {\n\n}\n","import { Component, EmbeddedViewRef, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NxTabGroupBase } from './tab-group-base';\nimport { NxTabGroupComponent } from './tab-group';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header-outlet',\n  template: '<ng-container #outlet></ng-container>'\n})\nexport class NxTabHeaderOutletComponent implements OnInit, OnDestroy {\n  @ViewChild('outlet', { static: true, read: ViewContainerRef }) _outlet: ViewContainerRef;\n\n  @Input() content: EmbeddedViewRef<any>;\n\n  constructor(private _tabGroup: NxTabGroupBase) { }\n\n  private _appearanceSubscription: Subscription;\n\n  ngOnInit() {\n    this._appearanceSubscription = (this._tabGroup as NxTabGroupComponent)._appearanceChange.subscribe(() => {\n      this.detach();\n    });\n    this.attach();\n  }\n\n  attach() {\n    this._outlet.insert(this.content);\n  }\n\n  detach() {\n    const index = this._outlet.indexOf(this.content);\n    if (index !== -1) {\n      this._outlet.detach(index);\n    }\n  }\n\n  ngOnDestroy() {\n    this._appearanceSubscription.unsubscribe();\n  }\n}\n","import { Directive} from '@angular/core';\nimport { CdkPortal } from '@angular/cdk/portal';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabel]' })\nexport class NxTabLabelDirective extends CdkPortal {}\n","import { Directive, TemplateRef } from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[nxTabContent]' })\nexport class NxTabContentDirective {\n  constructor(/** @docs-private */public template: TemplateRef<any>) { }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  Optional,\n  Inject,\n  Host,\n  ContentChild,\n  EmbeddedViewRef,\n  AfterContentInit\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabContentDirective } from './tab-content';\n\n@Component({\n  selector: 'nx-tab',\n  exportAs: 'nxTab',\n  templateUrl: 'tab.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxTabComponent implements OnChanges, OnDestroy, AfterContentInit {\n  private _label: string;\n  private _disabled: boolean = false;\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * Content for the tab label given by `<ng-template nxTabLabel>`.\n   * @docs-private\n   * */\n  @ContentChild(NxTabLabelDirective, { read: TemplateRef, static: true })\n  get templateLabel(): TemplateRef<any> {return this._templateLabel; }\n  set templateLabel(value: TemplateRef<any>) {\n    // Only update the templateLabel via query if there is actually\n    // a nxTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n\n  private _templateLabel: TemplateRef<any>;\n\n  /** Template inside the NxTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, { static: true }) _implicitContent: TemplateRef<any>;\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(NxTabContentDirective, { read: TemplateRef, static: true })\n  _explicitContent: TemplateRef<any>;\n\n  /** Sets the label of the tab shown in the tablist. */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    if (this._label !== value) {\n      this._label = value;\n    }\n  }\n\n  /** Sets the tab to disabled. */\n  @Input()\n  get disabled(): boolean {\n    return (this._tabGroup && (this._tabGroup as NxTabGroupComponent).disabled) ?\n    (this._tabGroup as NxTabGroupComponent).disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (this._disabled !== value) {\n      this._disabled = value;\n    }\n  }\n\n  private _headerViewRef: EmbeddedViewRef<any>;\n  private _contentViewRef: EmbeddedViewRef<any>;\n\n  /** @docs-private */\n  get headerViewRef() {\n    return this._headerViewRef;\n  }\n\n  /** @docs-private */\n  get contentViewRef() {\n    // for lazy loading we only create the viewref when it is asked for\n    if (!this._contentViewRef) {\n      const contentTemplate = this._explicitContent || this._implicitContent;\n      this._contentViewRef = contentTemplate.createEmbeddedView({});\n    }\n    return this._contentViewRef;\n  }\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    @Inject(NxTabGroupBase) @Optional() @Host() private _tabGroup: NxTabGroupBase) {\n    if (!this._tabGroup) {\n      throw Error(`The nx-tab element has to be wrapped in a nx-tab-group to work.\n      Please provide a nx-tab-group element and place your tabs inside it.`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.templateLabel) {\n      this._headerViewRef = this.templateLabel.createEmbeddedView({});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n    this._contentViewRef.destroy();\n    if (this._headerViewRef) { this._headerViewRef.destroy(); }\n  }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NxTabComponent } from './tab';\nimport { NxTabGroupBase } from './tab-group-base';\nimport { NxTabGroupComponent } from './tab-group';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-body',\n  templateUrl: 'tab-body.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./tab-body.scss']\n})\nexport class NxTabBodyComponent implements OnInit, OnDestroy {\n  private _appearanceSubscription: Subscription;\n\n  @ViewChild('outlet', { static: true, read: ViewContainerRef }) _outlet: ViewContainerRef;\n\n  @Input() tab: NxTabComponent;\n\n  private _active: boolean = false;\n\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    if (this._active) {\n      this.attach();\n    } else {\n      this.detach();\n    }\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  constructor(\n    private _tabGroup: NxTabGroupBase) { }\n\n  ngOnInit() {\n    this._appearanceSubscription = (this._tabGroup as NxTabGroupComponent)._appearanceChange.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  ngOnDestroy() {\n    this._appearanceSubscription.unsubscribe();\n  }\n\n  attach() {\n    this._outlet.insert(this.tab.contentViewRef);\n  }\n\n  detach() {\n    const index = this._outlet.indexOf(this.tab.contentViewRef);\n    if (index !== -1) {\n      this._outlet.detach(index);\n    }\n  }\n}\n","import { FocusableOption } from '@angular/cdk/a11y';\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** @docs-private */\n@Directive({ selector: '[nxTabLabelWrapper]' })\nexport class NxTabLabelWrapperDirective implements FocusableOption {\n  private _disabled: boolean = false;\n\n  constructor(public elementRef: ElementRef) {}\n\n  /** Whether the tab group is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (this.disabled !== newValue) {\n      this._disabled = newValue;\n    }\n  }\n\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n} from '@angular/core';\n\nimport { NxTabLabelWrapperDirective } from './tab-label-wrapper';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['./tab-header.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxTabHeaderComponent implements AfterContentInit {\n\n  private _keyManager: FocusKeyManager<NxTabLabelWrapperDirective>;\n\n  private _selectedIndex: number = 0;\n\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._selectedIndex = value;\n    if (this._keyManager) {\n      this._keyManager.updateActiveItem(value);\n    }\n  }\n\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) { return; }\n    this._keyManager.setActiveItem(value);\n  }\n\n  private _autoselect: boolean = true;\n\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = value;\n  }\n\n  @Output() readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n  @Output() readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(NxTabLabelWrapperDirective) labels: QueryList<NxTabLabelWrapperDirective>;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<NxTabLabelWrapperDirective>(this.labels).withHorizontalOrientation('ltr').withWrap();\n    this._keyManager.updateActiveItem(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _isValidIndex(idx: number) {\n    if (!this.labels) { return true; }\n    const tab = this.labels.toArray()[idx] || null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Handles keyboard inputs on the labels\n   * If autoselect is enabled the tab gets changed immediately\n   * If autoselect is disabled only the focus changes but the user still has to select the item\n   * by himself\n   */\n  handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n\n    if (this.autoselect) {\n      this.selectFocusedIndex.emit(this._keyManager.activeItemIndex);\n    } else if (event.keyCode !== ENTER && event.keyCode !== SPACE) {\n      this.indexFocused.emit(this._keyManager.activeItemIndex);\n    }\n  }\n}\n","import { NxTabGroupBase } from './tab-group-base';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  OnInit\n} from '@angular/core';\nimport { merge, Subscription, Subject } from 'rxjs';\n\nimport { NxAccordionDirective } from '@allianz/ngx-ndbx/accordion';\nimport { NxExpansionPanelComponent } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabHeaderComponent } from './tab-header';\n\nexport class NxTabChangeEvent {\n  /** The index of the selected or focused tab. */\n  index: number;\n\n  /** The component instance of the selected or focused tab. */\n  tab: NxTabComponent;\n}\n\nlet nextId: number = 0;\nconst MOBILE_BREAKPOINT = 480;\n\n@Component({\n  selector: 'nx-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['./tab-group.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.is-disabled]': 'disabled'\n  },\n  providers: [{ provide: NxTabGroupBase, useExisting: NxTabGroupComponent }]\n})\nexport class NxTabGroupComponent implements NxTabGroupBase, OnInit, OnDestroy, AfterContentInit, AfterContentChecked {\n  private _selectedIndex: number | null = null;\n  private _groupId: number;\n  private _negative: boolean = false;\n  private _disabled: boolean = false;\n  private _indexToSelect: number | null = 0;\n  private _autoselect: boolean = true;\n  private _mobileAccordion: boolean = true;\n  _showAccordion: boolean = false;\n\n  /** @docs-private */\n  @ContentChildren(NxTabComponent) tabs: QueryList<NxTabComponent>;\n\n  /** @docs-private */\n  @ViewChildren(NxTabBodyComponent) tabBodyChildren: QueryList<NxTabBodyComponent>;\n\n  /** @docs-private */\n  @ViewChild('tabHeader', { static: false }) tabHeader: NxTabHeaderComponent;\n\n  /** @docs-private */\n  @ViewChildren(NxExpansionPanelComponent) panels: QueryList<NxExpansionPanelComponent>;\n\n  /** @docs-private */\n  @ViewChild(NxAccordionDirective, { static: false }) accordion: NxAccordionDirective;\n\n  /** Sets the selected tab. */\n  @Input()\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n\n  /** Whether the negative set of styling should be used. */\n  @Input()\n  get negative(): boolean {\n    return this._negative;\n  }\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab group is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    if (value !== this._disabled) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  }\n\n  /** Whether the tab should be immediately selected on focus. */\n  @Input()\n  get autoselect(): boolean {\n    return this._autoselect;\n  }\n  set autoselect(value: boolean) {\n    this._autoselect = coerceBooleanProperty(value);\n  }\n\n  /** Whether the tabs should to accordion on mobile viewports. */\n  @Input()\n  get mobileAccordion(): boolean {\n    return this._mobileAccordion;\n  }\n  set mobileAccordion(value: boolean) {\n    this._mobileAccordion = coerceBooleanProperty(value);\n  }\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** An event emitted when the selected tab has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /**\n   * An event emitted when focus has changed within a tab group.\n   *\n   * **Note:** is not supported in mobile view.\n   */\n  @Output() readonly focusChange: EventEmitter<NxTabChangeEvent> = new EventEmitter<NxTabChangeEvent>();\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  private _disabledTabsCache = [];\n\n  _appearanceChange = new Subject();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  ngOnInit() {\n    this._switchAppearance(window.innerWidth);\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this.tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n    * After the content is checked, this component knows what tabs have been defined\n    * and what the selected index should be.\n    */\n  ngAfterContentChecked() {\n\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    let indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If the active tab is disabled select the next focusable tab\n    // if all tabs are disabled, allow selection of disabled active tab.\n    if (!this.disabled && this.tabs.toArray()[indexToSelect].disabled) {\n      const nextFocusable = this.tabs.toArray()\n        .map((tab, index) => ({ tab: tab, index: index }))\n        .find(item => !item.tab.disabled);\n\n      indexToSelect = nextFocusable ? nextFocusable.index : indexToSelect;\n    }\n\n    // If the index to select was disabled previously leave the selection on the current\n    // so that the selection does not jump from one to another tab.\n    if (this._disabledTabsCache[this._indexToSelect]) {\n      this._indexToSelect = this.selectedIndex;\n    }\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex !== indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // cache the previous disabled status of all tabs\n    if (!this.disabled) {\n      this.tabs.toArray().forEach((tab, index) => this._disabledTabsCache[index] = tab.disabled);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /**\n  * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n  * on the NxTab component, whereas the data binding is inside the NxTabGroup. In order for the\n  * binding to be updated, we need to subscribe to changes in it and trigger change detection\n  * manually.\n  */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this.tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** @docs-private */\n  focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): NxTabChangeEvent {\n    const event = new NxTabChangeEvent;\n    event.index = index;\n    if (this.tabs && this.tabs.length) {\n      event.tab = this.tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /** @docs-private */\n  handleClick(index: number) {\n    const clickedTab = this.tabs.toArray()[index];\n    if (!this.disabled && !clickedTab.disabled) {\n      this.selectedIndex = this.tabHeader.focusIndex = index;\n    }\n  }\n\n  /**\n   * @docs-private\n   * Returns the tabindex for a tab label\n   */\n  getTabIndex(tab: NxTabComponent, idx: number): number | null {\n    return (this.selectedIndex === idx && !tab.disabled && !this.disabled) ? 0 : -1;\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `nx-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `nx-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** @docs-private */\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this._switchAppearance(event.target.innerWidth);\n  }\n\n  private _switchAppearance(viewPortWidth) {\n    if (!this._mobileAccordion) {\n      return;\n    }\n    // notify the outlets to detach the viewrefs for header and body before\n    // we switch the appearance. this way we only instantiate the templates\n    // once so that they do not get destroyed during the switch\n    if (viewPortWidth <= MOBILE_BREAKPOINT && !this._showAccordion) {\n      this._appearanceChange.next();\n      this._showMobileVersion();\n    } else if (viewPortWidth > MOBILE_BREAKPOINT && this._showAccordion) {\n      this._appearanceChange.next();\n      this._showDesktopVersion();\n    }\n  }\n\n  private _showMobileVersion() {\n    this._showAccordion = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _showDesktopVersion() {\n    this._showAccordion = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Emulate the tab change event when an accordion panel is opened in\n   * mobile viewports.\n   */\n  _panelOpened(index: number) {\n    this.selectedIndex = index;\n  }\n}\n","import { Component, Input, Directive, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'nx-tab-nav-bar',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['./tab-nav-bar.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.is-negative]': 'negative',\n    '[class.is-disabled]': 'disabled',\n    'role': 'navigation',\n  }\n})\nexport class NxTabNavBarComponent {\n\n  private _negative: boolean = false;\n\n  /** Whether the tab nav bar has negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative() {\n    return this._negative;\n  }\n\n  private _disabled: boolean = false;\n\n  /** Whether the tab nav bar has disabled styling. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this.disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) { }\n\n}\n\n@Directive({\n  selector: '[nxTabLink]',\n  host: {\n    '[class.nx-tab-link]': 'true',\n    '[class.is-active]': 'active',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-current]': 'active',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  }\n})\nexport class NxTabLinkDirective {\n\n  private _active: boolean = false;\n  private _disabled: boolean = false;\n\n  /** Whether the tab link is active and has the active styling. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._active) {\n      this._active = value;\n    }\n  }\n\n  /** Whether the tab link is disabled. Default: false. */\n  @Input()\n  get disabled(): boolean {\n    return (this._tabNavBar && this._tabNavBar.disabled) ? this._tabNavBar.disabled : this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = value;\n    }\n  }\n\n  constructor(\n    @Optional() @SkipSelf() private _tabNavBar: NxTabNavBarComponent\n  ) {\n    if (!this._tabNavBar) {\n      throw Error(`The nx-tab-link element has to be wrapped in a nx-tab-nav-bar to work.`);\n    }\n\n  }\n\n  _getTabIndex(): string {\n    return (this.disabled) ? '-1' : '0';\n  }\n}\n","import { NxTabHeaderOutletComponent } from './tab-header-outlet';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxAccordionModule } from '@allianz/ngx-ndbx/accordion';\nimport { NxTabComponent } from './tab';\nimport { NxTabBodyComponent } from './tab-body';\nimport { NxTabGroupComponent } from './tab-group';\nimport { NxTabHeaderComponent } from './tab-header';\nimport { NxTabLabelDirective } from './tab-label';\nimport { NxTabNavBarComponent, NxTabLinkDirective } from './tab-nav-bar';\nimport { NxTabContentDirective} from './tab-content';\nimport { NxTabLabelWrapperDirective } from './tab-label-wrapper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PortalModule,\n    NxAccordionModule\n  ],\n  exports: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabLabelWrapperDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective,\n    NxTabContentDirective\n  ],\n  declarations: [\n    NxTabComponent,\n    NxTabGroupComponent,\n    NxTabLabelDirective,\n    NxTabLabelWrapperDirective,\n    NxTabHeaderComponent,\n    NxTabBodyComponent,\n    NxTabNavBarComponent,\n    NxTabLinkDirective,\n    NxTabContentDirective,\n    NxTabHeaderOutletComponent\n  ],\n  providers: [],\n})\nexport class NxTabsModule { }\n"]}