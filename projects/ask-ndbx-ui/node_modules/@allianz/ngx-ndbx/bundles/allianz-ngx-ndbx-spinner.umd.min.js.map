{"version":3,"sources":["ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts"],"names":["DEFAULT_SIZE","NxSpinnerComponent","_changeDetectorRef","this","_size","_negative","Object","defineProperty","prototype","value","markForCheck","coerceBooleanProperty","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","host","[class.nx-spinner--small]","[class.nx-spinner--medium]","[class.nx-spinner--large]","[class.nx-spinner--negative]","[attr.role]","[attr.aria-busy]","[attr.aria-live]","ChangeDetectorRef","Input","NxSpinnerModule","NgModule","declarations","imports","CommonModule","exports","bootstrap","providers"],"mappings":"+fAMMA,EAAe,QAErBC,EAAA,WA4CE,SAAAA,EAAoBC,GAAAC,KAAAD,mBAAAA,EA5BZC,KAAAC,MAAqBJ,EAcrBG,KAAAE,WAAqB,EAe/B,OA1BEC,OAAAC,eACIN,EAAAO,UAAA,OAAI,KAMR,WACE,OAAOL,KAAKC,WARd,SACSK,GACHA,IAAUN,KAAKC,QACjBD,KAAKC,MAAQK,EACbN,KAAKD,mBAAmBQ,iDAU5BJ,OAAAC,eACIN,EAAAO,UAAA,WAAQ,KAMZ,WACE,OAAOL,KAAKE,eARd,SACaI,GACPA,IAAUN,KAAKE,YACjBF,KAAKE,UAAYM,EAAAA,sBAAsBF,GACvCN,KAAKD,mBAAmBQ,qEArC7BE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,SAAA,0IACAC,gBAAiBC,EAAAA,wBAAwBC,OAEzCC,KAAM,CACJC,4BAA6B,mBAC7BC,6BAA8B,oBAC9BC,4BAA6B,mBAC7BC,+BAAgC,WAChCC,cAAe,WACfC,mBAAoB,SACpBC,mBAAoB,0tDApB4BC,EAAAA,mDA2BjDC,EAAAA,MAAKf,KAAA,CAAC,4BAcNe,EAAAA,SAYH3B,EA7CA,GCRA,IAAA4B,EAAA,WAKA,SAAAA,KAa+B,2BAb9BC,EAAAA,SAAQjB,KAAA,CAAC,CACRkB,aAAc,CACZ9B,GAEF+B,QAAS,CACPC,EAAAA,cAEFC,QAAS,CACPjC,GAEFkC,UAAW,GACXC,UAAW,OAEkBP,EAlB/B","sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n"]}