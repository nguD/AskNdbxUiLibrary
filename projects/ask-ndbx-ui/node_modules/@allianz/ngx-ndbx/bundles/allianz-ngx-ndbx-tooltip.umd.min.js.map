{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@allianz/ngx-ndbx/tooltip/tooltip-animations.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.component.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.directive.ts","ng://@allianz/ngx-ndbx/tooltip/tooltip.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","nxTooltipAnimations","tooltipState","trigger","state","style","opacity","transition","animate","NxTooltipComponent","_changeDetectorRef","elementRef","_showTimeoutId","_hideTimeoutId","_visibility","_position","_arrowStyle","_closeOnInteraction","_onHide","Subject","defineProperty","_message","markForCheck","position","show","delay","_this","clearTimeout","window","setTimeout","hide","afterHidden","asObservable","isVisible","visibility","isDelayed","ngOnDestroy","complete","_animationStart","_animationDone","event","toState","_handleBodyInteraction","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","animations","host","[style.zoom]","(body:click)","aria-hidden","ChangeDetectorRef","ElementRef","getNxTooltipInvalidPositionError","Error","NX_TOOLTIP_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","fallbacks","originX","originY","overlayX","overlayY","NxTooltipDirective","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","platform","_ariaDescriber","_focusMonitor","_dir","_defaultOptions","_disabled","_manualListeners","Map","_destroyed","_scrollStrategy","scrollStrategies","reposition","element","nativeElement","IOS","ANDROID","set","forEach","listener","addEventListener","monitor","pipe","takeUntil","subscribe","origin","run","_overlayRef","_updatePosition","_tooltipInstance","updatePosition","coerceBooleanProperty","removeDescription","trim","_isTooltipVisible","_updateTooltipMessage","describe","message","ngOnInit","elementStyle","userSelect","nodeName","webkitUserSelect","msUserSelect","dispose","removeEventListener","clear","stopMonitoring","disabled","overlayRef","_createOverlay","_detach","_portal","ComponentPortal","_embeddedViewRef","attach","instance","toggle","_handleKeydown","keyCode","ESCAPE","stopPropagation","_handleTouchend","hostElement","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withLockedPosition","withFlexibleDimensions","withPush","withScrollableContainers","positionChanges","change","pair_1","connectionPair","_positionArrow","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","scrollStrategy","disposeOnNavigation","detachments","hasAttached","detach","getConfig","_getOrigin","overlay","_getOverlayPosition","withPositions","concat","__spread","originPosition","isLtr","overlayPosition","onMicrotaskEmpty","take","pair","targetPosition","getBoundingClientRect","left","width","overlayElement","arrowStyle","top","Directive","exportAs","(keydown)","(touchend)","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","Directionality","decorators","type","Optional","Inject","Input","NxTooltipModule","NgModule","imports","A11yModule","CommonModule","OverlayModule","exports","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * Animations used by NxTooltip.\n * @docs-private\n */\nexport const nxTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({ opacity: 0 })),\n    state('visible', style({ opacity: 1 })),\n    transition('* => visible', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 1 })\n    )),\n    transition('* => hidden', animate('70ms cubic-bezier(0, 0, 0.2, 1)',\n      style({ opacity: 0 })\n    )),\n  ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { nxTooltipAnimations } from './tooltip-animations';\nimport { TooltipPosition } from './tooltip.directive';\n\ntype TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  selector: 'nx-tooltip-component',\n  templateUrl: 'tooltip.component.html',\n  styleUrls: ['tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [nxTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the aninxions are disabled or there is no web aninxions polyfill.\n    '[style.zoom]': 'visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class NxTooltipComponent implements OnDestroy {\n  /** The timeout ID of any current timer set to show the tooltip */\n  private _showTimeoutId: number = null;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  private _hideTimeoutId: number = null;\n\n  /** Message to display in the tooltip */\n  private _message: string;\n\n  set message(value: string) {\n    this._message = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get message(): string {\n    return this._message;\n  }\n\n  private _visibility: TooltipVisibility = 'initial';\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  get visibility(): TooltipVisibility {\n    return this._visibility;\n  }\n\n  private _position: TooltipPosition = 'bottom';\n\n  /* @docs-private */\n  set position(value: TooltipPosition) {\n    this._position = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get position() {\n    return this._position;\n  }\n\n  _arrowStyle: { [key: string]: string } = {};\n\n  /* @docs-private */\n  set arrowStyle(value) {\n    this._arrowStyle = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /* @docs-private */\n  get arrowStyle() {\n    return this._arrowStyle;\n  }\n\n  /* @docs-private */\n  get arrowClass(): string {\n    return `nx-tooltip__arrow--${this.position}`;\n  }\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private readonly _onHide: Subject<any> = new Subject();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    public elementRef: ElementRef) {}\n\n  /**\n   * Shows the tooltip with an aninxion originating from the provided origin\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._showTimeoutId = window.setTimeout(() => {\n      this._visibility = 'visible';\n      this._showTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    if (this._hideTimeoutId) {\n      return;\n    }\n\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n\n    this._hideTimeoutId = window.setTimeout(() => {\n      this._visibility = 'hidden';\n      this._hideTimeoutId = null;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this.visibility === 'visible';\n  }\n\n  /** Whether the tooltip started a delay to be shown/hidden */\n  isDelayed(): boolean {\n    return this._showTimeoutId !== null || this._hideTimeoutId !== null;\n  }\n\n  ngOnDestroy() {\n    this._onHide.complete();\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      this._closeOnInteraction = true;\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately.\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n}\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  ScrollStrategy,\n  ConnectionPositionPair,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ComponentRef,\n  OnInit,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { NxTooltipComponent } from './tooltip.component';\n\n/**\n * Possible positions of the tooltip.\n */\nexport type TooltipPosition = 'left' | 'right' | 'top' | 'bottom';\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @docs-private\n */\nexport const NX_TOOLTIP_PANEL_CLASS = 'nx-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nexport function getNxTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Default `nxTooltip` options that can be overridden. */\nexport interface NxTooltipDefaultOptions {\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  showDelay: number;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  hideDelay: number;\n\n  /** The default delay in ms before hiding the tooltip on touch devices */\n  touchendHideDelay: number;\n\n  /** The default position of the tooltip */\n  position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `nxTooltip`. */\nexport const NX_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<NxTooltipDefaultOptions>('nx-tooltip-default-options', {\n      providedIn: 'root',\n      factory: NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n    });\n\nexport function NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): NxTooltipDefaultOptions {\n  return {\n    showDelay: 200,\n    hideDelay: 200,\n    touchendHideDelay: 1500,\n  };\n}\n\nconst fallbacks: ConnectionPositionPair[] = [\n  {\n    originX: 'center',\n    originY: 'bottom',\n    overlayX: 'center',\n    overlayY: 'top',\n  },\n  {\n    originX: 'end',\n    originY: 'center',\n    overlayX: 'start',\n    overlayY: 'center',\n  },\n  {\n    originX: 'start',\n    originY: 'center',\n    overlayX: 'end',\n    overlayY: 'center',\n  },\n  {\n    originX: 'center',\n    originY: 'top',\n    overlayX: 'center',\n    overlayY: 'bottom',\n\n  }\n];\n\n/**\n * Directive that attaches a tooltip to the host element.\n *\n */\n@Directive({\n  selector: '[nxTooltip]',\n  exportAs: 'nxTooltip',\n  host: {\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class NxTooltipDirective implements OnDestroy, OnInit {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: NxTooltipComponent | null;\n\n  private _portal: ComponentPortal<NxTooltipComponent>;\n  private _position: TooltipPosition = 'bottom';\n  private _disabled: boolean = false;\n  private _scrollStrategy: () => ScrollStrategy;\n  private _embeddedViewRef: ComponentRef<NxTooltipComponent>;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('nxTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      if (this._overlayRef) {\n        this._updatePosition();\n\n        if (this._tooltipInstance) {\n          this._tooltipInstance.position = this._position;\n          this._tooltipInstance.show(0);\n        }\n\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('nxTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('nxTooltipShowDelay') showDelay: number = this._defaultOptions.showDelay;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('nxTooltipHideDelay') hideDelay: number = this._defaultOptions.hideDelay;\n\n  private _message: string = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('nxTooltip')\n  get message(): string {\n    return this._message;\n  }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(NX_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions: NxTooltipDefaultOptions) {\n\n    this._scrollStrategy = this._overlay.scrollStrategies.reposition;\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n    // first tap from firing its click event or can cause the tooltip to open for clicks.\n    if (!platform.IOS && !platform.ANDROID) {\n      this._manualListeners\n        .set('mouseenter', () => this.show())\n        .set('mouseleave', () => this.hide());\n    } else {\n      // Fall back to showing on `touchstart`, otherwise\n      // there's no way for the user to trigger the tooltip on a touch device.\n      this._manualListeners.set('touchstart', () => this.show());\n    }\n\n    this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n    _focusMonitor.monitor(_elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin === 'keyboard') {\n        _ngZone.run(() => this.show());\n      }\n    });\n\n    if (_defaultOptions && _defaultOptions.position) {\n      this.position = _defaultOptions.position;\n    }\n  }\n\n  /**\n   * Setup styling-specific things\n   */\n  ngOnInit() {\n    const element = this._elementRef.nativeElement;\n    const elementStyle = element.style as CSSStyleDeclaration & {webkitUserDrag: string};\n    const userSelect = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA' ? '' : 'none';\n    elementStyle.webkitUserSelect = elementStyle.userSelect = elementStyle.msUserSelect = userSelect;\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._tooltipInstance = null;\n    }\n\n    // Clean up the event listeners set in the constructor\n    this._manualListeners.forEach((listener, event) => {\n      this._elementRef.nativeElement.removeEventListener(event, listener);\n    });\n    this._manualListeners.clear();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message || (this._isTooltipVisible() &&\n      !this._tooltipInstance.isDelayed())) {\n        return;\n    }\n\n    const overlayRef = this._createOverlay();\n\n    this._detach();\n    this._portal = this._portal || new ComponentPortal(NxTooltipComponent, this._viewContainerRef);\n    this._embeddedViewRef = overlayRef.attach(this._portal);\n    this._tooltipInstance = this._embeddedViewRef.instance;\n    this._tooltipInstance.afterHidden()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n    this._updateTooltipMessage();\n    this._tooltipInstance.show(delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions.touchendHideDelay);\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    if (this._overlayRef && !!this._overlayRef.hostElement) {\n      return this._overlayRef;\n    }\n\n    const scrollableAncestors =\n        this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay.position()\n                         .flexibleConnectedTo(this._elementRef)\n                         .withLockedPosition(true)\n                         .withFlexibleDimensions(false)\n                         .withPush(true);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n      if (this._tooltipInstance) {\n\n        const pair = change.connectionPair;\n\n        this._ngZone.run(() => this._positionArrow(pair));\n\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        }\n      }\n    });\n\n    this._overlayRef = this._overlay.create({\n      direction: this._dir,\n      positionStrategy: strategy,\n      panelClass: NX_TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy(),\n      disposeOnNavigation: true\n    });\n\n    this._updatePosition();\n\n    this._overlayRef.detachments()\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => this._detach());\n\n    return this._overlayRef;\n  }\n\n  /** Detaches the currently-attached tooltip. */\n  private _detach() {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /** Updates the position of the current tooltip. */\n  private _updatePosition() {\n    const position =\n        this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    position.withPositions([\n      {\n        ...origin,\n        ...overlay\n      },\n      ...fallbacks\n    ]);\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. `'left' -> 'right'`).\n   */\n  _getOrigin(): OriginConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let originPosition: OriginConnectionPosition;\n\n    if (position === 'top' || position === 'bottom') {\n      originPosition = {\n        originX: 'center',\n        originY: position\n      };\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      originPosition = {originX: 'start', originY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      originPosition = {originX: 'end', originY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return originPosition;\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    const isLtr = !this._dir || this._dir.value === 'ltr';\n    const position = this.position;\n    let overlayPosition: OverlayConnectionPosition;\n\n    if (position === 'top') {\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (position === 'bottom') {\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\n    } else if (\n      (position === 'left' && isLtr) ||\n      (position === 'right' && !isLtr)) {\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\n    } else if (\n      (position === 'right' && isLtr) ||\n      (position === 'left' && !isLtr)) {\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getNxTooltipInvalidPositionError(position);\n    }\n\n    return overlayPosition;\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\n        take(1),\n        takeUntil(this._destroyed)\n      ).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef.updatePosition();\n        }\n      });\n    }\n  }\n\n  private _positionArrow(pair: ConnectionPositionPair) {\n    const parentElementPositionX = this._elementRef.nativeElement.getBoundingClientRect().left;\n    const parentElementWidth = this._elementRef.nativeElement.getBoundingClientRect().width / 2;\n    const overlayElementLeftOffset = this._overlayRef\n      .overlayElement\n      .getBoundingClientRect()\n      .left;\n\n    // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n    const targetPosition = (parentElementPositionX + parentElementWidth) - (overlayElementLeftOffset);\n\n    if (pair.originX === pair.overlayX) {\n      const direction = 'left';\n      const arrowStyle = {};\n\n      arrowStyle[direction] = targetPosition + 'px';\n      this._tooltipInstance.arrowStyle = arrowStyle;\n    }\n\n    if (pair.originX === 'end' && pair.overlayX === 'start') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'right';\n    } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'bottom';\n    } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n      this._tooltipInstance.arrowStyle = {\n        top: '50%',\n      };\n      this._tooltipInstance.position = 'left';\n    } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n      this._tooltipInstance.arrowStyle = {\n        left: targetPosition + 'px',\n      };\n      this._tooltipInstance.position = 'top';\n    }\n  }\n}\n","import {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport { NxTooltipComponent } from './tooltip.component';\nimport { NxTooltipDirective } from './tooltip.directive';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    OverlayModule\n  ],\n  exports: [NxTooltipDirective, NxTooltipComponent],\n  declarations: [NxTooltipDirective, NxTooltipComponent],\n  entryComponents: [NxTooltipComponent]\n})\nexport class NxTooltipModule {}\n"]}