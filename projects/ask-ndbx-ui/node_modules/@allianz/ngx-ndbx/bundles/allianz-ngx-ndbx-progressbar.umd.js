(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@allianz/ngx-ndbx/utils')) :
    typeof define === 'function' && define.amd ? define('@allianz/ngx-ndbx/progressbar', ['exports', '@angular/common', '@angular/core', '@allianz/ngx-ndbx/utils'], factory) :
    (global = global || self, factory((global.allianz = global.allianz || {}, global.allianz['ngx-ndbx'] = global.allianz['ngx-ndbx'] || {}, global.allianz['ngx-ndbx'].progressbar = {}), global.ng.common, global.ng.core, global.allianz['ngx-ndbx'].utils));
}(this, (function (exports, common, core, utils) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: progressbar.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var progressbarId = 0;
    var NxProgressbarComponent = /** @class */ (function () {
        function NxProgressbarComponent() {
            /**
             * \@docs-private
             */
            this.progressbarId = "nx-progress-bar-" + progressbarId++;
            this._value = 0;
        }
        Object.defineProperty(NxProgressbarComponent.prototype, "value", {
            /** Sets the value of the progress bar. Defaults to zero. Mirrored to aria-value now. */
            get: /**
             * Sets the value of the progress bar. Defaults to zero. Mirrored to aria-value now.
             * @return {?}
             */
            function () { return this._value; },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) { this._value = utils.clamp(value || 0); },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NxProgressbarComponent.prototype._primaryTransform = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var scale = this.value;
            return { transform: "scaleX(" + scale + ")" };
        };
        NxProgressbarComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nx-progressbar',
                        template: "<div class=\"nx-progress__track\">\n  <div class=\"nx-progress__indicator\" [ngStyle]=\"_primaryTransform()\"></div>\n</div>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        host: {
                            '[attr.aria-valuenow]': 'value'
                        },
                        styles: [":host{display:block;height:4px;overflow:hidden;position:relative;width:100%}.nx-progress__track{background-color:#ececec;background-color:var(--progressbar-background-color,#ececec);height:100%}.nx-progress__indicator{transform-origin:top left;height:100%;position:absolute;width:100%}.nx-progress__indicator::after{height:100%;position:absolute;width:100%;-webkit-animation:none;animation:none;content:'';display:inline-block;left:0;background-color:#007ab3;background-color:var(--progressbar-indicator-color,#007ab3)}@media screen and (-ms-high-contrast:active){:host{height:8px}.nx-progress__track{border:1px solid windowFrame;border-radius:2px}.nx-progress__indicator{border-right:1px solid windowFrame}.nx-progress__indicator::after{background:highlight}}"]
                    }] }
        ];
        NxProgressbarComponent.propDecorators = {
            value: [{ type: core.Input }]
        };
        return NxProgressbarComponent;
    }());
    if (false) {
        /**
         * \@docs-private
         * @type {?}
         */
        NxProgressbarComponent.prototype.progressbarId;
        /**
         * @type {?}
         * @private
         */
        NxProgressbarComponent.prototype._value;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: progressbar.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NxProgressbarModule = /** @class */ (function () {
        function NxProgressbarModule() {
        }
        NxProgressbarModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        exports: [NxProgressbarComponent],
                        declarations: [NxProgressbarComponent],
                        providers: [],
                    },] }
        ];
        return NxProgressbarModule;
    }());

    exports.NxProgressbarComponent = NxProgressbarComponent;
    exports.NxProgressbarModule = NxProgressbarModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=allianz-ngx-ndbx-progressbar.umd.js.map
