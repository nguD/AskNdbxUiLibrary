import { Subject } from 'rxjs';
import { UniqueSelectionDispatcher } from '@angular/cdk/collections';
import { ChangeDetectorRef, Renderer2, OnDestroy } from '@angular/core';
import { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';
import { NxRadioToggleComponent } from './radio-toggle.component';
/** @docs-private */
export declare class NxRadioToggleButtonChange {
    source: NxRadioToggleButtonComponent;
    value: any;
    constructor(source: NxRadioToggleButtonComponent, value: any);
}
export declare class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent implements OnDestroy {
    private radioToggle;
    private _changeDetectorRef;
    private _toggleDispatcher;
    /** @docs-private */
    readonly onChecked: Subject<NxRadioToggleButtonChange>;
    private _destroyed;
    private _disabled;
    private _selected;
    /** @docs-private */
    disabled: boolean;
    /** Sets the checked state and notify siblings and the parent group about the change */
    selected: boolean;
    /** Unregister function for _expansionDispatcher. */
    private _removeUniqueSelectionListener;
    constructor(radioToggle: NxRadioToggleComponent, 
    /** @docs-private */
    renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef, _toggleDispatcher: UniqueSelectionDispatcher);
    ngOnDestroy(): void;
    /** @docs-private */
    readonly toggleId: string;
    /** @docs-private */
    readonly id: string;
    private _notifySiblings;
    private _emitCheckedEvent;
    /** @docs-private */
    select(): void;
    /** @docs-private */
    onKeyupSpace(): void;
    /** @docs-private */
    _controlInvalid(): boolean;
}
