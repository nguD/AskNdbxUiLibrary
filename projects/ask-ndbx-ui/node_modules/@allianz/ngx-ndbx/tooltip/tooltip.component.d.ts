import { AnimationEvent } from '@angular/animations';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { TooltipPosition } from './tooltip.directive';
declare type TooltipVisibility = 'initial' | 'visible' | 'hidden';
/**
 * Internal component that wraps the tooltip's content.
 * @docs-private
 */
export declare class NxTooltipComponent implements OnDestroy {
    private _changeDetectorRef;
    elementRef: ElementRef;
    /** The timeout ID of any current timer set to show the tooltip */
    private _showTimeoutId;
    /** The timeout ID of any current timer set to hide the tooltip */
    private _hideTimeoutId;
    /** Message to display in the tooltip */
    private _message;
    message: string;
    private _visibility;
    /** Property watched by the animation framework to show or hide the tooltip */
    readonly visibility: TooltipVisibility;
    private _position;
    /* @docs-private */
    position: TooltipPosition;
    _arrowStyle: {
        [key: string]: string;
    };
    /* @docs-private */
    arrowStyle: any;
    readonly arrowClass: string;
    /** Whether interactions on the page should close the tooltip */
    private _closeOnInteraction;
    /** Subject for notifying that the tooltip has been hidden from the view */
    private readonly _onHide;
    constructor(_changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef);
    /**
     * Shows the tooltip with an aninxion originating from the provided origin
     * @param delay Amount of milliseconds to the delay showing the tooltip.
     */
    show(delay: number): void;
    /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param delay Amount of milliseconds to delay showing the tooltip.
     */
    hide(delay: number): void;
    /** Returns an observable that notifies when the tooltip has been hidden from view. */
    afterHidden(): Observable<void>;
    /** Whether the tooltip is being displayed. */
    isVisible(): boolean;
    /** Whether the tooltip started a delay to be shown/hidden */
    isDelayed(): boolean;
    ngOnDestroy(): void;
    _animationStart(): void;
    _animationDone(event: AnimationEvent): void;
    /**
     * Interactions on the HTML body should close the tooltip immediately.
     */
    _handleBodyInteraction(): void;
}
export {};
