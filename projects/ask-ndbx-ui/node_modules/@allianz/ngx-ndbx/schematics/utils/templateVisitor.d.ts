import * as ts from 'typescript';
import { LoggerApi } from '@angular-devkit/core/src/logger';
export interface ResolvedTemplate {
    /** Class declaration that contains this template. */
    container: ts.ClassDeclaration;
    /** File content of the given template. */
    content: string;
    /** Start offset of the template content (e.g. in the inline source file) */
    start: number;
    /** Width */
    width: number;
    /** Whether the given template is inline or not. */
    inline: boolean;
    /** Path to the file that contains this template. */
    filePath: string;
    /**
     * Gets the character and line of a given position index in the template.
     * If the template is declared inline within a TypeScript source file, the line and
     * character are based on the full source file content.
     */
    getCharacterAndLineOfPosition: (pos: number) => {
        character: number;
        line: number;
    };
}
export declare class TemplateVisitor {
    typeChecker: ts.TypeChecker;
    logger: LoggerApi;
    resolvedTemplates: ResolvedTemplate[];
    constructor(typeChecker: ts.TypeChecker, logger: LoggerApi);
    visitNode(node: ts.Node): void;
    private _visitClassDeclaration;
}
