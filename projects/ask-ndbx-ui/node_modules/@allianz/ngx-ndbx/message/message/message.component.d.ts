import { ChangeDetectorRef, EventEmitter } from '@angular/core';
/** The contextual type of a message. */
export declare type CONTEXT = 'regular' | 'info' | 'error' | 'success' | 'warning';
export declare class NxMessageComponent {
    private _changeDetectorRef;
    private _context;
    /**
     * Sets the context of the message.
     * The message box will color accordingly. Default: 'regular' */
    context: CONTEXT;
    private _showIcon;
    /**
     * Whether an icon that belongs to the context of the message should be displayed.
     *
     * **Important:** The `showIcon` attribute should always be set to `true` due to deprecation.
     *
     * @deprecated The `showIcon` attribute should be always true in future. Messages without an icon are deprecated.
     * @deletion-target 9.0.0
     * */
    showIcon: boolean;
    private _closable;
    /** Whether a message should have a close icon in order to be dismissed. */
    closable: boolean;
    private _icon;
    /** @docs-private */
    readonly icon: string;
    private _closeButtonLabel;
    /** Sets the label of the close button of the message. */
    closeButtonLabel: string;
    /** Event emitted when the close icon of the message has been clicked. */
    closeEvent: EventEmitter<void>;
    constructor(_changeDetectorRef: ChangeDetectorRef);
    /** @docs-private */
    _emitCloseEvent(): void;
    /** @docs-private */
    getIconName(): string;
}
