import { EventEmitter, QueryList, AfterViewInit, ChangeDetectorRef, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ToggleButton } from '../circle-toggle/toggle-button';
export declare class NxCircleToggleGroupComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {
    private _changeDetectorRef;
    private _buttons;
    private _id;
    /**
     * Id of the circle toggle group.
     *
     * If not set, the circle toggle group gets an incremented value by default.
     */
    id: string;
    private _destroyed;
    /** An event emitted when the selection changes. Outputs the value of the currently selected button. */
    valueChange: EventEmitter<any>;
    private _name;
    /** Name that is used for accessibility. */
    name: string;
    private _disabled;
    /** Whether the circle toggle group is disabled. */
    disabled: boolean;
    _negative: boolean;
    /** Whether the circle toggle group uses the negative styling. */
    negative: boolean;
    private _value;
    /** The value of the selected circle toggle in the circle toggle group. */
    value: string;
    private _responsive;
    /** Whether the circle toggle group has a responsive behavior. */
    responsive: boolean;
    private onChangeCallback;
    private onTouchedCallback;
    constructor(_changeDetectorRef: ChangeDetectorRef);
    writeValue(value: any): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    /** @docs-private */
    subscribeToSelectionChanges(): void;
    /**
     * @docs-private
     * inform the selected button if the group selection is set programattically at the beginning
     */
    notifySelectedChild(newValue: string): void;
    /** @docs-private */
    updateToggleButtonsNames(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    /** @docs-private */
    readonly selectedButton: ToggleButton;
    /** @docs-private */
    readonly buttons: QueryList<ToggleButton>;
}
