import { ElementRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { Observable } from 'rxjs';
/** @docs-private */
export declare abstract class NxFormfieldControl<T> {
    value: T | null;
    readonly stateChanges: Observable<void>;
    readonly empty: boolean;
    readonly id: string;
    readonly ngControl: NgControl | null;
    readonly focused: boolean;
    readonly required: boolean;
    readonly disabled: boolean;
    readonly readonly: boolean;
    readonly shouldLabelFloat?: boolean;
    readonly errorState: boolean;
    /** The placeholder for this control. */
    readonly placeholder: string;
    /**
   * An optional name for the control type that can be used to distinguish `nx-formfield` elements
   * based on their control type. The form field will add a class,
   * `nx-formfield--type-{{controlType}}` to its root element.
   */
    readonly controlType?: string;
    abstract setDescribedByIds(ids: string[]): void;
    abstract setAriaLabel?(value: string): void;
    abstract readonly elementRef: ElementRef;
}
