import { CdkStepper, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';
import { ChangeDetectorRef, DoCheck } from '@angular/core';
import { NxProgressStepperDirective } from './progress-stepper.component';
export declare class NxStepperNextDirective extends CdkStepperNext implements DoCheck {
    private changeDetectorRef;
    /** @docs-private */
    disabled: boolean;
    constructor(_stepper: CdkStepper, changeDetectorRef: ChangeDetectorRef);
    /**
     * Implemented to prevent changed after checked error after stepper init.
     * When the stepper initializes the directive is checked first before
     * the stepper can check its content thus it doesn't know about it's children yet
     * so _stepper.hasNext returns false and disables the buttons. In the same CD cycle
     * after the stepper has checked its contents the button needs to be enabled resulting
     * in the error.
     */
    ngDoCheck(): void;
}
export declare class NxStepperPreviousDirective extends CdkStepperPrevious {
    constructor(_stepper: CdkStepper);
    readonly stepper: NxProgressStepperDirective;
}
