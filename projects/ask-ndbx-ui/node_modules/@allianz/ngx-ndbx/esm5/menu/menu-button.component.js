/**
 * @fileoverview added by tsickle
 * Generated from: menu-button.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Directive } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * \@title MenuButton
 */
var NxMenuButtonComponent = /** @class */ (function () {
    function NxMenuButtonComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._expandable = false;
        this._expanded = false;
        this._type = 'root';
    }
    Object.defineProperty(NxMenuButtonComponent.prototype, "expandable", {
        get: /**
         * @return {?}
         */
        function () {
            return this._expandable;
        },
        /** Whether this menu button is expandable or not. Will add a caret icon. */
        set: /**
         * Whether this menu button is expandable or not. Will add a caret icon.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._expandable = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxMenuButtonComponent.prototype, "expanded", {
        get: /**
         * @return {?}
         */
        function () {
            return this._expanded;
        },
        /**
         * Whether this menu button is expanded or not.
         * Only works in combination with the `expandable` option set to `true`.
         */
        set: /**
         * Whether this menu button is expanded or not.
         * Only works in combination with the `expandable` option set to `true`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._expanded = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxMenuButtonComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /**
         * The type of this menu button.
         * Can be `primary` or `secondary`, defaults to `primary`.
         */
        set: /**
         * The type of this menu button.
         * Can be `primary` or `secondary`, defaults to `primary`.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value === 'root' || value === 'nested') {
                this._type = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    NxMenuButtonComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[nxMenuButton]',
                    template: "<ng-content select=\"[nxMenuButtonIcon]\"></ng-content>\n<span class=\"nx-menu-button__label\">\n  <ng-content></ng-content>\n</span>\n<nx-icon *ngIf=\"expandable\" class=\"nx-menu-button__expand-icon\" name=\"chevron-down\"></nx-icon>\n",
                    host: {
                        '[class.is-expanded]': 'expandable && expanded',
                        '[class.is-expandable]': 'expandable',
                        '[class.nx-menu-button--nested]': 'type === "nested"',
                        '[class.nx-menu-button--root]': 'type === "root"',
                        'class': 'nx-menu-button'
                    },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{display:flex;align-items:center;background:#fff;background:var(--menu-button-background-color,#fff);color:#414141;color:var(--menu-button-text-color,#414141);-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-weight:400;font-size:18px;width:100%;text-decoration:none;padding:24px}:host:hover{background:#ececec;background:var(--menu-button-hover-background-color,#ececec)}:host.is-expanded{font-weight:700;background:#007ab3;background:var(--menu-button-expanded-background-color,#007ab3);color:#fff;color:var(--menu-button-expanded-text-color,#fff);border-color:#007ab3;border-color:var(--menu-button-expanded-border-color,#007ab3)}:host.is-expanded .nx-menu-button__expand-icon{transform:rotateZ(180deg)}:host.nx-menu-button--nested{background:#f5f5f5;background:var(--menu-button-nested-background-color,#f5f5f5)}:host.nx-menu-button--nested.is-expanded{background:#c1ebfb;background:var(--menu-button-nested-expanded-background-color,#c1ebfb);border-color:#c1ebfb;border-color:var(--menu-button-nested-expanded-border-color,#c1ebfb);color:#414141;color:var(--menu-button-nested-expanded-color,#414141)}:host::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff;box-shadow:var(--focus-inset-box-shadow,inset 0 0 0 4px #009de6,inset 0 0 0 6px #fff);border-radius:8px;border:none}.nx-menu-button__expand-icon{display:flex;justify-content:center;transition:.2s;transform:rotateZ(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:24px}.nx-menu-button__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 auto;text-align:left;line-height:1;padding:4px 0}::ng-deep .nx-menu-button__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]):focus{box-shadow:inset 0 0 0 4px windowText,inset 0 0 0 6px background}:host,:host.is-expanded,:host.nx-menu-button--nested,:host.nx-menu-button--nested.is-expanded{-ms-high-contrast-adjust:none;color:buttonText;background-color:buttonFace}:host.nx-menu-button--nested.is-expanded:hover,:host:hover{background-color:highlight;color:highlightText;border-bottom-color:windowText}}"]
                }] }
    ];
    /** @nocollapse */
    NxMenuButtonComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxMenuButtonComponent.propDecorators = {
        expandable: [{ type: Input }],
        expanded: [{ type: Input }],
        type: [{ type: Input, args: ['nxType',] }]
    };
    return NxMenuButtonComponent;
}());
export { NxMenuButtonComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._expandable;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._expanded;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._type;
    /**
     * @type {?}
     * @private
     */
    NxMenuButtonComponent.prototype._changeDetectorRef;
}
/**
 * Icon that can be added to a [nxButton].
 */
var NxMenuButtonIconDirective = /** @class */ (function () {
    function NxMenuButtonIconDirective() {
    }
    NxMenuButtonIconDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[nxMenuButtonIcon]',
                    host: {
                        class: 'nx-menu-button__icon'
                    }
                },] }
    ];
    return NxMenuButtonIconDirective;
}());
export { NxMenuButtonIconDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvbWVudS8iLCJzb3VyY2VzIjpbIm1lbnUtYnV0dG9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFhLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUscUJBQXFCLEVBQXdCLE1BQU0sdUJBQXVCLENBQUM7Ozs7QUFPcEY7SUF3REUsK0JBQW9CLGtCQUFxQztRQUFyQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO1FBaENqRCxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQWM3QixjQUFTLEdBQVksS0FBSyxDQUFDO1FBZ0IzQixVQUFLLEdBQXFCLE1BQU0sQ0FBQztJQUVtQixDQUFDO0lBeEM3RCxzQkFDSSw2Q0FBVTs7OztRQUlkO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7UUFSRCw0RUFBNEU7Ozs7OztRQUM1RSxVQUNlLEtBQWM7WUFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNoRCxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFVRCxzQkFDSSwyQ0FBUTs7OztRQUlaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7UUFYRDs7O1dBR0c7Ozs7Ozs7UUFDSCxVQUNhLEtBQWM7WUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFVRCxzQkFDSSx1Q0FBSTs7OztRQU1SO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFiRDs7O1dBR0c7Ozs7Ozs7UUFDSCxVQUNTLEtBQXVCO1lBQzlCLElBQUksS0FBSyxLQUFLLE1BQU0sSUFBSSxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUMxQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDbkIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQzs7O09BQUE7O2dCQWxERixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLHlQQUF5QztvQkFFekMsSUFBSSxFQUFFO3dCQUNKLHFCQUFxQixFQUFFLHdCQUF3Qjt3QkFDL0MsdUJBQXVCLEVBQUUsWUFBWTt3QkFDckMsZ0NBQWdDLEVBQUUsbUJBQW1CO3dCQUNyRCw4QkFBOEIsRUFBRSxpQkFBaUI7d0JBQ2pELE9BQU8sRUFBRSxnQkFBZ0I7cUJBQzFCO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFDaEQ7Ozs7Z0JBckJtRCxpQkFBaUI7Ozs2QkF3QmxFLEtBQUs7MkJBY0wsS0FBSzt1QkFjTCxLQUFLLFNBQUMsUUFBUTs7SUFhakIsNEJBQUM7Q0FBQSxBQXpERCxJQXlEQztTQTNDWSxxQkFBcUI7Ozs7OztJQVVoQyw0Q0FBcUM7Ozs7O0lBY3JDLDBDQUFtQzs7Ozs7SUFnQm5DLHNDQUF5Qzs7Ozs7SUFFN0IsbURBQTZDOzs7OztBQU0zRDtJQUFBO0lBTXdDLENBQUM7O2dCQU54QyxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsSUFBSSxFQUFFO3dCQUNKLEtBQUssRUFBRSxzQkFBc0I7cUJBQzlCO2lCQUNGOztJQUN1QyxnQ0FBQztDQUFBLEFBTnpDLElBTXlDO1NBQTVCLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgQXR0cmlidXRlLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSwgY29lcmNlTnVtYmVyUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuXG5leHBvcnQgdHlwZSBOeE1lbnVCdXR0b25UeXBlID0gJ3Jvb3QnIHwgJ25lc3RlZCc7XG5cbi8qKlxuICogQHRpdGxlIE1lbnVCdXR0b25cbiAqL1xuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdbbnhNZW51QnV0dG9uXScsXG4gIHRlbXBsYXRlVXJsOiAnbWVudS1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnbWVudS1idXR0b24uY29tcG9uZW50LnNjc3MnXSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MuaXMtZXhwYW5kZWRdJzogJ2V4cGFuZGFibGUgJiYgZXhwYW5kZWQnLFxuICAgICdbY2xhc3MuaXMtZXhwYW5kYWJsZV0nOiAnZXhwYW5kYWJsZScsXG4gICAgJ1tjbGFzcy5ueC1tZW51LWJ1dHRvbi0tbmVzdGVkXSc6ICd0eXBlID09PSBcIm5lc3RlZFwiJyxcbiAgICAnW2NsYXNzLm54LW1lbnUtYnV0dG9uLS1yb290XSc6ICd0eXBlID09PSBcInJvb3RcIicsXG4gICAgJ2NsYXNzJzogJ254LW1lbnUtYnV0dG9uJ1xuICB9LFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTnhNZW51QnV0dG9uQ29tcG9uZW50IHtcbiAgLyoqIFdoZXRoZXIgdGhpcyBtZW51IGJ1dHRvbiBpcyBleHBhbmRhYmxlIG9yIG5vdC4gV2lsbCBhZGQgYSBjYXJldCBpY29uLiAqL1xuICBASW5wdXQoKVxuICBzZXQgZXhwYW5kYWJsZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2V4cGFuZGFibGUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9XG4gIGdldCBleHBhbmRhYmxlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9leHBhbmRhYmxlO1xuICB9XG4gIHByaXZhdGUgX2V4cGFuZGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogV2hldGhlciB0aGlzIG1lbnUgYnV0dG9uIGlzIGV4cGFuZGVkIG9yIG5vdC5cbiAgICogT25seSB3b3JrcyBpbiBjb21iaW5hdGlvbiB3aXRoIHRoZSBgZXhwYW5kYWJsZWAgb3B0aW9uIHNldCB0byBgdHJ1ZWAuXG4gICAqL1xuICBASW5wdXQoKVxuICBzZXQgZXhwYW5kZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9leHBhbmRlZCA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IGV4cGFuZGVkKCkge1xuICAgIHJldHVybiB0aGlzLl9leHBhbmRlZDtcbiAgfVxuICBwcml2YXRlIF9leHBhbmRlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBUaGUgdHlwZSBvZiB0aGlzIG1lbnUgYnV0dG9uLlxuICAgKiBDYW4gYmUgYHByaW1hcnlgIG9yIGBzZWNvbmRhcnlgLCBkZWZhdWx0cyB0byBgcHJpbWFyeWAuXG4gICAqL1xuICBASW5wdXQoJ254VHlwZScpXG4gIHNldCB0eXBlKHZhbHVlOiBOeE1lbnVCdXR0b25UeXBlKSB7XG4gICAgaWYgKHZhbHVlID09PSAncm9vdCcgfHwgdmFsdWUgPT09ICduZXN0ZWQnKSB7XG4gICAgICB0aGlzLl90eXBlID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IHR5cGUoKTogTnhNZW51QnV0dG9uVHlwZSB7XG4gICAgcmV0dXJuIHRoaXMuX3R5cGU7XG4gIH1cbiAgcHJpdmF0ZSBfdHlwZTogTnhNZW51QnV0dG9uVHlwZSA9ICdyb290JztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG5cbi8qKlxuICogSWNvbiB0aGF0IGNhbiBiZSBhZGRlZCB0byBhIFtueEJ1dHRvbl0uXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tueE1lbnVCdXR0b25JY29uXScsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ254LW1lbnUtYnV0dG9uX19pY29uJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54TWVudUJ1dHRvbkljb25EaXJlY3RpdmUge31cbiJdfQ==