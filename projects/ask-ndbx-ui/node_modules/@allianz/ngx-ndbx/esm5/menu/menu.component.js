/**
 * @fileoverview added by tsickle
 * Generated from: menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * This components is a collapsible menu for usage on smaller devices.
 * Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].
 */
var NxMenuComponent = /** @class */ (function () {
    function NxMenuComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._open = false;
    }
    Object.defineProperty(NxMenuComponent.prototype, "open", {
        get: /**
         * @return {?}
         */
        function () {
            return this._open;
        },
        /** Whether the menu is open or closed. */
        set: /**
         * Whether the menu is open or closed.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var open = coerceBooleanProperty(value);
            if (open !== this._open) {
                this._open = open;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /* Toggles the open state of the menu. */
    /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    NxMenuComponent.prototype.toggle = /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    function () {
        this.open = !this.open;
    };
    NxMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-menu',
                    template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n  <ng-content></ng-content>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[attr.aria-expanded]': 'open'
                    },
                    styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:#fff;background:var(--menu-background-color,#fff)}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:0}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6);border-radius:4px;outline:0}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{padding:24px;border-bottom:1px solid #d9d9d9;border-bottom:1px solid var(--menu-item-border-color,#d9d9d9)}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}@media screen and (-ms-high-contrast:active){::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{border-bottom-color:windowText}::ng-deep .nx-menu__link{text-decoration:none}}"]
                }] }
    ];
    /** @nocollapse */
    NxMenuComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxMenuComponent.propDecorators = {
        open: [{ type: Input }]
    };
    return NxMenuComponent;
}());
export { NxMenuComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._open;
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9tZW51LyIsInNvdXJjZXMiOlsibWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7QUFNOUQ7SUErQkUseUJBQW9CLGtCQUFxQztRQUFyQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO1FBckJqRCxVQUFLLEdBQVksS0FBSyxDQUFDO0lBcUI2QixDQUFDO0lBbEI3RCxzQkFDSSxpQ0FBSTs7OztRQVFSO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFaRCwwQ0FBMEM7Ozs7OztRQUMxQyxVQUNTLEtBQWM7O2dCQUNmLElBQUksR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUM7WUFDekMsSUFBSSxJQUFJLEtBQUssSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7Z0JBQ2xCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQzthQUN4QztRQUNILENBQUM7OztPQUFBO0lBTUQseUNBQXlDOzs7OztJQUN6QyxnQ0FBTTs7OztJQUFOO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQzs7Z0JBN0JGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsU0FBUztvQkFDbkIsa0dBQXdCO29CQUV4QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsSUFBSSxFQUFFO3dCQUNKLHNCQUFzQixFQUFFLE1BQU07cUJBQy9COztpQkFDRjs7OztnQkFmNEMsaUJBQWlCOzs7dUJBb0IzRCxLQUFLOztJQW1CUixzQkFBQztDQUFBLEFBaENELElBZ0NDO1NBdkJZLGVBQWU7Ozs7OztJQUMxQixnQ0FBK0I7Ozs7O0lBcUJuQiw2Q0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5cbi8qKlxuICBUaGlzIGNvbXBvbmVudHMgaXMgYSBjb2xsYXBzaWJsZSBtZW51IGZvciB1c2FnZSBvbiBzbWFsbGVyIGRldmljZXMuXG4gIENhbiBjb250YWluIGFueSBjb250ZW50LCBidXQgdXN1YWxseSBbbnhNZW51TGlua10sIFtueE1lbnVHcm91cF0gYW5kIFtueEFjdGlvbl0uXG4qL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnbWVudS5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ21lbnUuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5hcmlhLWV4cGFuZGVkXSc6ICdvcGVuJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54TWVudUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX29wZW46IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogV2hldGhlciB0aGUgbWVudSBpcyBvcGVuIG9yIGNsb3NlZC4gKi9cbiAgQElucHV0KClcbiAgc2V0IG9wZW4odmFsdWU6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBvcGVuID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICBpZiAob3BlbiAhPT0gdGhpcy5fb3Blbikge1xuICAgICAgdGhpcy5fb3BlbiA9IG9wZW47XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cblxuICBnZXQgb3BlbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fb3BlbjtcbiAgfVxuXG4gIC8qIFRvZ2dsZXMgdGhlIG9wZW4gc3RhdGUgb2YgdGhlIG1lbnUuICovXG4gIHRvZ2dsZSgpIHtcbiAgICB0aGlzLm9wZW4gPSAhdGhpcy5vcGVuO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7fVxufVxuIl19