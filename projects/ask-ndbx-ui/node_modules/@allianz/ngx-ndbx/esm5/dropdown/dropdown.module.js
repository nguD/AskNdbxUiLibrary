/**
 * @fileoverview added by tsickle
 * Generated from: dropdown/dropdown.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxFormfieldModule } from '@allianz/ngx-ndbx/formfield';
import { NxIconModule } from '@allianz/ngx-ndbx/icon';
import { A11yModule } from '@angular/cdk/a11y';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxCheckboxModule } from '@allianz/ngx-ndbx/checkbox';
import { NxDropdownComponent } from './dropdown';
import { NxDropdownGroupComponent } from './group/dropdown-group';
import { NxDropdownItemComponent } from './item/dropdown-item';
import { ObserversModule } from '@angular/cdk/observers';
import { NxDropdownClosedLabelDirective } from './closed-label.directive';
var NxDropdownModule = /** @class */ (function () {
    function NxDropdownModule() {
    }
    NxDropdownModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        NxFormfieldModule,
                        NxCheckboxModule,
                        OverlayModule,
                        A11yModule,
                        NxIconModule,
                        ObserversModule
                    ],
                    declarations: [
                        NxDropdownComponent,
                        NxDropdownItemComponent,
                        NxDropdownGroupComponent,
                        NxDropdownClosedLabelDirective
                    ],
                    exports: [
                        NxDropdownComponent,
                        NxDropdownItemComponent,
                        NxDropdownGroupComponent,
                        NxDropdownClosedLabelDirective
                    ]
                },] }
    ];
    return NxDropdownModule;
}());
export { NxDropdownModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvIiwic291cmNlcyI6WyJkcm9wZG93bi9kcm9wZG93bi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDakQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTFFO0lBQUE7SUF5QkEsQ0FBQzs7Z0JBekJBLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixpQkFBaUI7d0JBQ2pCLGdCQUFnQjt3QkFDaEIsYUFBYTt3QkFDYixVQUFVO3dCQUNWLFlBQVk7d0JBQ1osZUFBZTtxQkFDaEI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNaLG1CQUFtQjt3QkFDbkIsdUJBQXVCO3dCQUN2Qix3QkFBd0I7d0JBQ3hCLDhCQUE4QjtxQkFDL0I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLG1CQUFtQjt3QkFDbkIsdUJBQXVCO3dCQUN2Qix3QkFBd0I7d0JBQ3hCLDhCQUE4QjtxQkFDL0I7aUJBQ0Y7O0lBR0QsdUJBQUM7Q0FBQSxBQXpCRCxJQXlCQztTQUZZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE54Rm9ybWZpZWxkTW9kdWxlIH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvZm9ybWZpZWxkJztcbmltcG9ydCB7IE54SWNvbk1vZHVsZSB9IGZyb20gJ0BhbGxpYW56L25neC1uZGJ4L2ljb24nO1xuaW1wb3J0IHsgQTExeU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcbmltcG9ydCB7IE92ZXJsYXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTnhDaGVja2JveE1vZHVsZSB9IGZyb20gJ0BhbGxpYW56L25neC1uZGJ4L2NoZWNrYm94JztcbmltcG9ydCB7IE54RHJvcGRvd25Db21wb25lbnQgfSBmcm9tICcuL2Ryb3Bkb3duJztcbmltcG9ydCB7IE54RHJvcGRvd25Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAvZHJvcGRvd24tZ3JvdXAnO1xuaW1wb3J0IHsgTnhEcm9wZG93bkl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2l0ZW0vZHJvcGRvd24taXRlbSc7XG5pbXBvcnQgeyBPYnNlcnZlcnNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvb2JzZXJ2ZXJzJztcbmltcG9ydCB7IE54RHJvcGRvd25DbG9zZWRMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4vY2xvc2VkLWxhYmVsLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgTnhGb3JtZmllbGRNb2R1bGUsXG4gICAgTnhDaGVja2JveE1vZHVsZSxcbiAgICBPdmVybGF5TW9kdWxlLFxuICAgIEExMXlNb2R1bGUsXG4gICAgTnhJY29uTW9kdWxlLFxuICAgIE9ic2VydmVyc01vZHVsZVxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBOeERyb3Bkb3duQ29tcG9uZW50LFxuICAgIE54RHJvcGRvd25JdGVtQ29tcG9uZW50LFxuICAgIE54RHJvcGRvd25Hcm91cENvbXBvbmVudCxcbiAgICBOeERyb3Bkb3duQ2xvc2VkTGFiZWxEaXJlY3RpdmVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE54RHJvcGRvd25Db21wb25lbnQsXG4gICAgTnhEcm9wZG93bkl0ZW1Db21wb25lbnQsXG4gICAgTnhEcm9wZG93bkdyb3VwQ29tcG9uZW50LFxuICAgIE54RHJvcGRvd25DbG9zZWRMYWJlbERpcmVjdGl2ZVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE54RHJvcGRvd25Nb2R1bGUge1xuXG59XG4iXX0=