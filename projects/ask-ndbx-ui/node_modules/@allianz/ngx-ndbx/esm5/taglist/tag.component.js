/**
 * @fileoverview added by tsickle
 * Generated from: taglist/tag.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { DELETE, BACKSPACE, ENTER } from '@angular/cdk/keycodes';
var NxTagComponent = /** @class */ (function () {
    function NxTagComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._tabindex = -1;
        /**
         * An event is dispatched each time when the tag is clicked.
         */
        this.clicked = new EventEmitter();
        /**
         * An event is dispatched each time when the tag is removed.
         */
        this.removed = new EventEmitter();
    }
    Object.defineProperty(NxTagComponent.prototype, "removable", {
        get: /**
         * @return {?}
         */
        function () {
            return this._removable;
        },
        /** Whether the tag is removeable. */
        set: /**
         * Whether the tag is removeable.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._removable = coerceBooleanProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTagComponent.prototype, "tabindex", {
        get: /**
         * @return {?}
         */
        function () {
            return this.removable ? 0 : this._tabindex;
        },
        /**
         * Sets the tab-index of a tag. Default value: -1.
         *
         * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.
         */
        set: /**
         * Sets the tab-index of a tag. Default value: -1.
         *
         * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._tabindex = coerceNumberProperty(value);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxTagComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        /** Sets the value of the tag. */
        set: /**
         * Sets the value of the tag.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._value !== value) {
                this._value = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    /** @docs-private */
    // Emit the removed event that the parent can remove the value
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    // Emit the removed event that the parent can remove the value
    NxTagComponent.prototype.removeClickHandler = /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    // Emit the removed event that the parent can remove the value
    function (event) {
        event.stopPropagation();
        this.removed.emit(this.value);
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    NxTagComponent.prototype.removeKeyHandler = /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {
            event.preventDefault();
            event.stopPropagation();
            this.removed.emit(this.value);
        }
        if (event.keyCode === ENTER) {
            this.clicked.emit(this.value);
        }
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @return {?}
     */
    NxTagComponent.prototype.tagClickHandler = /**
     * \@docs-private
     * @return {?}
     */
    function () {
        this.clicked.emit(this.value);
    };
    NxTagComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-tag',
                    template: "{{ value }}\n<span role=\"link\" aria-label=\"close\" class=\"nx-tag__close\" *ngIf=\"removable\"\n    (click)=\"removeClickHandler($event)\">\n    <nx-icon class=\"nx-tag__close-icon\" name=\"close\"></nx-icon>\n</span>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '(click)': 'tagClickHandler()',
                        '(keydown)': 'removeKeyHandler($event)',
                        '[attr.tabindex]': 'tabindex'
                    },
                    styles: [":host{font-size:14px;font-size:var(--taglist-font-size,14px);line-height:16px;line-height:var(--taglist-line-height,16px);font-weight:600;font-weight:var(--taglist-font-weight,600);letter-spacing:1px;letter-spacing:var(--taglist-letter-spacing,1px);height:auto;max-width:100%;color:#767676;color:var(--taglist-color,#767676);background-color:transparent;background-color:var(--taglist-background-color,transparent);padding:6px 14px;display:flex;align-items:center;border:2px solid #d9d9d9;border:2px solid var(--taglist-border-color,#d9d9d9);border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:background-color .2s,box-shadow .2s;cursor:pointer}:host:hover{border-color:#c2c2c2;border-color:var(--taglist-hover-border-color,#c2c2c2);color:#5b5b5b;color:var(--taglist-hover-color,#5b5b5b);background-color:#ececec;background-color:var(--taglist-hover-background-color,#ececec)}:host:focus{outline:transparent solid 2px}:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6)}.nx-tag__close-icon{outline:0;display:block;font-size:16px;font-size:var(--taglist-close-icon-size,16px)}.nx-tag__close{margin-left:8px}:host-context(.nx-taglist--keyword){padding:14px 22px}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}:host,:host:focus,:host:hover{color:buttonText;background-color:buttonFace;border-color:buttonText;-ms-high-contrast-adjust:none}}"]
                }] }
    ];
    /** @nocollapse */
    NxTagComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxTagComponent.propDecorators = {
        removable: [{ type: Input }],
        tabindex: [{ type: Input }],
        value: [{ type: Input }],
        clicked: [{ type: Output }],
        removed: [{ type: Output }]
    };
    return NxTagComponent;
}());
export { NxTagComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._removable;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._tabindex;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._value;
    /**
     * An event is dispatched each time when the tag is clicked.
     * @type {?}
     */
    NxTagComponent.prototype.clicked;
    /**
     * An event is dispatched each time when the tag is removed.
     * @type {?}
     */
    NxTagComponent.prototype.removed;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsidGFnbGlzdC90YWcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHFCQUFxQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVqRTtJQXlERSx3QkFDVSxrQkFBcUM7UUFBckMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQWxDdkMsY0FBUyxHQUFXLENBQUMsQ0FBQyxDQUFDOzs7O1FBNkJaLFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQzs7OztRQUVyRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFHckIsQ0FBQztJQTNDcEQsc0JBQ0kscUNBQVM7Ozs7UUFJYjtZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QixDQUFDO1FBUkQscUNBQXFDOzs7Ozs7UUFDckMsVUFDYyxLQUFjO1lBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDL0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3pDLENBQUM7OztPQUFBO0lBV0Qsc0JBQ0ksb0NBQVE7Ozs7UUFJWjtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQzdDLENBQUM7UUFaRDs7OztXQUlHOzs7Ozs7OztRQUNILFVBQ2EsS0FBYTtZQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN6QyxDQUFDOzs7T0FBQTtJQU9ELHNCQUNJLGlDQUFLOzs7O1FBTVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQztRQVZELGlDQUFpQzs7Ozs7O1FBQ2pDLFVBQ1UsS0FBYTtZQUNyQixJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssS0FBSyxFQUFFO2dCQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztnQkFDcEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ3hDO1FBQ0gsQ0FBQzs7O09BQUE7SUFhRCxvQkFBb0I7SUFDcEIsOERBQThEOzs7Ozs7O0lBQzlELDJDQUFrQjs7Ozs7O0lBQWxCLFVBQW1CLEtBQWlCO1FBQ2xDLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELG9CQUFvQjs7Ozs7O0lBQ3BCLHlDQUFnQjs7Ozs7SUFBaEIsVUFBaUIsS0FBb0I7UUFDbkMsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sS0FBSyxNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsRUFBRTtZQUMvRSxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMvQjtRQUVELElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxLQUFLLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQy9CO0lBQ0gsQ0FBQztJQUVELG9CQUFvQjs7Ozs7SUFDcEIsd0NBQWU7Ozs7SUFBZjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDOztnQkFuRkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxRQUFRO29CQUNsQix3T0FBaUM7b0JBQ2pDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUUvQyxJQUFJLEVBQUU7d0JBQ0osU0FBUyxFQUFFLG1CQUFtQjt3QkFDOUIsV0FBVyxFQUFFLDBCQUEwQjt3QkFDdkMsaUJBQWlCLEVBQUUsVUFBVTtxQkFDOUI7O2lCQUNGOzs7O2dCQWJ5RSxpQkFBaUI7Ozs0QkFrQnhGLEtBQUs7MkJBZUwsS0FBSzt3QkFXTCxLQUFLOzBCQVlMLE1BQU07MEJBRU4sTUFBTTs7SUE2QlQscUJBQUM7Q0FBQSxBQXBGRCxJQW9GQztTQXpFWSxjQUFjOzs7Ozs7SUFDekIsb0NBQTRCOzs7OztJQVk1QixtQ0FBK0I7Ozs7O0lBZS9CLGdDQUF1Qjs7Ozs7SUFjdkIsaUNBQXdFOzs7OztJQUV4RSxpQ0FBd0U7Ozs7O0lBR3RFLDRDQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSwgY29lcmNlTnVtYmVyUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgREVMRVRFLCBCQUNLU1BBQ0UsIEVOVEVSIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2tleWNvZGVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtdGFnJyxcbiAgdGVtcGxhdGVVcmw6ICd0YWcuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJ3RhZy5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJyhjbGljayknOiAndGFnQ2xpY2tIYW5kbGVyKCknLFxuICAgICcoa2V5ZG93biknOiAncmVtb3ZlS2V5SGFuZGxlcigkZXZlbnQpJyxcbiAgICAnW2F0dHIudGFiaW5kZXhdJzogJ3RhYmluZGV4J1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54VGFnQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfcmVtb3ZhYmxlOiBib29sZWFuO1xuXG4gIC8qKiBXaGV0aGVyIHRoZSB0YWcgaXMgcmVtb3ZlYWJsZS4gKi9cbiAgQElucHV0KClcbiAgc2V0IHJlbW92YWJsZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3JlbW92YWJsZSA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgZ2V0IHJlbW92YWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVtb3ZhYmxlO1xuICB9XG5cbiAgcHJpdmF0ZSBfdGFiaW5kZXg6IG51bWJlciA9IC0xO1xuICAvKipcbiAgICogU2V0cyB0aGUgdGFiLWluZGV4IG9mIGEgdGFnLiBEZWZhdWx0IHZhbHVlOiAtMS5cbiAgICpcbiAgICogSWYgYG54QWxsb3dUYWdEZWxldGlvbmAgb2YgdGhlIHRhZ2xpc3QgaXMgc2V0IHRvIHRydWUsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIDAuXG4gICAqL1xuICBASW5wdXQoKVxuICBzZXQgdGFiaW5kZXgodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3RhYmluZGV4ID0gY29lcmNlTnVtYmVyUHJvcGVydHkodmFsdWUpO1xuICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9XG4gIGdldCB0YWJpbmRleCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnJlbW92YWJsZSA/IDAgOiB0aGlzLl90YWJpbmRleDtcbiAgfVxuXG4gIHByaXZhdGUgX3ZhbHVlOiBzdHJpbmc7XG4gIC8qKiBTZXRzIHRoZSB2YWx1ZSBvZiB0aGUgdGFnLiAqL1xuICBASW5wdXQoKVxuICBzZXQgdmFsdWUodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh0aGlzLl92YWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gIH1cbiAgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgLyoqIEFuIGV2ZW50IGlzIGRpc3BhdGNoZWQgZWFjaCB0aW1lIHdoZW4gdGhlIHRhZyBpcyBjbGlja2VkLiAqL1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgY2xpY2tlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgLyoqIEFuIGV2ZW50IGlzIGRpc3BhdGNoZWQgZWFjaCB0aW1lIHdoZW4gdGhlIHRhZyBpcyByZW1vdmVkLiAqL1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgcmVtb3ZlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIC8vIEVtaXQgdGhlIHJlbW92ZWQgZXZlbnQgdGhhdCB0aGUgcGFyZW50IGNhbiByZW1vdmUgdGhlIHZhbHVlXG4gIHJlbW92ZUNsaWNrSGFuZGxlcihldmVudDogTW91c2VFdmVudCkge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMucmVtb3ZlZC5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgcmVtb3ZlS2V5SGFuZGxlcihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmICh0aGlzLnJlbW92YWJsZSAmJiAoZXZlbnQua2V5Q29kZSA9PT0gREVMRVRFIHx8IGV2ZW50LmtleUNvZGUgPT09IEJBQ0tTUEFDRSkpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIHRoaXMucmVtb3ZlZC5lbWl0KHRoaXMudmFsdWUpO1xuICAgIH1cblxuICAgIGlmIChldmVudC5rZXlDb2RlID09PSBFTlRFUikge1xuICAgICAgdGhpcy5jbGlja2VkLmVtaXQodGhpcy52YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgdGFnQ2xpY2tIYW5kbGVyKCkge1xuICAgIHRoaXMuY2xpY2tlZC5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG59XG4iXX0=