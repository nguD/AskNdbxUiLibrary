/**
 * @fileoverview added by tsickle
 * Generated from: badge.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
var NxBadgeComponent = /** @class */ (function () {
    function NxBadgeComponent(_changeDetRef) {
        this._changeDetRef = _changeDetRef;
        this._vibrant = false;
    }
    Object.defineProperty(NxBadgeComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        /** Sets the class name for the badge element.  */
        set: /**
         * Sets the class name for the badge element.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._type) {
                this._type = value;
                this._changeDetRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxBadgeComponent.prototype, "vibrant", {
        get: /**
         * @return {?}
         */
        function () {
            return this._vibrant;
        },
        /** Change badge style to vibrant. */
        set: /**
         * Change badge style to vibrant.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var newValue = coerceBooleanProperty(value);
            if (value !== this._vibrant) {
                this._vibrant = newValue;
                this._changeDetRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    NxBadgeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-badge',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-badge--active]': 'type === "active"',
                        '[class.nx-badge--positive]': 'type === "positive"',
                        '[class.nx-badge--critical]': 'type === "critical"',
                        '[class.nx-badge--negative]': 'type === "negative"',
                        '[class.nx-badge--vibrant]': 'vibrant'
                    },
                    styles: [":host{font-size:16px;font-size:var(--badge-font-size,16px);line-height:24px;line-height:var(--badge-line-height,24px);font-weight:400;font-weight:var(--badge-font-weight,400);letter-spacing:0;letter-spacing:var(--badge-letter-spacing,0);display:inline-block;padding:0 8px;white-space:nowrap;border-radius:12px;min-width:24px;color:#414141;color:var(--badge-color,#414141);background-color:#d9d9d9;background-color:var(--badge-background-color,#d9d9d9)}@media screen and (-ms-high-contrast:active){:host{border:1px solid windowText}}:host.nx-badge--active{background-color:#cfe9ee;background-color:var(--badge-active-background-color,#cfe9ee);color:#414141;color:var(--badge-active-color,#414141)}:host.nx-badge--positive{background-color:#e3ebaf;background-color:var(--badge-positive-background-color,#e3ebaf);color:#414141;color:var(--badge-positive-color,#414141)}:host.nx-badge--critical{background-color:#f7c7c3;background-color:var(--badge-critical-background-color,#f7c7c3);color:#414141;color:var(--badge-critical-color,#414141)}:host.nx-badge--negative{background-color:#ffe8b0;background-color:var(--badge-negative-background-color,#ffe8b0);color:#414141;color:var(--badge-negative-color,#414141)}:host.nx-badge--vibrant{color:#fff;color:var(--badge-vibrant-color,#fff);background-color:#414141;background-color:var(--badge-vibrant-background-color,#414141)}:host.nx-badge--vibrant.nx-badge--active{background-color:#007ab3;background-color:var(--badge-vibrant-active-background-color,#007ab3);color:#fff;color:var(--badge-vibrant-active-color,#fff)}:host.nx-badge--vibrant.nx-badge--positive{background-color:#1e8927;background-color:var(--badge-vibrant-positive-background-color,#1e8927);color:#fff;color:var(--badge-vibrant-positive-color,#fff)}:host.nx-badge--vibrant.nx-badge--critical{background-color:#dc3149;background-color:var(--badge-vibrant-critical-background-color,#dc3149);color:#fff;color:var(--badge-vibrant-critical-color,#fff)}:host.nx-badge--vibrant.nx-badge--negative{background-color:#efbe25;background-color:var(--badge-vibrant-negative-background-color,#efbe25);color:#414141;color:var(--badge-vibrant-negative-color,#414141)}"]
                }] }
    ];
    /** @nocollapse */
    NxBadgeComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxBadgeComponent.propDecorators = {
        type: [{ type: Input }],
        vibrant: [{ type: Input }]
    };
    return NxBadgeComponent;
}());
export { NxBadgeComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._type;
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._vibrant;
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._changeDetRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvYmFkZ2UvIiwic291cmNlcyI6WyJiYWRnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUk5RDtJQWlCRSwwQkFBb0IsYUFBZ0M7UUFBaEMsa0JBQWEsR0FBYixhQUFhLENBQW1CO1FBRjVDLGFBQVEsR0FBWSxLQUFLLENBQUM7SUFFc0IsQ0FBQztJQUd6RCxzQkFDSSxrQ0FBSTs7OztRQU1SO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7UUFWRCxrREFBa0Q7Ozs7OztRQUNsRCxVQUNTLEtBQWtCO1lBQ3pCLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO2dCQUNuQixJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ25DO1FBQ0gsQ0FBQzs7O09BQUE7SUFLRCxzQkFDSSxxQ0FBTzs7OztRQVFYO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7UUFaRCxxQ0FBcUM7Ozs7OztRQUNyQyxVQUNZLEtBQWM7O2dCQUNsQixRQUFRLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDO1lBRTdDLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxRQUFRLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO2dCQUN6QixJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO2FBQ25DO1FBQ0gsQ0FBQzs7O09BQUE7O2dCQXZDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFVBQVU7b0JBQ3BCLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUUvQyxJQUFJLEVBQUU7d0JBQ0osMEJBQTBCLEVBQUUsbUJBQW1CO3dCQUMvQyw0QkFBNEIsRUFBRSxxQkFBcUI7d0JBQ25ELDRCQUE0QixFQUFFLHFCQUFxQjt3QkFDbkQsNEJBQTRCLEVBQUUscUJBQXFCO3dCQUNuRCwyQkFBMkIsRUFBRSxTQUFTO3FCQUN2Qzs7aUJBQ0Y7Ozs7Z0JBakJtRCxpQkFBaUI7Ozt1QkF5QmxFLEtBQUs7MEJBV0wsS0FBSzs7SUFZUix1QkFBQztDQUFBLEFBM0NELElBMkNDO1NBOUJZLGdCQUFnQjs7Ozs7O0lBQzNCLGlDQUEyQjs7Ozs7SUFDM0Isb0NBQWtDOzs7OztJQUV0Qix5Q0FBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbi8qKiBQb3NzaWJsZSBiYWRnZSB0eXBlcy4gKi9cbmV4cG9ydCB0eXBlIE54QmFkZ2VUeXBlID0gJ2FjdGl2ZScgfCAncG9zaXRpdmUnIHwgJ2NyaXRpY2FsJyB8ICduZWdhdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LWJhZGdlJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0eWxlVXJsczogWycuL2JhZGdlLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzLm54LWJhZGdlLS1hY3RpdmVdJzogJ3R5cGUgPT09IFwiYWN0aXZlXCInLFxuICAgICdbY2xhc3MubngtYmFkZ2UtLXBvc2l0aXZlXSc6ICd0eXBlID09PSBcInBvc2l0aXZlXCInLFxuICAgICdbY2xhc3MubngtYmFkZ2UtLWNyaXRpY2FsXSc6ICd0eXBlID09PSBcImNyaXRpY2FsXCInLFxuICAgICdbY2xhc3MubngtYmFkZ2UtLW5lZ2F0aXZlXSc6ICd0eXBlID09PSBcIm5lZ2F0aXZlXCInLFxuICAgICdbY2xhc3MubngtYmFkZ2UtLXZpYnJhbnRdJzogJ3ZpYnJhbnQnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhCYWRnZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX3R5cGU6IE54QmFkZ2VUeXBlO1xuICBwcml2YXRlIF92aWJyYW50OiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2hhbmdlRGV0UmVmOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XG5cbiAgLyoqIFNldHMgdGhlIGNsYXNzIG5hbWUgZm9yIHRoZSBiYWRnZSBlbGVtZW50LiAgKi9cbiAgQElucHV0KClcbiAgc2V0IHR5cGUodmFsdWU6IE54QmFkZ2VUeXBlKSB7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLl90eXBlKSB7XG4gICAgICB0aGlzLl90eXBlID0gdmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCB0eXBlKCk6IE54QmFkZ2VUeXBlIHtcbiAgICByZXR1cm4gdGhpcy5fdHlwZTtcbiAgfVxuICAvKiogQ2hhbmdlIGJhZGdlIHN0eWxlIHRvIHZpYnJhbnQuICovXG4gIEBJbnB1dCgpXG4gIHNldCB2aWJyYW50KHZhbHVlOiBib29sZWFuKSB7XG4gICAgY29uc3QgbmV3VmFsdWUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuXG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLl92aWJyYW50KSB7XG4gICAgICB0aGlzLl92aWJyYW50ID0gbmV3VmFsdWU7XG4gICAgICB0aGlzLl9jaGFuZ2VEZXRSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCB2aWJyYW50KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl92aWJyYW50O1xuICB9XG59XG4iXX0=