/**
 * @fileoverview added by tsickle
 * Generated from: sort-header/sort-header-intl.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
var NxSortHeaderIntl = /** @class */ (function () {
    function NxSortHeaderIntl() {
        /**
         * Stream that emits whenever the labels here are changed. Use this to notify
         * components if the labels have changed after initialization.
         */
        this.changes = new Subject();
        /**
         * The aria label for a header that can be sorted ascending.
         */
        this.sortAscendingAriaLabel = 'sort ascending by';
        /**
         * The aria label for a header that can be sorted descending.
         */
        this.sortDescendingAriaLabel = 'sort descending by';
    }
    NxSortHeaderIntl.decorators = [
        { type: Injectable }
    ];
    return NxSortHeaderIntl;
}());
export { NxSortHeaderIntl };
if (false) {
    /**
     * Stream that emits whenever the labels here are changed. Use this to notify
     * components if the labels have changed after initialization.
     * @type {?}
     */
    NxSortHeaderIntl.prototype.changes;
    /**
     * The aria label for a header that can be sorted ascending.
     * @type {?}
     */
    NxSortHeaderIntl.prototype.sortAscendingAriaLabel;
    /**
     * The aria label for a header that can be sorted descending.
     * @type {?}
     */
    NxSortHeaderIntl.prototype.sortDescendingAriaLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1oZWFkZXItaW50bC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L3RhYmxlLyIsInNvdXJjZXMiOlsic29ydC1oZWFkZXIvc29ydC1oZWFkZXItaW50bC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQjtJQUFBOzs7OztRQU1XLFlBQU8sR0FBa0IsSUFBSSxPQUFPLEVBQVEsQ0FBQzs7OztRQUd0RCwyQkFBc0IsR0FBVyxtQkFBbUIsQ0FBQzs7OztRQUVyRCw0QkFBdUIsR0FBVyxvQkFBb0IsQ0FBQztJQUN6RCxDQUFDOztnQkFaQSxVQUFVOztJQVlYLHVCQUFDO0NBQUEsQUFaRCxJQVlDO1NBWFksZ0JBQWdCOzs7Ozs7O0lBSzNCLG1DQUFzRDs7Ozs7SUFHdEQsa0RBQXFEOzs7OztJQUVyRCxtREFBdUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOeFNvcnRIZWFkZXJJbnRsIHtcbiAgLyoqXG4gICAqIFN0cmVhbSB0aGF0IGVtaXRzIHdoZW5ldmVyIHRoZSBsYWJlbHMgaGVyZSBhcmUgY2hhbmdlZC4gVXNlIHRoaXMgdG8gbm90aWZ5XG4gICAqIGNvbXBvbmVudHMgaWYgdGhlIGxhYmVscyBoYXZlIGNoYW5nZWQgYWZ0ZXIgaW5pdGlhbGl6YXRpb24uXG4gICAqL1xuICByZWFkb25seSBjaGFuZ2VzOiBTdWJqZWN0PHZvaWQ+ID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcblxuICAvKiogVGhlIGFyaWEgbGFiZWwgZm9yIGEgaGVhZGVyIHRoYXQgY2FuIGJlIHNvcnRlZCBhc2NlbmRpbmcuICovXG4gIHNvcnRBc2NlbmRpbmdBcmlhTGFiZWw6IHN0cmluZyA9ICdzb3J0IGFzY2VuZGluZyBieSc7XG4gIC8qKiBUaGUgYXJpYSBsYWJlbCBmb3IgYSBoZWFkZXIgdGhhdCBjYW4gYmUgc29ydGVkIGRlc2NlbmRpbmcuICovXG4gIHNvcnREZXNjZW5kaW5nQXJpYUxhYmVsOiBzdHJpbmcgPSAnc29ydCBkZXNjZW5kaW5nIGJ5Jztcbn1cbiJdfQ==