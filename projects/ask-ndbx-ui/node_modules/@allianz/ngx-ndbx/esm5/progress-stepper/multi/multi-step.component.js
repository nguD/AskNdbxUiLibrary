/**
 * @fileoverview added by tsickle
 * Generated from: multi/multi-step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input, QueryList, ContentChildren } from '@angular/core';
import { NxProgressStepperDirective } from './../progress-stepper.component';
import { NxMultiStepperGroupComponent } from './multi-step-group.component';
var NxMultiStepperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NxMultiStepperComponent, _super);
    function NxMultiStepperComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._direction = 'horizontal';
        return _this;
    }
    Object.defineProperty(NxMultiStepperComponent.prototype, "direction", {
        /** Sets the direction of the multi stepper. */
        get: /**
         * Sets the direction of the multi stepper.
         * @return {?}
         */
        function () {
            return this._direction;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._direction = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NxMultiStepperComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.groups.length) {
            this._steps.reset(this._stepsInGroups);
        }
        this.groups.changes.subscribe((/**
         * @return {?}
         */
        function () {
            _this._steps.reset(_this._stepsInGroups);
        }));
    };
    /**
     * @param {?} index
     * @return {?}
     */
    NxMultiStepperComponent.prototype._stepDisabled = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        /** @type {?} */
        var steps = this.steps.toArray();
        if (this.linear && index >= 0) {
            return steps.slice(0, index).some((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                /** @type {?} */
                var control = step.stepControl;
                /** @type {?} */
                var isIncomplete = control
                    ? control.invalid || control.pending || !step.interacted
                    : !step.completed;
                return isIncomplete && !step.optional;
            }));
        }
        return false;
    };
    Object.defineProperty(NxMultiStepperComponent.prototype, "_stepsInGroups", {
        get: /**
         * @private
         * @return {?}
         */
        function () {
            if (this.groups.length) {
                return this.groups
                    .reduce((/**
                 * @param {?} steps
                 * @param {?} group
                 * @return {?}
                 */
                function (steps, group) { return steps.concat(group.steps.toArray()); }), []);
            }
            return [];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} step
     * @return {?}
     */
    NxMultiStepperComponent.prototype._getIndex = /**
     * @param {?} step
     * @return {?}
     */
    function (step) {
        return this.steps.toArray().indexOf(step);
    };
    /**
     * @param {?} groupIndex
     * @return {?}
     */
    NxMultiStepperComponent.prototype._isGroupActive = /**
     * @param {?} groupIndex
     * @return {?}
     */
    function (groupIndex) {
        return this.selectedIndex >= this.getGroupItemIndex(groupIndex);
    };
    /**
     * @param {?} groupIndex
     * @return {?}
     */
    NxMultiStepperComponent.prototype._isGroupDisabled = /**
     * @param {?} groupIndex
     * @return {?}
     */
    function (groupIndex) {
        return this._stepDisabled(this.getGroupItemIndex(groupIndex));
    };
    /**
     * @private
     * @param {?} groupIndex
     * @return {?}
     */
    NxMultiStepperComponent.prototype.getGroupItemIndex = /**
     * @private
     * @param {?} groupIndex
     * @return {?}
     */
    function (groupIndex) {
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var groups = this.groups.toArray();
        for (var i = 0; i < groupIndex; i++) {
            count += groups[i].steps.length;
        }
        return count;
    };
    NxMultiStepperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-multi-stepper',
                    template: "<span *ngIf=\"title && direction === 'horizontal'\" class=\"nx-single-step__title\">{{title}}</span>\n<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n  <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\">\n  <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n    <ng-container *ngFor=\"let step of _steps;let i = index; let isLast = last; let isFirst = first\">\n\n      <nx-multi-step-item\n        (click)=\"!_stepDisabled(i) && step.select()\"\n        [last]=\"isLast\"\n        [label]=\"step.stepLabel || step.label\"\n        [completed]=\"step.completed\"\n        [selected]=\"selectedIndex === i\"\n        [active]=\"selectedIndex > i\"\n        [disabled]=\"_stepDisabled(i)\"\n        [direction]=\"direction\">\n      </nx-multi-step-item>\n    </ng-container>\n  </ng-container>\n</div>\n\n\n<div class=\"labels-container\"\n     *ngIf=\"direction === 'horizontal'\">\n  <div class=\"label\" [attr.label]=\"step.label\" *ngFor=\"let step of _steps;let i = index; \"\n       [ngClass]=\"{'is-disabled':_stepDisabled(i), 'is-selected': (selectedIndex === i)}\"\n       (click)=\"!_stepDisabled(i) && step.select()\">\n    <span>{{ step.label }}</span>\n  </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n  {{currentLabel}}\n</div>\n\n<div *ngFor=\"let step of _steps; let i = index\"\n      class=\"nx-progress-stepper__content\" role=\"tabpanel\"\n      [id]=\"_getStepContentId(i)\"\n      [attr.aria-label]=\"currentLabel\"\n      [attr.aria-expanded]=\"selectedIndex === i\">\n  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n  <ng-container *ngFor=\"let group of groups; let i = index;\">\n    <div class=\"nx-multi-stepper__group\">\n      <div class=\"nx-multi-stepper__group-label\"\n          [class.is-active]=\"_isGroupActive(i)\"\n          [class.is-disabled]=\"_isGroupDisabled(i)\">\n        {{ group.label }}\n      </div>\n\n      <div class=\"nx-multi-stepper__group-items\">\n        <ng-container *ngFor=\"let step of group.steps; let isLast = last;\">\n          <nx-multi-step-item\n              (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n              [last]=\"isLast\"\n              [label]=\"step.stepLabel || step.label\"\n              [completed]=\"step.completed\"\n              [selected]=\"selectedIndex === _getIndex(step)\"\n              [active]=\"selectedIndex > _getIndex(step)\"\n              [disabled]=\"_stepDisabled(_getIndex(step))\"\n              [direction]=\"direction\">\n          </nx-multi-step-item>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n",
                    providers: [
                        {
                            provide: NxProgressStepperDirective,
                            useExisting: NxMultiStepperComponent
                        }
                    ],
                    preserveWhitespaces: false,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-multi-stepper--vertical]': 'direction === "vertical"'
                    },
                    styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden}.nx-progress-stepper__mobile-label{display:none;color:#414141;color:var(--progress-indicator-mobile-color,#414141);font-size:16px;font-size:var(--progress-indicator-mobile-font-size,16px);line-height:24px;line-height:var(--progress-indicator-mobile-line-height,24px);font-weight:400;font-weight:var(--progress-indicator-mobile-font-weight,400);letter-spacing:0;letter-spacing:var(--progress-indicator-mobile-letter-spacing,0)}@media (max-width:703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}", ":host{width:100%}@media (min-width:704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:#c2c2c2;border-left-color:var(--multi-stepper-line-color,#c2c2c2)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-4px;margin-bottom:-4px;border-left-style:solid;border-left-color:#007ab3;border-left-color:var(--multi-stepper-line-filled-color,#007ab3)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:16px;font-size:var(--multi-stepper-step-font-size,16px);line-height:24px;line-height:var(--multi-stepper-step-line-height,24px);font-weight:400;font-weight:var(--multi-stepper-step-font-weight,400);letter-spacing:0;letter-spacing:var(--multi-stepper-step-letter-spacing,0);color:#414141;color:var(--multi-stepper-step-color,#414141);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:#c2c2c2;color:var(--multi-stepper-step-disabled-color,#c2c2c2);cursor:not-allowed}@media screen and (-ms-high-contrast:active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace;color:buttonText}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width:703px){:host .labels-container{display:none}.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto}.nx-multi-stepper__group-label{font-size:20px;font-size:var(--multi-stepper-group-font-size,20px);line-height:28px;line-height:var(--multi-stepper-group-line-height,28px);font-weight:400;font-weight:var(--multi-stepper-group-font-weight,400);letter-spacing:.2px;letter-spacing:var(--multi-stepper-group-letter-spacing,.2px);color:#414141;color:var(--multi-stepper-group-color,#414141)}.nx-multi-stepper__group-label.is-disabled{color:#c2c2c2;color:var(--multi-stepper-group-disabled-color,#c2c2c2)}"]
                }] }
    ];
    NxMultiStepperComponent.propDecorators = {
        groups: [{ type: ContentChildren, args: [NxMultiStepperGroupComponent, { descendants: true },] }],
        direction: [{ type: Input }]
    };
    return NxMultiStepperComponent;
}(NxProgressStepperDirective));
export { NxMultiStepperComponent };
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxMultiStepperComponent.prototype.groups;
    /**
     * @type {?}
     * @private
     */
    NxMultiStepperComponent.prototype._direction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9wcm9ncmVzcy1zdGVwcGVyLyIsInNvdXJjZXMiOlsibXVsdGkvbXVsdGktc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUVMLFNBQVMsRUFDVCxlQUFlLEVBQ2hCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSwwQkFBMEIsRUFBbUIsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUs1RTtJQW1CNkMsbURBQTBCO0lBbkJ2RTtRQUFBLHFFQTZGQztRQTNEUyxnQkFBVSxHQUE0QixZQUFZLENBQUM7O0lBMkQ3RCxDQUFDO0lBbEVDLHNCQUNJLDhDQUFTO1FBRmIsK0NBQStDOzs7OztRQUMvQztZQUVFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QixDQUFDOzs7OztRQUNELFVBQWMsS0FBOEI7WUFDMUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDMUIsQ0FBQzs7O09BSEE7Ozs7SUFNRCxvREFBa0I7OztJQUFsQjtRQUFBLGlCQVFDO1FBUEMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDeEM7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTOzs7UUFBQztZQUM1QixLQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVELCtDQUFhOzs7O0lBQWIsVUFBYyxLQUFhOztZ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dGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBBZnRlckNvbnRlbnRJbml0LFxuICBRdWVyeUxpc3QsXG4gIENvbnRlbnRDaGlsZHJlblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlLCBOeFN0ZXBDb21wb25lbnQgfSBmcm9tICcuLy4uL3Byb2dyZXNzLXN0ZXBwZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE54TXVsdGlTdGVwcGVyR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL211bHRpLXN0ZXAtZ3JvdXAuY29tcG9uZW50JztcblxuLyoqIERpcmVjdGlvbiBvZiB0aGUgbXVsdGkgc3RlcHBlciAqL1xuZXhwb3J0IHR5cGUgTnhNdWx0aVN0ZXBwZXJEaXJlY3Rpb24gPSAndmVydGljYWwnIHwgJ2hvcml6b250YWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1tdWx0aS1zdGVwcGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL211bHRpLXN0ZXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFtcbiAgICAnLi4vcHJvZ3Jlc3Mtc3RlcHBlci5jb21wb25lbnQuc2NzcycsXG4gICAgJy4vbXVsdGktc3RlcC5jb21wb25lbnQuc2NzcydcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTnhQcm9ncmVzc1N0ZXBwZXJEaXJlY3RpdmUsXG4gICAgICB1c2VFeGlzdGluZzogTnhNdWx0aVN0ZXBwZXJDb21wb25lbnRcbiAgICB9XG4gIF0sXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MubngtbXVsdGktc3RlcHBlci0tdmVydGljYWxdJzogJ2RpcmVjdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54TXVsdGlTdGVwcGVyQ29tcG9uZW50IGV4dGVuZHMgTnhQcm9ncmVzc1N0ZXBwZXJEaXJlY3RpdmVcbiAgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBAQ29udGVudENoaWxkcmVuKE54TXVsdGlTdGVwcGVyR3JvdXBDb21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSlcbiAgZ3JvdXBzOiBRdWVyeUxpc3Q8TnhNdWx0aVN0ZXBwZXJHcm91cENvbXBvbmVudD47XG5cbiAgLyoqIFNldHMgdGhlIGRpcmVjdGlvbiBvZiB0aGUgbXVsdGkgc3RlcHBlci4gKi9cbiAgQElucHV0KClcbiAgZ2V0IGRpcmVjdGlvbigpOiBOeE11bHRpU3RlcHBlckRpcmVjdGlvbiB7XG4gICAgcmV0dXJuIHRoaXMuX2RpcmVjdGlvbjtcbiAgfVxuICBzZXQgZGlyZWN0aW9uKHZhbHVlOiBOeE11bHRpU3RlcHBlckRpcmVjdGlvbikge1xuICAgIHRoaXMuX2RpcmVjdGlvbiA9IHZhbHVlO1xuICB9XG4gIHByaXZhdGUgX2RpcmVjdGlvbjogTnhNdWx0aVN0ZXBwZXJEaXJlY3Rpb24gPSAnaG9yaXpvbnRhbCc7XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIGlmICh0aGlzLmdyb3Vwcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuX3N0ZXBzLnJlc2V0KHRoaXMuX3N0ZXBzSW5Hcm91cHMpO1xuICAgIH1cblxuICAgIHRoaXMuZ3JvdXBzLmNoYW5nZXMuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuX3N0ZXBzLnJlc2V0KHRoaXMuX3N0ZXBzSW5Hcm91cHMpO1xuICAgIH0pO1xuICB9XG5cbiAgX3N0ZXBEaXNhYmxlZChpbmRleDogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgc3RlcHMgPSB0aGlzLnN0ZXBzLnRvQXJyYXkoKTtcblxuICAgIGlmICh0aGlzLmxpbmVhciAmJiBpbmRleCA+PSAwKSB7XG4gICAgICByZXR1cm4gc3RlcHMuc2xpY2UoMCwgaW5kZXgpLnNvbWUoc3RlcCA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRyb2wgPSBzdGVwLnN0ZXBDb250cm9sO1xuICAgICAgICBjb25zdCBpc0luY29tcGxldGUgPSBjb250cm9sXG4gICAgICAgICAgPyBjb250cm9sLmludmFsaWQgfHwgY29udHJvbC5wZW5kaW5nIHx8ICFzdGVwLmludGVyYWN0ZWRcbiAgICAgICAgICA6ICFzdGVwLmNvbXBsZXRlZDtcbiAgICAgICAgcmV0dXJuIGlzSW5jb21wbGV0ZSAmJiAhc3RlcC5vcHRpb25hbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IF9zdGVwc0luR3JvdXBzKCk6IE54U3RlcENvbXBvbmVudFtdIHtcbiAgICBpZiAodGhpcy5ncm91cHMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdGhpcy5ncm91cHNcbiAgICAgICAgLnJlZHVjZSgoc3RlcHMsIGdyb3VwKSA9PiBzdGVwcy5jb25jYXQoZ3JvdXAuc3RlcHMudG9BcnJheSgpKSwgW10pO1xuICAgIH1cblxuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIF9nZXRJbmRleChzdGVwOiBOeFN0ZXBDb21wb25lbnQpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnN0ZXBzLnRvQXJyYXkoKS5pbmRleE9mKHN0ZXApO1xuICB9XG5cbiAgX2lzR3JvdXBBY3RpdmUoZ3JvdXBJbmRleDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJbmRleCA+PSB0aGlzLmdldEdyb3VwSXRlbUluZGV4KGdyb3VwSW5kZXgpO1xuICB9XG5cbiAgX2lzR3JvdXBEaXNhYmxlZChncm91cEluZGV4OiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RlcERpc2FibGVkKHRoaXMuZ2V0R3JvdXBJdGVtSW5kZXgoZ3JvdXBJbmRleCkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRHcm91cEl0ZW1JbmRleChncm91cEluZGV4OiBudW1iZXIpOiBudW1iZXIge1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgY29uc3QgZ3JvdXBzID0gdGhpcy5ncm91cHMudG9BcnJheSgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBncm91cEluZGV4OyBpKyspIHtcbiAgICAgIGNvdW50ICs9IGdyb3Vwc1tpXS5zdGVwcy5sZW5ndGg7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvdW50O1xuICB9XG59XG4iXX0=