/**
 * @fileoverview added by tsickle
 * Generated from: single/single-step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NxProgressStepperDirective } from './../progress-stepper.component';
var NxSingleStepperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NxSingleStepperComponent, _super);
    function NxSingleStepperComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._rightLabel = 'Next step:';
        return _this;
    }
    Object.defineProperty(NxSingleStepperComponent.prototype, "rightLabel", {
        /** Sets the label on the right showing the next step. */
        get: /**
         * Sets the label on the right showing the next step.
         * @return {?}
         */
        function () { return this._rightLabel; },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) { this._rightLabel = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxSingleStepperComponent.prototype, "progress", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            return (this.selectedIndex + 1) / this.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxSingleStepperComponent.prototype, "currentLabel", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var step = this.currentStep;
            /** @type {?} */
            var label = step.stepLabel || step.label;
            return "\n    " + this.currentStepLabel + " " + (this.selectedIndex + 1) + "/" + this.count + ": " + label + "\n    ";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxSingleStepperComponent.prototype, "nextLabel", {
        /** @docs-private */
        get: /**
         * \@docs-private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var step = this.nextStep;
            if (step) {
                /** @type {?} */
                var label = step.stepLabel || step.label;
                return "\n        " + this.rightLabel + " " + label + "\n      ";
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    NxSingleStepperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-single-stepper',
                    template: "<div class=\"nx-single-step-container\">\n  <span *ngIf=\"title\" class=\"nx-single-step__title\">{{title}}</span>\n  <span class=\"nx-progress-stepper__title\">\n    <ng-content select=\"nx-label\"></ng-content>\n  </span>\n\n  <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n  <div class=\"nx-single-step__infos\">\n    <div class=\"nx-single-step__current\">\n      {{ currentLabel }}\n    </div>\n    <div class=\"nx-single-step__next\">\n      {{ nextLabel }}\n    </div>\n  </div>\n\n  <div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n  </div>\n</div>\n\n<div\n  *ngFor=\"let step of _steps; let i = index\"\n  class=\"nx-progress-stepper__content\"\n  role=\"tabpanel\"\n  [id]=\"_getStepContentId(i)\"\n  [attr.aria-label]=\"currentLabel\"\n  [attr.aria-expanded]=\"selectedIndex === i\"\n>\n  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n",
                    providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }],
                    preserveWhitespaces: false,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden}.nx-progress-stepper__mobile-label{display:none;color:#414141;color:var(--progress-indicator-mobile-color,#414141);font-size:16px;font-size:var(--progress-indicator-mobile-font-size,16px);line-height:24px;line-height:var(--progress-indicator-mobile-line-height,24px);font-weight:400;font-weight:var(--progress-indicator-mobile-font-weight,400);letter-spacing:0;letter-spacing:var(--progress-indicator-mobile-letter-spacing,0)}@media (max-width:703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}", ":host{display:block}.nx-single-step__infos{display:flex;font-size:16px;font-size:var(--single-stepper-step-font-size,16px);line-height:24px;line-height:var(--single-stepper-step-line-height,24px);font-weight:300;font-weight:var(--single-stepper-step-font-weight,300);letter-spacing:0;letter-spacing:var(--single-stepper-step-letter-spacing,0);color:#414141;color:var(--single-stepper-step-color,#414141);margin-top:8px}.nx-single-step__title,nx-progressbar{margin-bottom:8px;display:block}@media (max-width:703px){.nx-single-step__infos,nx-progressbar{display:none}}.nx-single-step__title{font-size:20px;font-size:var(--progress-stepper-label-font-size,20px);line-height:28px;line-height:var(--progress-stepper-label-line-height,28px);font-weight:300;font-weight:var(--progress-stepper-label-font-weight,300);letter-spacing:.2px;letter-spacing:var(--progress-stepper-label-letter-spacing,.2px);margin-bottom:24px}@media (min-width:320px){.nx-single-step__title{display:block}}.nx-single-step__next{margin-left:auto}@media (max-width:703px){.nx-single-step__next{display:none}}"]
                }] }
    ];
    NxSingleStepperComponent.propDecorators = {
        rightLabel: [{ type: Input, args: ['nextLabel',] }]
    };
    return NxSingleStepperComponent;
}(NxProgressStepperDirective));
export { NxSingleStepperComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxSingleStepperComponent.prototype._rightLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvcHJvZ3Jlc3Mtc3RlcHBlci8iLCJzb3VyY2VzIjpbInNpbmdsZS9zaW5nbGUtc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFN0U7SUFROEMsb0RBQTBCO0lBUnhFO1FBQUEscUVBOENDO1FBaENTLGlCQUFXLEdBQVcsWUFBWSxDQUFDOztJQWdDN0MsQ0FBQztJQXBDQyxzQkFDSSxnREFBVTtRQUZkLHlEQUF5RDs7Ozs7UUFDekQsY0FDMkIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7Ozs7UUFDckQsVUFBZSxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7T0FEVTtJQU1yRCxzQkFBSSw4Q0FBUTtRQURaLG9CQUFvQjs7Ozs7UUFDcEI7WUFDRSxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQy9DLENBQUM7OztPQUFBO0lBR0Qsc0JBQUksa0RBQVk7UUFEaEIsb0JBQW9COzs7OztRQUNwQjs7Z0JBQ1EsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXOztnQkFDdkIsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUs7WUFFMUMsT0FBTyxXQUNMLElBQUksQ0FBQyxnQkFBZ0IsVUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsVUFBSSxJQUFJLENBQUMsS0FBSyxVQUFLLEtBQUssV0FDeEUsQ0FBQztRQUNKLENBQUM7OztPQUFBO0lBR0Qsc0JBQUksK0NBQVM7UUFEYixvQkFBb0I7Ozs7O1FBQ3BCOztnQkFDUSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVE7WUFFMUIsSUFBSSxJQUFJLEVBQUU7O29CQUNGLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxLQUFLO2dCQUUxQyxPQUFPLGVBQ0gsSUFBSSxDQUFDLFVBQVUsU0FBSSxLQUFLLGFBQzNCLENBQUM7YUFDSDtZQUVELE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzs7O09BQUE7O2dCQTVDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsNjVCQUEyQztvQkFFM0MsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsV0FBVyxFQUFFLHdCQUF3QixFQUFDLENBQUM7b0JBQ3pGLG1CQUFtQixFQUFFLEtBQUs7b0JBQzFCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFDaEQ7Ozs2QkFHRSxLQUFLLFNBQUMsV0FBVzs7SUFvQ3BCLCtCQUFDO0NBQUEsQUE5Q0QsQ0FROEMsMEJBQTBCLEdBc0N2RTtTQXRDWSx3QkFBd0I7Ozs7OztJQU1uQywrQ0FBMkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSB9IGZyb20gJy4vLi4vcHJvZ3Jlc3Mtc3RlcHBlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1zaW5nbGUtc3RlcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaW5nbGUtc3RlcC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuLi9wcm9ncmVzcy1zdGVwcGVyLmNvbXBvbmVudC5zY3NzJywgJy4vc2luZ2xlLXN0ZXAuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlLCB1c2VFeGlzdGluZzogTnhTaW5nbGVTdGVwcGVyQ29tcG9uZW50fV0sXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBOeFNpbmdsZVN0ZXBwZXJDb21wb25lbnQgZXh0ZW5kcyBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSB7XG4gIC8qKiBTZXRzIHRoZSBsYWJlbCBvbiB0aGUgcmlnaHQgc2hvd2luZyB0aGUgbmV4dCBzdGVwLiAqL1xuICBASW5wdXQoJ25leHRMYWJlbCcpXG4gIGdldCByaWdodExhYmVsKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLl9yaWdodExhYmVsOyB9XG4gIHNldCByaWdodExhYmVsKHYpIHsgdGhpcy5fcmlnaHRMYWJlbCA9IHY7IH1cblxuICBwcml2YXRlIF9yaWdodExhYmVsOiBzdHJpbmcgPSAnTmV4dCBzdGVwOic7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0IHByb2dyZXNzKCkge1xuICAgIHJldHVybiAodGhpcy5zZWxlY3RlZEluZGV4ICsgMSkgLyB0aGlzLmNvdW50O1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0IGN1cnJlbnRMYWJlbCgpIHtcbiAgICBjb25zdCBzdGVwID0gdGhpcy5jdXJyZW50U3RlcDtcbiAgICBjb25zdCBsYWJlbCA9IHN0ZXAuc3RlcExhYmVsIHx8IHN0ZXAubGFiZWw7XG5cbiAgICByZXR1cm4gYFxuICAgICR7dGhpcy5jdXJyZW50U3RlcExhYmVsfSAke3RoaXMuc2VsZWN0ZWRJbmRleCArIDF9LyR7dGhpcy5jb3VudH06ICR7bGFiZWx9XG4gICAgYDtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGdldCBuZXh0TGFiZWwoKSB7XG4gICAgY29uc3Qgc3RlcCA9IHRoaXMubmV4dFN0ZXA7XG5cbiAgICBpZiAoc3RlcCkge1xuICAgICAgY29uc3QgbGFiZWwgPSBzdGVwLnN0ZXBMYWJlbCB8fCBzdGVwLmxhYmVsO1xuXG4gICAgICByZXR1cm4gYFxuICAgICAgICAke3RoaXMucmlnaHRMYWJlbH0gJHtsYWJlbH1cbiAgICAgIGA7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxufVxuIl19