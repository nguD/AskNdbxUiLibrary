/**
 * @fileoverview added by tsickle
 * Generated from: layout.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
var NxLayoutComponent = /** @class */ (function () {
    function NxLayoutComponent() {
        this._classNames = '';
        /**
         * \@docs-private
         */
        this.grid = true;
    }
    Object.defineProperty(NxLayoutComponent.prototype, "classNames", {
        get: /**
         * @return {?}
         */
        function () {
            return this._classNames;
        },
        /**
         * Type of layout.
         *
         * Values: grid | grid nogutters | grid maxwidth. Default value: grid.
         */
        set: /**
         * Type of layout.
         *
         * Values: grid | grid nogutters | grid maxwidth. Default value: grid.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._classNames === value) {
                return;
            }
            this._classNames = value;
            this.grid = !!this._classNames.match(/grid/);
            this.noGutters = !!this._classNames.match(/nogutters/);
            this.maxWidth = !!this._classNames.match(/maxwidth/);
        },
        enumerable: true,
        configurable: true
    });
    NxLayoutComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: '[nxLayout]',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-grid]': 'grid',
                        '[class.nx-grid--no-gutters]': 'noGutters',
                        '[class.nx-grid--max-width]': 'maxWidth'
                    },
                    styles: [":host(.nx-grid){position:relative;margin-left:auto;margin-right:auto;padding-right:16px;padding-left:16px}@media (min-width:704px){:host(.nx-grid){padding-right:32px;padding-left:32px}}:host(.nx-grid--no-gutters) ::ng-deep{padding-left:0;padding-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row{margin-left:0;margin-right:0}:host(.nx-grid--no-gutters) ::ng-deep .nx-grid__row>[class*=nx-grid__column]{padding-left:0;padding-right:0}:host(.nx-grid--max-width){max-width:100%;width:1184px;width:var(--grid-max-width,1184px)}"]
                }] }
    ];
    NxLayoutComponent.propDecorators = {
        classNames: [{ type: Input, args: ['nxLayout',] }]
    };
    return NxLayoutComponent;
}());
export { NxLayoutComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxLayoutComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.grid;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.noGutters;
    /**
     * \@docs-private
     * @type {?}
     */
    NxLayoutComponent.prototype.maxWidth;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2dyaWQvIiwic291cmNlcyI6WyJsYXlvdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUU7SUFBQTtRQWFVLGdCQUFXLEdBQVcsRUFBRSxDQUFDOzs7O1FBR2pDLFNBQUksR0FBWSxJQUFJLENBQUM7SUE0QnZCLENBQUM7SUFmQyxzQkFDSSx5Q0FBVTs7OztRQVdkO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7UUFuQkQ7Ozs7V0FJRzs7Ozs7Ozs7UUFDSCxVQUNlLEtBQWE7WUFDMUIsSUFBSSxJQUFJLENBQUMsV0FBVyxLQUFLLEtBQUssRUFBRTtnQkFDOUIsT0FBTzthQUNSO1lBRUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7WUFDekIsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDdkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdkQsQ0FBQzs7O09BQUE7O2dCQXZDRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxZQUFZO29CQUN0QixRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFFL0MsSUFBSSxFQUFFO3dCQUNKLGlCQUFpQixFQUFFLE1BQU07d0JBQ3pCLDZCQUE2QixFQUFFLFdBQVc7d0JBQzFDLDRCQUE0QixFQUFFLFVBQVU7cUJBQ3pDOztpQkFDRjs7OzZCQWtCRSxLQUFLLFNBQUMsVUFBVTs7SUFlbkIsd0JBQUM7Q0FBQSxBQTVDRCxJQTRDQztTQWhDWSxpQkFBaUI7Ozs7OztJQUM1Qix3Q0FBaUM7Ozs7O0lBR2pDLGlDQUFxQjs7Ozs7SUFHckIsc0NBQW1COzs7OztJQUduQixxQ0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ1tueExheW91dF0nLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJ2xheW91dC5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5ueC1ncmlkXSc6ICdncmlkJyxcbiAgICAnW2NsYXNzLm54LWdyaWQtLW5vLWd1dHRlcnNdJzogJ25vR3V0dGVycycsXG4gICAgJ1tjbGFzcy5ueC1ncmlkLS1tYXgtd2lkdGhdJzogJ21heFdpZHRoJ1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54TGF5b3V0Q29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfY2xhc3NOYW1lczogc3RyaW5nID0gJyc7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ3JpZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgbm9HdXR0ZXJzOiBib29sZWFuO1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIG1heFdpZHRoOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBUeXBlIG9mIGxheW91dC5cbiAgICpcbiAgICogVmFsdWVzOiBncmlkIHwgZ3JpZCBub2d1dHRlcnMgfCBncmlkIG1heHdpZHRoLiBEZWZhdWx0IHZhbHVlOiBncmlkLlxuICAgKi9cbiAgQElucHV0KCdueExheW91dCcpXG4gIHNldCBjbGFzc05hbWVzKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5fY2xhc3NOYW1lcyA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9jbGFzc05hbWVzID0gdmFsdWU7XG4gICAgdGhpcy5ncmlkID0gISF0aGlzLl9jbGFzc05hbWVzLm1hdGNoKC9ncmlkLyk7XG4gICAgdGhpcy5ub0d1dHRlcnMgPSAhIXRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL25vZ3V0dGVycy8pO1xuICAgIHRoaXMubWF4V2lkdGggPSAhIXRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL21heHdpZHRoLyk7XG4gIH1cblxuICBnZXQgY2xhc3NOYW1lcygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9jbGFzc05hbWVzO1xuICB9XG59XG4iXX0=