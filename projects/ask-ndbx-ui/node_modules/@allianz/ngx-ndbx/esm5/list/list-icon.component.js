/**
 * @fileoverview added by tsickle
 * Generated from: list/list-icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';
var NxListIconComponent = /** @class */ (function () {
    function NxListIconComponent() {
    }
    NxListIconComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'li[nxListIcon]',
                    template: "\n    <span class=\"nx-list__icon\">\n      <nx-icon [name]='name'></nx-icon>\n    </span>\n    <ng-content></ng-content>"
                }] }
    ];
    NxListIconComponent.propDecorators = {
        viewRefPrefix: [{ type: ViewChild, args: ['viewRefPrefix', { read: ViewContainerRef, static: false },] }],
        name: [{ type: Input, args: ['nxListIcon',] }]
    };
    return NxListIconComponent;
}());
export { NxListIconComponent };
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxListIconComponent.prototype.viewRefPrefix;
    /**
     * Sets the name of the icon to be displayed.
     * @type {?}
     */
    NxListIconComponent.prototype.name;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsibGlzdC9saXN0LWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlFO0lBQUE7SUFnQkEsQ0FBQzs7Z0JBaEJBLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLDJIQUlrQjtpQkFDN0I7OztnQ0FJRSxTQUFTLFNBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7dUJBR3BFLEtBQUssU0FBQyxZQUFZOztJQUNyQiwwQkFBQztDQUFBLEFBaEJELElBZ0JDO1NBTlksbUJBQW1COzs7Ozs7SUFFOUIsNENBQXVHOzs7OztJQUd2RyxtQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdsaVtueExpc3RJY29uXScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHNwYW4gY2xhc3M9XCJueC1saXN0X19pY29uXCI+XG4gICAgICA8bngtaWNvbiBbbmFtZV09J25hbWUnPjwvbngtaWNvbj5cbiAgICA8L3NwYW4+XG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmBcbn0pXG5cbmV4cG9ydCBjbGFzcyBOeExpc3RJY29uQ29tcG9uZW50IHtcbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgQFZpZXdDaGlsZCgndmlld1JlZlByZWZpeCcsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiBmYWxzZSB9KSB2aWV3UmVmUHJlZml4OiBWaWV3Q29udGFpbmVyUmVmO1xuXG4gIC8qKiBTZXRzIHRoZSBuYW1lIG9mIHRoZSBpY29uIHRvIGJlIGRpc3BsYXllZC4gKi9cbiAgQElucHV0KCdueExpc3RJY29uJykgbmFtZTogc3RyaW5nO1xufVxuIl19