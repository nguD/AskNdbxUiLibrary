/**
 * @fileoverview added by tsickle
 * Generated from: list/list.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
/** @type {?} */
var DEFAULT_TYPE = 'normal';
var NxListComponent = /** @class */ (function () {
    function NxListComponent() {
        /**
         * \@docs-private
         */
        this.negative = false;
        /**
         * \@docs-private
         */
        this.orderedCircle = false;
    }
    Object.defineProperty(NxListComponent.prototype, "classNames", {
        get: /**
         * @return {?}
         */
        function () {
            return this._classNames;
        },
        /**
         * Sets the visual appearance of the list. You can combine different values:
         *
         * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based
         * on modifiers. Defaults to normal.
         *
         * negative: Display the list with a negative set of styling.
         *
         * ordered-circle: Display the list item numbers in a color filled circle.
         */
        set: /**
         * Sets the visual appearance of the list. You can combine different values:
         *
         * xsmall | small | normal: The listed input values are expanded to the underlying BEM conform styles based
         * on modifiers. Defaults to normal.
         *
         * negative: Display the list with a negative set of styling.
         *
         * ordered-circle: Display the list item numbers in a color filled circle.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this._classNames === value) {
                return;
            }
            this._classNames = value;
            var _a = tslib_1.__read(this._classNames.match(/xsmall|small|normal/) || [DEFAULT_TYPE], 1), _b = _a[0], type = _b === void 0 ? null : _b;
            this.type = (/** @type {?} */ (type));
            this.negative = !!this._classNames.match(/negative/);
            this.orderedCircle = !!this._classNames.match(/ordered-circle/);
        },
        enumerable: true,
        configurable: true
    });
    NxListComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'ul[nxList], ol[nxList]',
                    template: '<ng-content></ng-content>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-list--xsmall]': 'type === "xsmall"',
                        '[class.nx-list--small]': 'type === "small"',
                        '[class.nx-list--normal]': 'type === "normal"',
                        '[class.nx-list--negative]': 'negative',
                        '[class.nx-list--ordered-circle]': 'orderedCircle',
                    },
                    styles: [":host{color:#414141;color:var(--list-text-color,#414141);list-style:none;margin-bottom:32px;padding:0;counter-reset:list}:host(.nx-list--normal){font-size:18px;font-size:var(--paragraph-02-font-size,18px);line-height:24px;line-height:var(--paragraph-02-line-height,24px);font-weight:400;font-weight:var(--paragraph-02-font-weight,400);letter-spacing:.2px;letter-spacing:var(--paragraph-02-letter-spacing,.2px)}:host(.nx-list--small){font-size:16px;font-size:var(--paragraph-03-font-size,16px);line-height:24px;line-height:var(--paragraph-03-line-height,24px);font-weight:400;font-weight:var(--paragraph-03-font-weight,400);letter-spacing:0;letter-spacing:var(--paragraph-03-letter-spacing,0)}:host(.nx-list--xsmall){font-size:14px;font-size:var(--paragraph-04-font-size,14px);line-height:20px;line-height:var(--paragraph-04-line-height,20px);font-weight:600;font-weight:var(--paragraph-04-font-weight,600);letter-spacing:.2px;letter-spacing:var(--paragraph-04-letter-spacing,.2px)}:host(.nx-list--negative){color:#fff}:host(.nx-list--negative) ::ng-deep .nx-list__icon{color:#fff}:host ::ng-deep .nx-list__icon{position:absolute;left:0;font-size:24px;font-size:var(--list-icon-size,24px);color:#5a5360;color:var(--list-icon-color,#5a5360);top:50%;transform:translateY(-50%);line-height:24px;line-height:var(--list-icon-size,24px);height:24px;height:var(--list-icon-size,24px)}:host ::ng-deep li{margin-bottom:16px;padding-left:36px;padding-left:calc(var(--list-icon-size,24px) + 12px);position:relative}:host(ul) ::ng-deep>li:not([nxlisticon]):before{background-color:#5a5360;background-color:var(--list-icon-color,#5a5360);border-radius:50%;content:\"\";display:inline-block;height:8px;width:8px;margin-right:16px;position:absolute;margin-left:-24px;margin-left:calc(-1 * var(--list-icon-size,24px));margin-top:8px;margin-top:calc((var(--paragraph-02-line-height,24px) - 8px)/ 2);transform:translateX(-50%)}:host(ul.nx-list--small) ::ng-deep>li:not([nxlisticon]):before{margin-top:8px;margin-top:calc((var(--paragraph-03-line-height,24px) - 8px)/ 2)}:host(ul.nx-list--xsmall) ::ng-deep>li:not([nxlisticon]):before{margin-top:6px;margin-top:calc((var(--paragraph-04-line-height,20px) - 8px)/ 2)}:host(ol) ::ng-deep>li:not([nxlisticon]):before{counter-increment:list;content:counter(list);position:absolute;font-size:inherit;font-weight:700;display:inline-block;width:24px;width:var(--list-icon-size,24px);text-align:center;left:0}:host ::ng-deep li>::ng-deep ol,:host ::ng-deep li>::ng-deep ul{margin-bottom:16px;margin-top:16px}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):before{width:24px;width:var(--list-circle-size,24px);font-size:16px;font-size:var(--paragraph-03-font-size,16px);line-height:24px;line-height:var(--paragraph-03-line-height,24px);font-weight:400;font-weight:var(--paragraph-03-font-weight,400);letter-spacing:0;letter-spacing:var(--paragraph-03-letter-spacing,0);color:#fff;color:var(--list-circle-text-color,#fff);left:0;top:50%;transform:translateY(-50%);z-index:2}@media screen and (-ms-high-contrast:active){:host(ul) ::ng-deep>li:not([nxlisticon]):before{background-color:windowText}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):before{border:1px solid windowText;border-radius:50%}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):after{color:windowText}}:host(ol.nx-list--ordered-circle) ::ng-deep>li:not([nxlisticon]):after{border-radius:50%;width:24px;width:var(--list-circle-size,24px);height:24px;height:var(--list-circle-size,24px);background-color:#5a5360;background-color:var(--list-icon-color,#5a5360);left:0;top:50%;transform:translateY(-50%);content:'';position:absolute}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):after{background-color:#fff}:host(ol.nx-list--ordered-circle.nx-list--negative)::ng-deep>li:not([nxlisticon]):before{color:#5a5360}:host(ul.nx-list--negative) ::ng-deep>li:not([nxlisticon]):before{background-color:#fff}"]
                }] }
    ];
    NxListComponent.propDecorators = {
        classNames: [{ type: Input, args: ['nxList',] }]
    };
    return NxListComponent;
}());
export { NxListComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxListComponent.prototype._classNames;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.type;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.negative;
    /**
     * \@docs-private
     * @type {?}
     */
    NxListComponent.prototype.orderedCircle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC8iLCJzb3VyY2VzIjpbImxpc3QvbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7O0lBRXBFLFlBQVksR0FBRyxRQUFRO0FBSzdCO0lBQUE7Ozs7UUFzQkUsYUFBUSxHQUFZLEtBQUssQ0FBQzs7OztRQUcxQixrQkFBYSxHQUFZLEtBQUssQ0FBQztJQThCakMsQ0FBQztJQWxCQyxzQkFDSSx1Q0FBVTs7OztRQWNkO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7UUEzQkQ7Ozs7Ozs7OztXQVNHOzs7Ozs7Ozs7Ozs7O1FBQ0gsVUFDZSxLQUFhO1lBQzFCLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxLQUFLLEVBQUU7Z0JBQzlCLE9BQU87YUFDUjtZQUVELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBRW5CLElBQUEsdUZBQStFLEVBQTlFLFVBQVcsRUFBWCxnQ0FBOEU7WUFDckYsSUFBSSxDQUFDLElBQUksR0FBRyxtQkFBQSxJQUFJLEVBQU8sQ0FBQztZQUV4QixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2xFLENBQUM7OztPQUFBOztnQkFsREYsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxRQUFRLEVBQUUsMkJBQTJCO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFFL0MsSUFBSSxFQUFFO3dCQUNKLHlCQUF5QixFQUFHLG1CQUFtQjt3QkFDL0Msd0JBQXdCLEVBQUcsa0JBQWtCO3dCQUM3Qyx5QkFBeUIsRUFBRyxtQkFBbUI7d0JBQy9DLDJCQUEyQixFQUFHLFVBQVU7d0JBQ3hDLGlDQUFpQyxFQUFHLGVBQWU7cUJBQ3BEOztpQkFDRjs7OzZCQXdCRSxLQUFLLFNBQUMsUUFBUTs7SUFrQmpCLHNCQUFDO0NBQUEsQUF2REQsSUF1REM7U0F4Q1ksZUFBZTs7Ozs7O0lBQzFCLHNDQUFvQjs7Ozs7SUFHcEIsK0JBQWlCOzs7OztJQUdqQixtQ0FBMEI7Ozs7O0lBRzFCLHdDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmNvbnN0IERFRkFVTFRfVFlQRSA9ICdub3JtYWwnO1xuXG4vKiogU2l6ZSBvZiB0aGUgbGlzdCAqL1xuZXhwb3J0IHR5cGUgTnhMaXN0U2l6ZSA9ICd4c21hbGwnIHwgJ3NtYWxsJyB8ICdub3JtYWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ3VsW254TGlzdF0sIG9sW254TGlzdF0nLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJ2xpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgaG9zdDoge1xuICAgICdbY2xhc3MubngtbGlzdC0teHNtYWxsXScgOiAndHlwZSA9PT0gXCJ4c21hbGxcIicsXG4gICAgJ1tjbGFzcy5ueC1saXN0LS1zbWFsbF0nIDogJ3R5cGUgPT09IFwic21hbGxcIicsXG4gICAgJ1tjbGFzcy5ueC1saXN0LS1ub3JtYWxdJyA6ICd0eXBlID09PSBcIm5vcm1hbFwiJyxcbiAgICAnW2NsYXNzLm54LWxpc3QtLW5lZ2F0aXZlXScgOiAnbmVnYXRpdmUnLFxuICAgICdbY2xhc3MubngtbGlzdC0tb3JkZXJlZC1jaXJjbGVdJyA6ICdvcmRlcmVkQ2lyY2xlJyxcbiAgfVxufSlcblxuZXhwb3J0IGNsYXNzIE54TGlzdENvbXBvbmVudCB7XG4gIHByaXZhdGUgX2NsYXNzTmFtZXM7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgdHlwZTogTnhMaXN0U2l6ZTtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBuZWdhdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIG9yZGVyZWRDaXJjbGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogU2V0cyB0aGUgdmlzdWFsIGFwcGVhcmFuY2Ugb2YgdGhlIGxpc3QuIFlvdSBjYW4gY29tYmluZSBkaWZmZXJlbnQgdmFsdWVzOlxuICAgKlxuICAgKiB4c21hbGwgfCBzbWFsbCB8IG5vcm1hbDogVGhlIGxpc3RlZCBpbnB1dCB2YWx1ZXMgYXJlIGV4cGFuZGVkIHRvIHRoZSB1bmRlcmx5aW5nIEJFTSBjb25mb3JtIHN0eWxlcyBiYXNlZFxuICAgKiBvbiBtb2RpZmllcnMuIERlZmF1bHRzIHRvIG5vcm1hbC5cbiAgICpcbiAgICogbmVnYXRpdmU6IERpc3BsYXkgdGhlIGxpc3Qgd2l0aCBhIG5lZ2F0aXZlIHNldCBvZiBzdHlsaW5nLlxuICAgKlxuICAgKiBvcmRlcmVkLWNpcmNsZTogRGlzcGxheSB0aGUgbGlzdCBpdGVtIG51bWJlcnMgaW4gYSBjb2xvciBmaWxsZWQgY2lyY2xlLlxuICAgKi9cbiAgQElucHV0KCdueExpc3QnKVxuICBzZXQgY2xhc3NOYW1lcyh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHRoaXMuX2NsYXNzTmFtZXMgPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fY2xhc3NOYW1lcyA9IHZhbHVlO1xuXG4gICAgY29uc3QgW3R5cGUgPSBudWxsXSA9IHRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL3hzbWFsbHxzbWFsbHxub3JtYWwvKSB8fCBbREVGQVVMVF9UWVBFXTtcbiAgICB0aGlzLnR5cGUgPSB0eXBlIGFzIGFueTtcblxuICAgIHRoaXMubmVnYXRpdmUgPSAhIXRoaXMuX2NsYXNzTmFtZXMubWF0Y2goL25lZ2F0aXZlLyk7XG4gICAgdGhpcy5vcmRlcmVkQ2lyY2xlID0gISF0aGlzLl9jbGFzc05hbWVzLm1hdGNoKC9vcmRlcmVkLWNpcmNsZS8pO1xuICB9XG5cbiAgZ2V0IGNsYXNzTmFtZXMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fY2xhc3NOYW1lcztcbiAgfVxufVxuIl19