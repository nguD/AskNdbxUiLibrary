/**
 * @fileoverview added by tsickle
 * Generated from: toggle.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { CdkTreeNodeToggle } from '@angular/cdk/tree';
import { Directive, Input } from '@angular/core';
/**
 * Wrapper for the CdkTree's toggle with NDBX design styles.
 * @template T
 */
var NxTreeNodeToggleDirective = /** @class */ (function (_super) {
    tslib_1.__extends(NxTreeNodeToggleDirective, _super);
    function NxTreeNodeToggleDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.recursive = false;
        return _this;
    }
    NxTreeNodeToggleDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[nxTreeNodeToggle]',
                    providers: [{ provide: CdkTreeNodeToggle, useExisting: NxTreeNodeToggleDirective }]
                },] }
    ];
    NxTreeNodeToggleDirective.propDecorators = {
        recursive: [{ type: Input, args: ['nxTreeNodeToggleRecursive',] }]
    };
    return NxTreeNodeToggleDirective;
}(CdkTreeNodeToggle));
export { NxTreeNodeToggleDirective };
if (false) {
    /** @type {?} */
    NxTreeNodeToggleDirective.prototype.recursive;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvdHJlZS8iLCJzb3VyY2VzIjpbInRvZ2dsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFLL0M7SUFJa0QscURBQW9CO0lBSnRFO1FBQUEscUVBTUM7UUFEcUMsZUFBUyxHQUFZLEtBQUssQ0FBQzs7SUFDakUsQ0FBQzs7Z0JBTkEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFdBQVcsRUFBRSx5QkFBeUIsRUFBQyxDQUFDO2lCQUNsRjs7OzRCQUVFLEtBQUssU0FBQywyQkFBMkI7O0lBQ3BDLGdDQUFDO0NBQUEsQUFORCxDQUlrRCxpQkFBaUIsR0FFbEU7U0FGWSx5QkFBeUI7OztJQUNwQyw4Q0FBK0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Nka1RyZWVOb2RlVG9nZ2xlfSBmcm9tICdAYW5ndWxhci9jZGsvdHJlZSc7XG5pbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFdyYXBwZXIgZm9yIHRoZSBDZGtUcmVlJ3MgdG9nZ2xlIHdpdGggTkRCWCBkZXNpZ24gc3R5bGVzLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbnhUcmVlTm9kZVRvZ2dsZV0nLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogQ2RrVHJlZU5vZGVUb2dnbGUsIHVzZUV4aXN0aW5nOiBOeFRyZWVOb2RlVG9nZ2xlRGlyZWN0aXZlfV1cbn0pXG5leHBvcnQgY2xhc3MgTnhUcmVlTm9kZVRvZ2dsZURpcmVjdGl2ZTxUPiBleHRlbmRzIENka1RyZWVOb2RlVG9nZ2xlPFQ+IHtcbiAgQElucHV0KCdueFRyZWVOb2RlVG9nZ2xlUmVjdXJzaXZlJykgcmVjdXJzaXZlOiBib29sZWFuID0gZmFsc2U7XG59XG4iXX0=