/**
 * @fileoverview added by tsickle
 * Generated from: rating/rating.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxIconComponent } from '@allianz/ngx-ndbx/icon';
import { ENTER, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Input, Output, QueryList, ViewChildren } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
var NxRatingComponent = /** @class */ (function () {
    function NxRatingComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._value = 0;
        this._disabled = false;
        this._negative = false;
        this._startLabel = null;
        this._endLabel = null;
        this._ariaLabel = ['1/5', '2/5', '3/5', '4/5', '5/5'];
        /**
         * An event is dispatched each time when the rating changes.
         */
        this.valueChange = new EventEmitter();
        this.onTouchedCallback = (/**
         * @return {?}
         */
        function () { });
        this.onChangeCallback = (/**
         * @param {?} option
         * @return {?}
         */
        function (option) { });
    }
    Object.defineProperty(NxRatingComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        /** Sets the selected rating 1 - 5. */
        set: /**
         * Sets the selected rating 1 - 5.
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) {
            this._value = coerceNumberProperty(newValue);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRatingComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        /** Whether the rating component should be disabled. */
        set: /**
         * Whether the rating component should be disabled.
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) {
            if (this._disabled === newValue) {
                return;
            }
            this._disabled = coerceBooleanProperty(newValue);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRatingComponent.prototype, "negative", {
        get: /**
         * @return {?}
         */
        function () {
            return this._negative;
        },
        /** Whether the negative colors be used. */
        set: /**
         * Whether the negative colors be used.
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) {
            if (this._negative === newValue) {
                return;
            }
            this._negative = coerceBooleanProperty(newValue);
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRatingComponent.prototype, "startLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._startLabel;
        },
        /** Sets the label painted at the start of the rating component. */
        set: /**
         * Sets the label painted at the start of the rating component.
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) {
            this._startLabel = newValue;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRatingComponent.prototype, "endLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._endLabel;
        },
        /** Sets the label painted at the end of the rating component. */
        set: /**
         * Sets the label painted at the end of the rating component.
         * @param {?} newValue
         * @return {?}
         */
        function (newValue) {
            this._endLabel = newValue;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxRatingComponent.prototype, "ariaLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return this._ariaLabel;
        },
        set: /**
         * @param {?} newAriaLabels
         * @return {?}
         */
        function (newAriaLabels) {
            this._ariaLabel = newAriaLabels;
            this._changeDetectorRef.markForCheck();
        },
        enumerable: true,
        configurable: true
    });
    /** Whether the given rating is selected. */
    /**
     * Whether the given rating is selected.
     * @param {?} index
     * @return {?}
     */
    NxRatingComponent.prototype.isSelected = /**
     * Whether the given rating is selected.
     * @param {?} index
     * @return {?}
     */
    function (index) {
        return index <= this.value;
    };
    /** Allows to set the rating. */
    /**
     * Allows to set the rating.
     * @param {?} value
     * @return {?}
     */
    NxRatingComponent.prototype.setSelection = /**
     * Allows to set the rating.
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (!this.disabled) {
            this.value = value;
            this.valueChange.emit(value);
            this.onTouchedCallback();
            this.onChangeCallback(this.value);
        }
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @param {?} event
     * @param {?} rating
     * @return {?}
     */
    NxRatingComponent.prototype.handleKeyUp = /**
     * \@docs-private
     * @param {?} event
     * @param {?} rating
     * @return {?}
     */
    function (event, rating) {
        /** @type {?} */
        var keyCode = event.keyCode;
        event.preventDefault();
        event.stopPropagation();
        if (keyCode === ENTER) {
            this.setSelection(rating);
        }
        if (keyCode === RIGHT_ARROW) {
            this.value = Math.min(this.value + 1, 5);
            /** @type {?} */
            var elementRef = this.icons.toArray()[this.value - 1];
            elementRef.nativeElement.focus();
        }
        if (keyCode === LEFT_ARROW) {
            this.value = Math.max(this.value - 1, 1);
            /** @type {?} */
            var elementRef = this.icons.toArray()[this.value - 1];
            elementRef.nativeElement.focus();
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NxRatingComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.value = value;
    };
    /**
     * @param {?} callback
     * @return {?}
     */
    NxRatingComponent.prototype.registerOnChange = /**
     * @param {?} callback
     * @return {?}
     */
    function (callback) {
        this.onChangeCallback = callback;
    };
    /**
     * @param {?} callback
     * @return {?}
     */
    NxRatingComponent.prototype.registerOnTouched = /**
     * @param {?} callback
     * @return {?}
     */
    function (callback) {
        this.onTouchedCallback = callback;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    NxRatingComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @param {?} rating
     * @return {?}
     */
    NxRatingComponent.prototype.getAriaLabel = /**
     * \@docs-private
     * @param {?} rating
     * @return {?}
     */
    function (rating) {
        return this.ariaLabel[rating - 1];
    };
    /** @docs-private */
    /**
     * \@docs-private
     * @param {?} rating
     * @return {?}
     */
    NxRatingComponent.prototype.getIconName = /**
     * \@docs-private
     * @param {?} rating
     * @return {?}
     */
    function (rating) {
        return 'star' + ((!this.isSelected(rating)) ? '-o' : '');
    };
    NxRatingComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-rating',
                    template: "  <div class=\"nx-rating__container\" role=\"radiogroup\">\n    <nx-icon *ngFor=\"let rating of [1,2,3,4,5]\"\n      (click)=\"setSelection(rating)\"\n      (keyup)=\"handleKeyUp($event, rating)\"\n      role=\"radio\"\n      [attr.aria-label]=\"getAriaLabel(rating)\"\n      [attr.aria-checked]=\"isSelected(rating)\"\n      [tabindex]=\"disabled ? -1 : 0\"\n      class=\"nx-rating__icon\"\n      [name]=\"getIconName(rating)\"\n      size=\"m\">\n    </nx-icon>\n  </div>\n  <div class=\"nx-rating__label\" *ngIf=\"startLabel || endLabel\">\n    <span class=\"nx-rating__label--start\">{{startLabel}}</span>\n    <span class=\"nx-rating__label--end\">{{endLabel}}</span>\n  </div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return NxRatingComponent; })),
                            multi: true
                        }
                    ],
                    host: {
                        '[class.nx-rating--negative]': 'negative',
                        '[class.nx-rating--disabled]': 'disabled',
                    },
                    styles: [":host{display:inline-block}:host(.nx-rating--negative) .nx-rating__icon,:host(.nx-rating--negative) .nx-rating__label{color:#fff}:host(.nx-rating--disabled){cursor:not-allowed;outline:0}:host(.nx-rating--disabled) .nx-rating__label{color:#c2c2c2;color:var(--rating-disabled-label-color,#c2c2c2)}:host(.nx-rating--disabled) .nx-rating__icon{color:#c2c2c2;color:var(--rating-disabled-icon-color,#c2c2c2);cursor:not-allowed}.nx-rating__container{display:flex}.nx-rating__label{display:flex;font-size:16px;font-size:var(--rating-label-font-size,16px);line-height:24px;line-height:var(--rating-label-line-height,24px);font-weight:400;font-weight:var(--rating-label-font-weight,400);letter-spacing:0;letter-spacing:var(--rating-label-letter-spacing,0);color:#414141;color:var(--rating-label-color,#414141)}.nx-rating__label--end{margin-left:auto}.nx-rating__icon{font-size:40px;font-size:var(--rating-icon-size,40px);color:#414141;color:var(--rating-icon-color,#414141);width:auto;background:0 0;border:none;margin-right:16px;cursor:pointer;outline:0}.nx-rating__icon:last-child{margin-right:0}:host-context([data-whatinput=keyboard]) .nx-rating__icon:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6);border-radius:4px}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]) .nx-rating__icon:focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}.nx-rating__icon{color:buttonText}:host(.nx-rating--disabled) .nx-rating__icon,:host(.nx-rating--disabled) .nx-rating__label{color:GrayText}.nx-rating__label{-ms-high-contrast-adjust:none}}"]
                }] }
    ];
    /** @nocollapse */
    NxRatingComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxRatingComponent.propDecorators = {
        value: [{ type: Input, args: ['nxValue',] }],
        disabled: [{ type: Input, args: ['nxDisabled',] }],
        negative: [{ type: Input, args: ['nxNegative',] }],
        startLabel: [{ type: Input, args: ['nxStartLabel',] }],
        endLabel: [{ type: Input, args: ['nxEndLabel',] }],
        ariaLabel: [{ type: Input, args: ['nxAriaLabel',] }],
        valueChange: [{ type: Output, args: ['nxValueChange',] }],
        icons: [{ type: ViewChildren, args: [NxIconComponent, { read: ElementRef },] }]
    };
    return NxRatingComponent;
}());
export { NxRatingComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._negative;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._startLabel;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._endLabel;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._ariaLabel;
    /**
     * An event is dispatched each time when the rating changes.
     * @type {?}
     */
    NxRatingComponent.prototype.valueChange;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRatingComponent.prototype.icons;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype.onTouchedCallback;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype.onChangeCallback;
    /**
     * @type {?}
     * @private
     */
    NxRatingComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,