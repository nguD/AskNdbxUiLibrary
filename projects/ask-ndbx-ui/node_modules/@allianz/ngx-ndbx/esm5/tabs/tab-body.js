/**
 * @fileoverview added by tsickle
 * Generated from: tabs/tab-body.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, Component, Input, ViewChild, ViewContainerRef } from '@angular/core';
import { NxTabComponent } from './tab';
import { NxTabGroupBase } from './tab-group-base';
/**
 * \@docs-private
 */
var NxTabBodyComponent = /** @class */ (function () {
    function NxTabBodyComponent(_tabGroup) {
        this._tabGroup = _tabGroup;
        this._active = false;
    }
    Object.defineProperty(NxTabBodyComponent.prototype, "active", {
        get: /**
         * @return {?}
         */
        function () {
            return this._active;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._active = coerceBooleanProperty(value);
            if (this._active) {
                this.attach();
            }
            else {
                this.detach();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NxTabBodyComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._appearanceSubscription = ((/** @type {?} */ (this._tabGroup)))._appearanceChange.subscribe((/**
         * @return {?}
         */
        function () {
            _this.detach();
        }));
    };
    /**
     * @return {?}
     */
    NxTabBodyComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._appearanceSubscription.unsubscribe();
    };
    /**
     * @return {?}
     */
    NxTabBodyComponent.prototype.attach = /**
     * @return {?}
     */
    function () {
        this._outlet.insert(this.tab.contentViewRef);
    };
    /**
     * @return {?}
     */
    NxTabBodyComponent.prototype.detach = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var index = this._outlet.indexOf(this.tab.contentViewRef);
        if (index !== -1) {
            this._outlet.detach(index);
        }
    };
    NxTabBodyComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-tab-body',
                    template: "<ng-container #outlet></ng-container>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{display:block}"]
                }] }
    ];
    /** @nocollapse */
    NxTabBodyComponent.ctorParameters = function () { return [
        { type: NxTabGroupBase }
    ]; };
    NxTabBodyComponent.propDecorators = {
        _outlet: [{ type: ViewChild, args: ['outlet', { static: true, read: ViewContainerRef },] }],
        tab: [{ type: Input }],
        active: [{ type: Input }]
    };
    return NxTabBodyComponent;
}());
export { NxTabBodyComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxTabBodyComponent.prototype._appearanceSubscription;
    /** @type {?} */
    NxTabBodyComponent.prototype._outlet;
    /** @type {?} */
    NxTabBodyComponent.prototype.tab;
    /**
     * @type {?}
     * @private
     */
    NxTabBodyComponent.prototype._active;
    /**
     * @type {?}
     * @private
     */
    NxTabBodyComponent.prototype._tabGroup;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWJvZHkuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC8iLCJzb3VyY2VzIjpbInRhYnMvdGFiLWJvZHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzFILE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7O0FBSWxEO0lBNEJFLDRCQUNVLFNBQXlCO1FBQXpCLGNBQVMsR0FBVCxTQUFTLENBQWdCO1FBaEIzQixZQUFPLEdBQVksS0FBSyxDQUFDO0lBZ0JNLENBQUM7SUFkeEMsc0JBQ0ksc0NBQU07Ozs7UUFRVjtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDOzs7OztRQVhELFVBQ1csS0FBYztZQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVDLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDaEIsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO2FBQ2Y7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO2FBQ2Y7UUFDSCxDQUFDOzs7T0FBQTs7OztJQVFELHFDQUFROzs7SUFBUjtRQUFBLGlCQUlDO1FBSEMsSUFBSSxDQUFDLHVCQUF1QixHQUFHLENBQUMsbUJBQUEsSUFBSSxDQUFDLFNBQVMsRUFBdUIsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFNBQVM7OztRQUFDO1lBQ2pHLEtBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQixDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7SUFFRCx3Q0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDN0MsQ0FBQzs7OztJQUVELG1DQUFNOzs7SUFBTjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELG1DQUFNOzs7SUFBTjs7WUFDUSxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7UUFDM0QsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDNUI7SUFDSCxDQUFDOztnQkFsREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxhQUFhO29CQUN2QixpREFBNEI7b0JBQzVCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFFaEQ7Ozs7Z0JBVFEsY0FBYzs7OzBCQWFwQixTQUFTLFNBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUU7c0JBRTVELEtBQUs7eUJBSUwsS0FBSzs7SUFvQ1IseUJBQUM7Q0FBQSxBQW5ERCxJQW1EQztTQTdDWSxrQkFBa0I7Ozs7OztJQUM3QixxREFBOEM7O0lBRTlDLHFDQUF5Rjs7SUFFekYsaUNBQTZCOzs7OztJQUU3QixxQ0FBaUM7Ozs7O0lBZ0IvQix1Q0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2VCb29sZWFuUHJvcGVydHkgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBOeFRhYkNvbXBvbmVudCB9IGZyb20gJy4vdGFiJztcbmltcG9ydCB7IE54VGFiR3JvdXBCYXNlIH0gZnJvbSAnLi90YWItZ3JvdXAtYmFzZSc7XG5pbXBvcnQgeyBOeFRhYkdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi90YWItZ3JvdXAnO1xuXG4vKiogQGRvY3MtcHJpdmF0ZSAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtdGFiLWJvZHknLFxuICB0ZW1wbGF0ZVVybDogJ3RhYi1ib2R5Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVVcmxzOiBbJy4vdGFiLWJvZHkuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIE54VGFiQm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBfYXBwZWFyYW5jZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIEBWaWV3Q2hpbGQoJ291dGxldCcsIHsgc3RhdGljOiB0cnVlLCByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIF9vdXRsZXQ6IFZpZXdDb250YWluZXJSZWY7XG5cbiAgQElucHV0KCkgdGFiOiBOeFRhYkNvbXBvbmVudDtcblxuICBwcml2YXRlIF9hY3RpdmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICBzZXQgYWN0aXZlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fYWN0aXZlID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICBpZiAodGhpcy5fYWN0aXZlKSB7XG4gICAgICB0aGlzLmF0dGFjaCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRldGFjaCgpO1xuICAgIH1cbiAgfVxuICBnZXQgYWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9hY3RpdmU7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF90YWJHcm91cDogTnhUYWJHcm91cEJhc2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuX2FwcGVhcmFuY2VTdWJzY3JpcHRpb24gPSAodGhpcy5fdGFiR3JvdXAgYXMgTnhUYWJHcm91cENvbXBvbmVudCkuX2FwcGVhcmFuY2VDaGFuZ2Uuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuZGV0YWNoKCk7XG4gICAgfSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLl9hcHBlYXJhbmNlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBhdHRhY2goKSB7XG4gICAgdGhpcy5fb3V0bGV0Lmluc2VydCh0aGlzLnRhYi5jb250ZW50Vmlld1JlZik7XG4gIH1cblxuICBkZXRhY2goKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLl9vdXRsZXQuaW5kZXhPZih0aGlzLnRhYi5jb250ZW50Vmlld1JlZik7XG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgdGhpcy5fb3V0bGV0LmRldGFjaChpbmRleCk7XG4gICAgfVxuICB9XG59XG4iXX0=