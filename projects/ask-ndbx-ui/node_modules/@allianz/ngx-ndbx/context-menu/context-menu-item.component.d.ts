import { ElementRef, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { Subject } from 'rxjs';
import { NxContextMenuComponent } from './context-menu.component';
/**
 * This directive is intended to be used inside an nx-context-menu tag.
 * It exists mostly to set the role attribute, disabled state and styling.
 */
export declare class NxContextMenuItemComponent implements OnDestroy {
    private _elementRef;
    private _changeDetectorRef;
    private _parentMenu;
    private _document;
    /** Stream that emits when the context menu item is hovered. */
    readonly _hovered: Subject<NxContextMenuItemComponent>;
    /** Whether the context menu item is disabled. */
    disabled: boolean;
    private _disabled;
    /** Whether the context menu item is highlighted. */
    _highlighted: boolean;
    /** Whether the context menu item acts as a trigger for a sub-menu. */
    _triggersSubmenu: boolean;
    constructor(_elementRef: ElementRef<HTMLElement>, document: any, _changeDetectorRef: ChangeDetectorRef, _parentMenu: NxContextMenuComponent);
    /** Focuses this context menu item. */
    focus(): void;
    ngOnDestroy(): void;
    /** Used to set the `tabindex`. */
    _getTabIndex(): string;
    /** Returns the host DOM element. */
    _getHostElement(): HTMLElement;
    /** Prevents the default element actions if it is disabled. */
    _checkDisabled(event: Event): void;
    /** Emits to the hover stream. */
    _handleMouseEnter(): void;
    /** Gets the label to be used when determining whether the option should be focused. */
    getLabel(): string;
}
