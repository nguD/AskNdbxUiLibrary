import { AfterContentInit, ChangeDetectorRef, DoCheck, EventEmitter, QueryList } from '@angular/core';
import { Subject } from 'rxjs';
import { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';
import { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';
import { SelectableCard } from './selectable-card';
import { NxSelectableCardChangeEvent } from './selectable-card-change-event';
import { NxErrorComponent } from '@allianz/ngx-ndbx/base';
export declare class NxSelectableCardComponent extends SelectableCard implements ControlValueAccessor, DoCheck, AfterContentInit {
    private _changeDetectorRef;
    private _errorStateMatcher;
    ngControl: NgControl;
    private _parentForm;
    private _parentFormGroup;
    private _id;
    private _checked;
    private _disabled;
    private _value;
    private _name;
    private _negative;
    private _tabindex;
    private _required;
    /** @docs-private */
    _errorListIds: string;
    /** @docs-private */
    _errorList: QueryList<NxErrorComponent>;
    /** @docs-private */
    errorState: boolean;
    /** @docs-private */
    stateChanges: Subject<void>;
    /** An event is dispatched each time the selectable card value is changed */
    selectionChange: EventEmitter<NxSelectableCardChangeEvent>;
    /** An event is dispatched each time the selectable card value is changed */
    checkedChange: EventEmitter<boolean>;
    /**
     * Id of the selectable card.
     *
     * If not set, the selectable card gets an incremented value by default.
     */
    id: string;
    /** Whether the selectable card  is checked. */
    checked: boolean;
    /** The value attribute of the native input element  */
    value: string;
    /** Whether the selectable card is disabled. */
    disabled: boolean;
    /** Whether the selectable card is negative. */
    negative: boolean;
    /** Whether the selectable card is required. */
    required: boolean;
    /** Name of the selectable card. */
    name: string;
    /** The tabIndex of the element */
    tabindex: string;
    constructor(_changeDetectorRef: ChangeDetectorRef, _errorStateMatcher: ErrorStateMatcher, ngControl: NgControl, _parentForm: NgForm, _parentFormGroup: FormGroupDirective);
    ngAfterContentInit(): void;
    /** @docs-private */
    onChangeCallback: (_: any) => void;
    registerOnChange(fn: any): void;
    onTouchedCallback: (_: any) => void;
    registerOnTouched(onTouched: any): void;
    setDisabledState?(isDisabled: boolean): void;
    writeValue(value: any): void;
    ngDoCheck(): void;
    /** @docs-private */
    updateErrorState(): void;
    /** Toggles the checked state of the selectable card . */
    toggle(): void;
    /** @docs-private */
    _onInputClick(event: Event): void;
    /** @docs-private */
    _onInteractionEvent(event: Event): void;
    /** @docs-private */
    private _emitChangeEvent;
}
