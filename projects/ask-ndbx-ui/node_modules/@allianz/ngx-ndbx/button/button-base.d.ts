import { ElementRef, ChangeDetectorRef } from '@angular/core';
/** Type of a button. */
export declare type NxButtonType = 'primary' | 'secondary' | 'tertiary' | 'cta' | 'emphasis';
/** Size of a button. */
export declare type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large';
/** @docs-private */
export declare class NxButtonBase {
    private _changeDetectorRef;
    private _elementRef;
    private _classNames;
    /** @docs-private */
    readonly isPrimary: boolean;
    /** @docs-private */
    readonly isSecondary: boolean;
    /** @docs-private */
    readonly isTertiary: boolean;
    /** @docs-private */
    readonly isCta: boolean;
    /** @docs-private */
    readonly isEmphasis: boolean;
    /** @docs-private */
    readonly isLarge: boolean;
    /** @docs-private */
    readonly isMedium: boolean;
    /** @docs-private */
    readonly isSmallMedium: boolean;
    /** @docs-private */
    readonly isSmall: boolean;
    /** @docs-private */
    readonly isBlock: boolean;
    /** @docs-private */
    readonly isNegative: boolean;
    /** @docs-private */
    type: NxButtonType;
    /** @docs-private */
    size: NxButtonSize;
    negative: boolean;
    block: boolean;
    constructor(_changeDetectorRef: ChangeDetectorRef, _elementRef: ElementRef);
    classNames: string;
    /**
     * @docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     */
    readonly elementRef: ElementRef<any>;
}
