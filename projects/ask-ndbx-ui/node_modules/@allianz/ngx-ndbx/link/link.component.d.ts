import { NxIconComponent } from '@allianz/ngx-ndbx/icon';
import { AfterContentInit, ElementRef, Renderer2, ChangeDetectorRef } from '@angular/core';
import { MappedStyles } from '@allianz/ngx-ndbx/core';
/** The size of the link. */
export declare type NxLinkSize = 'small' | 'large';
export declare class NxLinkComponent extends MappedStyles implements AfterContentInit {
    protected _renderer: Renderer2;
    private _changeDetectorRef;
    private _size;
    /** @docs-private */
    icon: NxIconComponent;
    /**
     * Sets the style of the link, thereby altering the visual appearance.
     *
     * You can use any combination of 'black', 'icon-right', 'negative', 'text' and 'block' (deprecated).
     */
    classNames: any;
    /** Sets the size of the link. Default: 'small'. */
    size: NxLinkSize;
    constructor(_elementRef: ElementRef, _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef);
    ngAfterContentInit(): void;
    /**
     * @docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     */
    readonly elementRef: ElementRef<any>;
}
