/**
 * @fileoverview added by tsickle
 * Generated from: datefield.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxIconModule } from '@allianz/ngx-ndbx/icon';
import { A11yModule } from '@angular/cdk/a11y';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NX_DATE_LOCALE_PROVIDER } from './adapter/index';
import { NxDatefieldDirective } from './datefield.directive';
import { NxCalendarComponent } from './datepicker/calendar';
import { NxCalendarBodyComponent } from './datepicker/calendar-body';
import { NxDatepickerIntl } from './datepicker/datepicker-intl';
import { NxDatepickerToggleComponent, NxDatepickerToggleIconComponent } from './datepicker/datepicker-toggle';
import { NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER, NxDatepickerComponent, NxDatepickerContentComponent, } from './datepicker/datepicker.component';
import { NxMonthViewComponent } from './datepicker/month-view';
import { NxMultiYearViewComponent } from './datepicker/multi-year-view';
import { NxYearViewComponent } from './datepicker/year-view';
export class NxDatefieldModule {
}
NxDatefieldModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    OverlayModule,
                    A11yModule,
                    NxIconModule
                ],
                providers: [
                    // Provide our NX_DATE_LOCALE to determine the current language
                    NX_DATE_LOCALE_PROVIDER,
                    NxDatepickerIntl,
                    NX_DATEPICKER_SCROLL_STRATEGY_PROVIDER
                ],
                declarations: [
                    NxDatefieldDirective,
                    NxDatepickerComponent,
                    NxDatepickerToggleIconComponent,
                    NxDatepickerToggleComponent,
                    NxDatepickerContentComponent,
                    NxCalendarComponent,
                    NxCalendarBodyComponent,
                    NxMonthViewComponent,
                    NxMultiYearViewComponent,
                    NxYearViewComponent
                ],
                exports: [
                    NxDatefieldDirective,
                    NxDatepickerComponent,
                    NxDatepickerToggleIconComponent,
                    NxDatepickerToggleComponent,
                    NxCalendarComponent,
                    NxCalendarBodyComponent,
                    NxMonthViewComponent,
                    NxMultiYearViewComponent,
                    NxYearViewComponent
                ],
                entryComponents: [
                    NxDatepickerContentComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZWZpZWxkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4L2RhdGVmaWVsZC8iLCJzb3VyY2VzIjpbImRhdGVmaWVsZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RyxPQUFPLEVBQ0wsc0NBQXNDLEVBQ3RDLHFCQUFxQixFQUNyQiw0QkFBNEIsR0FDN0IsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQTBDN0QsTUFBTSxPQUFPLGlCQUFpQjs7O1lBeEM3QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osYUFBYTtvQkFDYixVQUFVO29CQUNWLFlBQVk7aUJBQ2I7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULCtEQUErRDtvQkFDL0QsdUJBQXVCO29CQUN2QixnQkFBZ0I7b0JBQ2hCLHNDQUFzQztpQkFDdkM7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLG9CQUFvQjtvQkFDcEIscUJBQXFCO29CQUNyQiwrQkFBK0I7b0JBQy9CLDJCQUEyQjtvQkFDM0IsNEJBQTRCO29CQUM1QixtQkFBbUI7b0JBQ25CLHVCQUF1QjtvQkFDdkIsb0JBQW9CO29CQUNwQix3QkFBd0I7b0JBQ3hCLG1CQUFtQjtpQkFDcEI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLG9CQUFvQjtvQkFDcEIscUJBQXFCO29CQUNyQiwrQkFBK0I7b0JBQy9CLDJCQUEyQjtvQkFDM0IsbUJBQW1CO29CQUNuQix1QkFBdUI7b0JBQ3ZCLG9CQUFvQjtvQkFDcEIsd0JBQXdCO29CQUN4QixtQkFBbUI7aUJBQ3BCO2dCQUNELGVBQWUsRUFBRTtvQkFDZiw0QkFBNEI7aUJBQzdCO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOeEljb25Nb2R1bGUgfSBmcm9tICdAYWxsaWFuei9uZ3gtbmRieC9pY29uJztcbmltcG9ydCB7IEExMXlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBPdmVybGF5TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE5YX0RBVEVfTE9DQUxFX1BST1ZJREVSIH0gZnJvbSAnLi9hZGFwdGVyL2luZGV4JztcbmltcG9ydCB7IE54RGF0ZWZpZWxkRGlyZWN0aXZlIH0gZnJvbSAnLi9kYXRlZmllbGQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE54Q2FsZW5kYXJDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIvY2FsZW5kYXInO1xuaW1wb3J0IHsgTnhDYWxlbmRhckJvZHlDb21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIvY2FsZW5kYXItYm9keSc7XG5pbXBvcnQgeyBOeERhdGVwaWNrZXJJbnRsIH0gZnJvbSAnLi9kYXRlcGlja2VyL2RhdGVwaWNrZXItaW50bCc7XG5pbXBvcnQgeyBOeERhdGVwaWNrZXJUb2dnbGVDb21wb25lbnQsIE54RGF0ZXBpY2tlclRvZ2dsZUljb25Db21wb25lbnQgfSBmcm9tICcuL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci10b2dnbGUnO1xuaW1wb3J0IHtcbiAgTlhfREFURVBJQ0tFUl9TQ1JPTExfU1RSQVRFR1lfUFJPVklERVIsXG4gIE54RGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgTnhEYXRlcGlja2VyQ29udGVudENvbXBvbmVudCxcbn0gZnJvbSAnLi9kYXRlcGlja2VyL2RhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE54TW9udGhWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9kYXRlcGlja2VyL21vbnRoLXZpZXcnO1xuaW1wb3J0IHsgTnhNdWx0aVllYXJWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9kYXRlcGlja2VyL211bHRpLXllYXItdmlldyc7XG5pbXBvcnQgeyBOeFllYXJWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9kYXRlcGlja2VyL3llYXItdmlldyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgT3ZlcmxheU1vZHVsZSxcbiAgICBBMTF5TW9kdWxlLFxuICAgIE54SWNvbk1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICAvLyBQcm92aWRlIG91ciBOWF9EQVRFX0xPQ0FMRSB0byBkZXRlcm1pbmUgdGhlIGN1cnJlbnQgbGFuZ3VhZ2VcbiAgICBOWF9EQVRFX0xPQ0FMRV9QUk9WSURFUixcbiAgICBOeERhdGVwaWNrZXJJbnRsLFxuICAgIE5YX0RBVEVQSUNLRVJfU0NST0xMX1NUUkFURUdZX1BST1ZJREVSXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE54RGF0ZWZpZWxkRGlyZWN0aXZlLFxuICAgIE54RGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJUb2dnbGVJY29uQ29tcG9uZW50LFxuICAgIE54RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJDb250ZW50Q29tcG9uZW50LFxuICAgIE54Q2FsZW5kYXJDb21wb25lbnQsXG4gICAgTnhDYWxlbmRhckJvZHlDb21wb25lbnQsXG4gICAgTnhNb250aFZpZXdDb21wb25lbnQsXG4gICAgTnhNdWx0aVllYXJWaWV3Q29tcG9uZW50LFxuICAgIE54WWVhclZpZXdDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE54RGF0ZWZpZWxkRGlyZWN0aXZlLFxuICAgIE54RGF0ZXBpY2tlckNvbXBvbmVudCxcbiAgICBOeERhdGVwaWNrZXJUb2dnbGVJY29uQ29tcG9uZW50LFxuICAgIE54RGF0ZXBpY2tlclRvZ2dsZUNvbXBvbmVudCxcbiAgICBOeENhbGVuZGFyQ29tcG9uZW50LFxuICAgIE54Q2FsZW5kYXJCb2R5Q29tcG9uZW50LFxuICAgIE54TW9udGhWaWV3Q29tcG9uZW50LFxuICAgIE54TXVsdGlZZWFyVmlld0NvbXBvbmVudCxcbiAgICBOeFllYXJWaWV3Q29tcG9uZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIE54RGF0ZXBpY2tlckNvbnRlbnRDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOeERhdGVmaWVsZE1vZHVsZSB7IH1cbiJdfQ==