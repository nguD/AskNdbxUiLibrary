/**
 * @fileoverview added by tsickle
 * Generated from: single/single-step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { NxProgressStepperDirective } from './../progress-stepper.component';
export class NxSingleStepperComponent extends NxProgressStepperDirective {
    constructor() {
        super(...arguments);
        this._rightLabel = 'Next step:';
    }
    /**
     * Sets the label on the right showing the next step.
     * @return {?}
     */
    get rightLabel() { return this._rightLabel; }
    /**
     * @param {?} v
     * @return {?}
     */
    set rightLabel(v) { this._rightLabel = v; }
    /**
     * \@docs-private
     * @return {?}
     */
    get progress() {
        return (this.selectedIndex + 1) / this.count;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get currentLabel() {
        /** @type {?} */
        const step = this.currentStep;
        /** @type {?} */
        const label = step.stepLabel || step.label;
        return `
    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}
    `;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get nextLabel() {
        /** @type {?} */
        const step = this.nextStep;
        if (step) {
            /** @type {?} */
            const label = step.stepLabel || step.label;
            return `
        ${this.rightLabel} ${label}
      `;
        }
        return null;
    }
}
NxSingleStepperComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-single-stepper',
                template: "<div class=\"nx-single-step-container\">\n  <span *ngIf=\"title\" class=\"nx-single-step__title\">{{title}}</span>\n  <span class=\"nx-progress-stepper__title\">\n    <ng-content select=\"nx-label\"></ng-content>\n  </span>\n\n  <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n  <div class=\"nx-single-step__infos\">\n    <div class=\"nx-single-step__current\">\n      {{ currentLabel }}\n    </div>\n    <div class=\"nx-single-step__next\">\n      {{ nextLabel }}\n    </div>\n  </div>\n\n  <div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n  </div>\n</div>\n\n<div\n  *ngFor=\"let step of _steps; let i = index\"\n  class=\"nx-progress-stepper__content\"\n  role=\"tabpanel\"\n  [id]=\"_getStepContentId(i)\"\n  [attr.aria-label]=\"currentLabel\"\n  [attr.aria-expanded]=\"selectedIndex === i\"\n>\n  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n",
                providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }],
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden}.nx-progress-stepper__mobile-label{display:none;color:#414141;color:var(--progress-indicator-mobile-color,#414141);font-size:16px;font-size:var(--progress-indicator-mobile-font-size,16px);line-height:24px;line-height:var(--progress-indicator-mobile-line-height,24px);font-weight:400;font-weight:var(--progress-indicator-mobile-font-weight,400);letter-spacing:0;letter-spacing:var(--progress-indicator-mobile-letter-spacing,0)}@media (max-width:703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}", ":host{display:block}.nx-single-step__infos{display:flex;font-size:16px;font-size:var(--single-stepper-step-font-size,16px);line-height:24px;line-height:var(--single-stepper-step-line-height,24px);font-weight:300;font-weight:var(--single-stepper-step-font-weight,300);letter-spacing:0;letter-spacing:var(--single-stepper-step-letter-spacing,0);color:#414141;color:var(--single-stepper-step-color,#414141);margin-top:8px}.nx-single-step__title,nx-progressbar{margin-bottom:8px;display:block}@media (max-width:703px){.nx-single-step__infos,nx-progressbar{display:none}}.nx-single-step__title{font-size:20px;font-size:var(--progress-stepper-label-font-size,20px);line-height:28px;line-height:var(--progress-stepper-label-line-height,28px);font-weight:300;font-weight:var(--progress-stepper-label-font-weight,300);letter-spacing:.2px;letter-spacing:var(--progress-stepper-label-letter-spacing,.2px);margin-bottom:24px}@media (min-width:320px){.nx-single-step__title{display:block}}.nx-single-step__next{margin-left:auto}@media (max-width:703px){.nx-single-step__next{display:none}}"]
            }] }
];
NxSingleStepperComponent.propDecorators = {
    rightLabel: [{ type: Input, args: ['nextLabel',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxSingleStepperComponent.prototype._rightLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvcHJvZ3Jlc3Mtc3RlcHBlci8iLCJzb3VyY2VzIjpbInNpbmdsZS9zaW5nbGUtc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQVU3RSxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsMEJBQTBCO0lBUnhFOztRQWNVLGdCQUFXLEdBQVcsWUFBWSxDQUFDO0lBZ0M3QyxDQUFDOzs7OztJQXBDQyxJQUNJLFVBQVUsS0FBYSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDOzs7OztJQUNyRCxJQUFJLFVBQVUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7OztJQUszQyxJQUFJLFFBQVE7UUFDVixPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQy9DLENBQUM7Ozs7O0lBR0QsSUFBSSxZQUFZOztjQUNSLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVzs7Y0FDdkIsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUs7UUFFMUMsT0FBTztNQUNMLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUs7S0FDeEUsQ0FBQztJQUNKLENBQUM7Ozs7O0lBR0QsSUFBSSxTQUFTOztjQUNMLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUTtRQUUxQixJQUFJLElBQUksRUFBRTs7a0JBQ0YsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUs7WUFFMUMsT0FBTztVQUNILElBQUksQ0FBQyxVQUFVLElBQUksS0FBSztPQUMzQixDQUFDO1NBQ0g7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtnQkFDN0IsNjVCQUEyQztnQkFFM0MsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsV0FBVyxFQUFFLHdCQUF3QixFQUFDLENBQUM7Z0JBQ3pGLG1CQUFtQixFQUFFLEtBQUs7Z0JBQzFCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7O3lCQUdFLEtBQUssU0FBQyxXQUFXOzs7Ozs7O0lBSWxCLCtDQUEyQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlIH0gZnJvbSAnLi8uLi9wcm9ncmVzcy1zdGVwcGVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LXNpbmdsZS1zdGVwcGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpbmdsZS1zdGVwLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4uL3Byb2dyZXNzLXN0ZXBwZXIuY29tcG9uZW50LnNjc3MnLCAnLi9zaW5nbGUtc3RlcC5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogTnhQcm9ncmVzc1N0ZXBwZXJEaXJlY3RpdmUsIHVzZUV4aXN0aW5nOiBOeFNpbmdsZVN0ZXBwZXJDb21wb25lbnR9XSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE54U2luZ2xlU3RlcHBlckNvbXBvbmVudCBleHRlbmRzIE54UHJvZ3Jlc3NTdGVwcGVyRGlyZWN0aXZlIHtcbiAgLyoqIFNldHMgdGhlIGxhYmVsIG9uIHRoZSByaWdodCBzaG93aW5nIHRoZSBuZXh0IHN0ZXAuICovXG4gIEBJbnB1dCgnbmV4dExhYmVsJylcbiAgZ2V0IHJpZ2h0TGFiZWwoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuX3JpZ2h0TGFiZWw7IH1cbiAgc2V0IHJpZ2h0TGFiZWwodikgeyB0aGlzLl9yaWdodExhYmVsID0gdjsgfVxuXG4gIHByaXZhdGUgX3JpZ2h0TGFiZWw6IHN0cmluZyA9ICdOZXh0IHN0ZXA6JztcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBnZXQgcHJvZ3Jlc3MoKSB7XG4gICAgcmV0dXJuICh0aGlzLnNlbGVjdGVkSW5kZXggKyAxKSAvIHRoaXMuY291bnQ7XG4gIH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBnZXQgY3VycmVudExhYmVsKCkge1xuICAgIGNvbnN0IHN0ZXAgPSB0aGlzLmN1cnJlbnRTdGVwO1xuICAgIGNvbnN0IGxhYmVsID0gc3RlcC5zdGVwTGFiZWwgfHwgc3RlcC5sYWJlbDtcblxuICAgIHJldHVybiBgXG4gICAgJHt0aGlzLmN1cnJlbnRTdGVwTGFiZWx9ICR7dGhpcy5zZWxlY3RlZEluZGV4ICsgMX0vJHt0aGlzLmNvdW50fTogJHtsYWJlbH1cbiAgICBgO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0IG5leHRMYWJlbCgpIHtcbiAgICBjb25zdCBzdGVwID0gdGhpcy5uZXh0U3RlcDtcblxuICAgIGlmIChzdGVwKSB7XG4gICAgICBjb25zdCBsYWJlbCA9IHN0ZXAuc3RlcExhYmVsIHx8IHN0ZXAubGFiZWw7XG5cbiAgICAgIHJldHVybiBgXG4gICAgICAgICR7dGhpcy5yaWdodExhYmVsfSAke2xhYmVsfVxuICAgICAgYDtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG59XG4iXX0=