/**
 * @fileoverview added by tsickle
 * Generated from: multi/multi-step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input, QueryList, ContentChildren } from '@angular/core';
import { NxProgressStepperDirective } from './../progress-stepper.component';
import { NxMultiStepperGroupComponent } from './multi-step-group.component';
export class NxMultiStepperComponent extends NxProgressStepperDirective {
    constructor() {
        super(...arguments);
        this._direction = 'horizontal';
    }
    /**
     * Sets the direction of the multi stepper.
     * @return {?}
     */
    get direction() {
        return this._direction;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set direction(value) {
        this._direction = value;
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        if (this.groups.length) {
            this._steps.reset(this._stepsInGroups);
        }
        this.groups.changes.subscribe((/**
         * @return {?}
         */
        () => {
            this._steps.reset(this._stepsInGroups);
        }));
    }
    /**
     * @param {?} index
     * @return {?}
     */
    _stepDisabled(index) {
        /** @type {?} */
        const steps = this.steps.toArray();
        if (this.linear && index >= 0) {
            return steps.slice(0, index).some((/**
             * @param {?} step
             * @return {?}
             */
            step => {
                /** @type {?} */
                const control = step.stepControl;
                /** @type {?} */
                const isIncomplete = control
                    ? control.invalid || control.pending || !step.interacted
                    : !step.completed;
                return isIncomplete && !step.optional;
            }));
        }
        return false;
    }
    /**
     * @private
     * @return {?}
     */
    get _stepsInGroups() {
        if (this.groups.length) {
            return this.groups
                .reduce((/**
             * @param {?} steps
             * @param {?} group
             * @return {?}
             */
            (steps, group) => steps.concat(group.steps.toArray())), []);
        }
        return [];
    }
    /**
     * @param {?} step
     * @return {?}
     */
    _getIndex(step) {
        return this.steps.toArray().indexOf(step);
    }
    /**
     * @param {?} groupIndex
     * @return {?}
     */
    _isGroupActive(groupIndex) {
        return this.selectedIndex >= this.getGroupItemIndex(groupIndex);
    }
    /**
     * @param {?} groupIndex
     * @return {?}
     */
    _isGroupDisabled(groupIndex) {
        return this._stepDisabled(this.getGroupItemIndex(groupIndex));
    }
    /**
     * @private
     * @param {?} groupIndex
     * @return {?}
     */
    getGroupItemIndex(groupIndex) {
        /** @type {?} */
        let count = 0;
        /** @type {?} */
        const groups = this.groups.toArray();
        for (let i = 0; i < groupIndex; i++) {
            count += groups[i].steps.length;
        }
        return count;
    }
}
NxMultiStepperComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-multi-stepper',
                template: "<span *ngIf=\"title && direction === 'horizontal'\" class=\"nx-single-step__title\">{{title}}</span>\n<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n  <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\">\n  <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n    <ng-container *ngFor=\"let step of _steps;let i = index; let isLast = last; let isFirst = first\">\n\n      <nx-multi-step-item\n        (click)=\"!_stepDisabled(i) && step.select()\"\n        [last]=\"isLast\"\n        [label]=\"step.stepLabel || step.label\"\n        [completed]=\"step.completed\"\n        [selected]=\"selectedIndex === i\"\n        [active]=\"selectedIndex > i\"\n        [disabled]=\"_stepDisabled(i)\"\n        [direction]=\"direction\">\n      </nx-multi-step-item>\n    </ng-container>\n  </ng-container>\n</div>\n\n\n<div class=\"labels-container\"\n     *ngIf=\"direction === 'horizontal'\">\n  <div class=\"label\" [attr.label]=\"step.label\" *ngFor=\"let step of _steps;let i = index; \"\n       [ngClass]=\"{'is-disabled':_stepDisabled(i), 'is-selected': (selectedIndex === i)}\"\n       (click)=\"!_stepDisabled(i) && step.select()\">\n    <span>{{ step.label }}</span>\n  </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n  {{currentLabel}}\n</div>\n\n<div *ngFor=\"let step of _steps; let i = index\"\n      class=\"nx-progress-stepper__content\" role=\"tabpanel\"\n      [id]=\"_getStepContentId(i)\"\n      [attr.aria-label]=\"currentLabel\"\n      [attr.aria-expanded]=\"selectedIndex === i\">\n  <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n  <ng-container *ngFor=\"let group of groups; let i = index;\">\n    <div class=\"nx-multi-stepper__group\">\n      <div class=\"nx-multi-stepper__group-label\"\n          [class.is-active]=\"_isGroupActive(i)\"\n          [class.is-disabled]=\"_isGroupDisabled(i)\">\n        {{ group.label }}\n      </div>\n\n      <div class=\"nx-multi-stepper__group-items\">\n        <ng-container *ngFor=\"let step of group.steps; let isLast = last;\">\n          <nx-multi-step-item\n              (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n              [last]=\"isLast\"\n              [label]=\"step.stepLabel || step.label\"\n              [completed]=\"step.completed\"\n              [selected]=\"selectedIndex === _getIndex(step)\"\n              [active]=\"selectedIndex > _getIndex(step)\"\n              [disabled]=\"_stepDisabled(_getIndex(step))\"\n              [direction]=\"direction\">\n          </nx-multi-step-item>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n",
                providers: [
                    {
                        provide: NxProgressStepperDirective,
                        useExisting: NxMultiStepperComponent
                    }
                ],
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.nx-multi-stepper--vertical]': 'direction === "vertical"'
                },
                styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden}.nx-progress-stepper__mobile-label{display:none;color:#414141;color:var(--progress-indicator-mobile-color,#414141);font-size:16px;font-size:var(--progress-indicator-mobile-font-size,16px);line-height:24px;line-height:var(--progress-indicator-mobile-line-height,24px);font-weight:400;font-weight:var(--progress-indicator-mobile-font-weight,400);letter-spacing:0;letter-spacing:var(--progress-indicator-mobile-letter-spacing,0)}@media (max-width:703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}", ":host{width:100%}@media (min-width:704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:#c2c2c2;border-left-color:var(--multi-stepper-line-color,#c2c2c2)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-4px;margin-bottom:-4px;border-left-style:solid;border-left-color:#007ab3;border-left-color:var(--multi-stepper-line-filled-color,#007ab3)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:16px;font-size:var(--multi-stepper-step-font-size,16px);line-height:24px;line-height:var(--multi-stepper-step-line-height,24px);font-weight:400;font-weight:var(--multi-stepper-step-font-weight,400);letter-spacing:0;letter-spacing:var(--multi-stepper-step-letter-spacing,0);color:#414141;color:var(--multi-stepper-step-color,#414141);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:#c2c2c2;color:var(--multi-stepper-step-disabled-color,#c2c2c2);cursor:not-allowed}@media screen and (-ms-high-contrast:active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace;color:buttonText}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width:703px){:host .labels-container{display:none}.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto}.nx-multi-stepper__group-label{font-size:20px;font-size:var(--multi-stepper-group-font-size,20px);line-height:28px;line-height:var(--multi-stepper-group-line-height,28px);font-weight:400;font-weight:var(--multi-stepper-group-font-weight,400);letter-spacing:.2px;letter-spacing:var(--multi-stepper-group-letter-spacing,.2px);color:#414141;color:var(--multi-stepper-group-color,#414141)}.nx-multi-stepper__group-label.is-disabled{color:#c2c2c2;color:var(--multi-stepper-group-disabled-color,#c2c2c2)}"]
            }] }
];
NxMultiStepperComponent.propDecorators = {
    groups: [{ type: ContentChildren, args: [NxMultiStepperGroupComponent, { descendants: true },] }],
    direction: [{ type: Input }]
};
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxMultiStepperComponent.prototype.groups;
    /**
     * @type {?}
     * @private
     */
    NxMultiStepperComponent.prototype._direction;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9wcm9ncmVzcy1zdGVwcGVyLyIsInNvdXJjZXMiOlsibXVsdGkvbXVsdGktc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxLQUFLLEVBRUwsU0FBUyxFQUNULGVBQWUsRUFDaEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDBCQUEwQixFQUFtQixNQUFNLGlDQUFpQyxDQUFDO0FBQzlGLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBd0I1RSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsMEJBQTBCO0lBbkJ2RTs7UUFrQ1UsZUFBVSxHQUE0QixZQUFZLENBQUM7SUEyRDdELENBQUM7Ozs7O0lBbEVDLElBQ0ksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN6QixDQUFDOzs7OztJQUNELElBQUksU0FBUyxDQUFDLEtBQThCO1FBQzFDLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzFCLENBQUM7Ozs7SUFHRCxrQkFBa0I7UUFDaEIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDeEM7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTOzs7UUFBQyxHQUFHLEVBQUU7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3pDLENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxhQUFhLENBQUMsS0FBYTs7Y0FDbkIsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFO1FBRWxDLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFO1lBQzdCLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSTs7OztZQUFDLElBQUksQ0FBQyxFQUFFOztzQkFDakMsT0FBTyxHQUFHLElBQUksQ0FBQyxXQUFXOztzQkFDMUIsWUFBWSxHQUFHLE9BQU87b0JBQzFCLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtvQkFDeEQsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVM7Z0JBQ25CLE9BQU8sWUFBWSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUN4QyxDQUFDLEVBQUMsQ0FBQztTQUNKO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOzs7OztJQUVELElBQVksY0FBYztRQUN4QixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3RCLE9BQU8sSUFBSSxDQUFDLE1BQU07aUJBQ2YsTUFBTTs7Ozs7WUFBQyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ3RFO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDOzs7OztJQUVELFNBQVMsQ0FBQyxJQUFxQjtRQUM3QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVDLENBQUM7Ozs7O0lBRUQsY0FBYyxDQUFDLFVBQWtCO1FBQy9CLE9BQU8sSUFBSSxDQUFDLGFBQWEsSUFBSSxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEUsQ0FBQzs7Ozs7SUFFRCxnQkFBZ0IsQ0FBQyxVQUFrQjtRQUNqQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7Ozs7O0lBRU8saUJBQWlCLENBQUMsVUFBa0I7O1lBQ3RDLEtBQUssR0FBRyxDQUFDOztjQUNQLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtRQUVwQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ25DLEtBQUssSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztTQUNqQztRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7O1lBNUZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1Qix5dUZBQTBDO2dCQUsxQyxTQUFTLEVBQUU7b0JBQ1Q7d0JBQ0UsT0FBTyxFQUFFLDBCQUEwQjt3QkFDbkMsV0FBVyxFQUFFLHVCQUF1QjtxQkFDckM7aUJBQ0Y7Z0JBQ0QsbUJBQW1CLEVBQUUsS0FBSztnQkFDMUIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLElBQUksRUFBRTtvQkFDSixvQ0FBb0MsRUFBRSwwQkFBMEI7aUJBQ2pFOzthQUNGOzs7cUJBS0UsZUFBZSxTQUFDLDRCQUE0QixFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTt3QkFJbkUsS0FBSzs7Ozs7OztJQUpOLHlDQUNnRDs7Ozs7SUFVaEQsNkNBQTJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIFF1ZXJ5TGlzdCxcbiAgQ29udGVudENoaWxkcmVuXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnhQcm9ncmVzc1N0ZXBwZXJEaXJlY3RpdmUsIE54U3RlcENvbXBvbmVudCB9IGZyb20gJy4vLi4vcHJvZ3Jlc3Mtc3RlcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhNdWx0aVN0ZXBwZXJHcm91cENvbXBvbmVudCB9IGZyb20gJy4vbXVsdGktc3RlcC1ncm91cC5jb21wb25lbnQnO1xuXG4vKiogRGlyZWN0aW9uIG9mIHRoZSBtdWx0aSBzdGVwcGVyICovXG5leHBvcnQgdHlwZSBOeE11bHRpU3RlcHBlckRpcmVjdGlvbiA9ICd2ZXJ0aWNhbCcgfCAnaG9yaXpvbnRhbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LW11bHRpLXN0ZXBwZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vbXVsdGktc3RlcC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogW1xuICAgICcuLi9wcm9ncmVzcy1zdGVwcGVyLmNvbXBvbmVudC5zY3NzJyxcbiAgICAnLi9tdWx0aS1zdGVwLmNvbXBvbmVudC5zY3NzJ1xuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSxcbiAgICAgIHVzZUV4aXN0aW5nOiBOeE11bHRpU3RlcHBlckNvbXBvbmVudFxuICAgIH1cbiAgXSxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5ueC1tdWx0aS1zdGVwcGVyLS12ZXJ0aWNhbF0nOiAnZGlyZWN0aW9uID09PSBcInZlcnRpY2FsXCInXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhNdWx0aVN0ZXBwZXJDb21wb25lbnQgZXh0ZW5kcyBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZVxuICBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIEBDb250ZW50Q2hpbGRyZW4oTnhNdWx0aVN0ZXBwZXJHcm91cENvbXBvbmVudCwgeyBkZXNjZW5kYW50czogdHJ1ZSB9KVxuICBncm91cHM6IFF1ZXJ5TGlzdDxOeE11bHRpU3RlcHBlckdyb3VwQ29tcG9uZW50PjtcblxuICAvKiogU2V0cyB0aGUgZGlyZWN0aW9uIG9mIHRoZSBtdWx0aSBzdGVwcGVyLiAqL1xuICBASW5wdXQoKVxuICBnZXQgZGlyZWN0aW9uKCk6IE54TXVsdGlTdGVwcGVyRGlyZWN0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5fZGlyZWN0aW9uO1xuICB9XG4gIHNldCBkaXJlY3Rpb24odmFsdWU6IE54TXVsdGlTdGVwcGVyRGlyZWN0aW9uKSB7XG4gICAgdGhpcy5fZGlyZWN0aW9uID0gdmFsdWU7XG4gIH1cbiAgcHJpdmF0ZSBfZGlyZWN0aW9uOiBOeE11bHRpU3RlcHBlckRpcmVjdGlvbiA9ICdob3Jpem9udGFsJztcblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgaWYgKHRoaXMuZ3JvdXBzLmxlbmd0aCkge1xuICAgICAgdGhpcy5fc3RlcHMucmVzZXQodGhpcy5fc3RlcHNJbkdyb3Vwcyk7XG4gICAgfVxuXG4gICAgdGhpcy5ncm91cHMuY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgdGhpcy5fc3RlcHMucmVzZXQodGhpcy5fc3RlcHNJbkdyb3Vwcyk7XG4gICAgfSk7XG4gIH1cblxuICBfc3RlcERpc2FibGVkKGluZGV4OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICBjb25zdCBzdGVwcyA9IHRoaXMuc3RlcHMudG9BcnJheSgpO1xuXG4gICAgaWYgKHRoaXMubGluZWFyICYmIGluZGV4ID49IDApIHtcbiAgICAgIHJldHVybiBzdGVwcy5zbGljZSgwLCBpbmRleCkuc29tZShzdGVwID0+IHtcbiAgICAgICAgY29uc3QgY29udHJvbCA9IHN0ZXAuc3RlcENvbnRyb2w7XG4gICAgICAgIGNvbnN0IGlzSW5jb21wbGV0ZSA9IGNvbnRyb2xcbiAgICAgICAgICA/IGNvbnRyb2wuaW52YWxpZCB8fCBjb250cm9sLnBlbmRpbmcgfHwgIXN0ZXAuaW50ZXJhY3RlZFxuICAgICAgICAgIDogIXN0ZXAuY29tcGxldGVkO1xuICAgICAgICByZXR1cm4gaXNJbmNvbXBsZXRlICYmICFzdGVwLm9wdGlvbmFsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgX3N0ZXBzSW5Hcm91cHMoKTogTnhTdGVwQ29tcG9uZW50W10ge1xuICAgIGlmICh0aGlzLmdyb3Vwcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdyb3Vwc1xuICAgICAgICAucmVkdWNlKChzdGVwcywgZ3JvdXApID0+IHN0ZXBzLmNvbmNhdChncm91cC5zdGVwcy50b0FycmF5KCkpLCBbXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgX2dldEluZGV4KHN0ZXA6IE54U3RlcENvbXBvbmVudCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc3RlcHMudG9BcnJheSgpLmluZGV4T2Yoc3RlcCk7XG4gIH1cblxuICBfaXNHcm91cEFjdGl2ZShncm91cEluZGV4OiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEluZGV4ID49IHRoaXMuZ2V0R3JvdXBJdGVtSW5kZXgoZ3JvdXBJbmRleCk7XG4gIH1cblxuICBfaXNHcm91cERpc2FibGVkKGdyb3VwSW5kZXg6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLl9zdGVwRGlzYWJsZWQodGhpcy5nZXRHcm91cEl0ZW1JbmRleChncm91cEluZGV4KSk7XG4gIH1cblxuICBwcml2YXRlIGdldEdyb3VwSXRlbUluZGV4KGdyb3VwSW5kZXg6IG51bWJlcik6IG51bWJlciB7XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBjb25zdCBncm91cHMgPSB0aGlzLmdyb3Vwcy50b0FycmF5KCk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyb3VwSW5kZXg7IGkrKykge1xuICAgICAgY291bnQgKz0gZ3JvdXBzW2ldLnN0ZXBzLmxlbmd0aDtcbiAgICB9XG5cbiAgICByZXR1cm4gY291bnQ7XG4gIH1cbn1cbiJdfQ==