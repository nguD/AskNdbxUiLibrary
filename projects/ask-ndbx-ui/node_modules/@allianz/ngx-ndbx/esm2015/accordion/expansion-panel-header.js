/**
 * @fileoverview added by tsickle
 * Generated from: accordion/expansion-panel-header.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ENTER, SPACE } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, Host } from '@angular/core';
import { merge, Subscription } from 'rxjs';
import { filter } from 'rxjs/operators';
import { nxAccordionAnimations } from './accordion-animations';
import { NxExpansionPanelComponent } from './expansion-panel';
export class NxExpansionPanelHeaderComponent {
    /**
     * @param {?} panel
     * @param {?} _changeDetectorRef
     */
    constructor(panel, _changeDetectorRef) {
        this.panel = panel;
        this._changeDetectorRef = _changeDetectorRef;
        this._parentChangeSubscription = Subscription.EMPTY;
        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter((/**
         * @param {?} changes
         * @return {?}
         */
        changes => !!(changes.hideToggle || changes.disabled)))))
            .subscribe((/**
         * @return {?}
         */
        () => this._changeDetectorRef.markForCheck()));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this._parentChangeSubscription.unsubscribe();
    }
    /**
     * \@docs-private
     * @return {?}
     */
    isExpanded() {
        return this.panel.expanded;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    getOpenState() {
        return this.panel.getOpenState();
    }
    /**
     * @return {?}
     */
    _getPanelId() {
        return this.panel.id;
    }
    /**
     * Toggle the expansion panel.
     * @return {?}
     */
    toggle() {
        this.panel.toggle();
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    keydown(event) {
        switch (event.keyCode) {
            case SPACE:
            case ENTER:
                event.preventDefault();
                this.toggle();
                break;
            default:
                return;
        }
    }
}
NxExpansionPanelHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-expansion-panel-header',
                template: "<div class=\"nx-expansion-panel__header-content\">\n  <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n  <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n  <nx-icon\n    [@indicatorRotate]=\"getOpenState()\"\n    class=\"nx-expansion-panel__chevron\"\n    name=\"chevron-down\">\n  </nx-icon>\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                animations: [nxAccordionAnimations.indicatorRotate],
                host: {
                    '[class.nx-expanded]': 'isExpanded()',
                    'class': 'nx-expansion-panel__header',
                    'role': 'button',
                    '[attr.id]': 'panel._headerId',
                    '[attr.tabindex]': 'panel.disabled ? -1 : 0',
                    '[attr.aria-controls]': '_getPanelId()',
                    '[attr.aria-expanded]': 'isExpanded()',
                    '[attr.aria-disabled]': 'panel.disabled',
                    '[class.is-disabled]': 'panel.disabled',
                    '(keydown)': 'keydown($event)',
                    '(click)': 'toggle()'
                },
                styles: [":host:focus{outline:0}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;display:flex;justify-content:space-between;position:relative;outline:0;border:none;color:#414141;color:var(--accordion-regular-header-text-color,#414141);background:#f5f5f5;background:var(--accordion-regular-header-background-color,#f5f5f5);padding:24px 32px;padding:var(--accordion-regular-header-padding,24px 32px)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:#414141;color:var(--accordion-regular-header-hover-text-color,#414141)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-regular-hover-chevron-color,#006192)}::ng-deep .nx-expansion-panel__header-title{font-size:26px;font-size:var(--accordion-regular-font-size,26px);line-height:32px;line-height:var(--accordion-regular-line-height,32px);font-weight:300;font-weight:var(--accordion-regular-font-weight,300);letter-spacing:.3px;letter-spacing:var(--accordion-regular-letter-spacing,.3px);text-align:left;margin-right:32px}@media (max-width:703px){.nx-expansion-panel__header-content{padding:16px}::ng-deep .nx-expansion-panel__header-title{font-size:20px;font-size:var(--accordion-regular-mobile-font-size,20px);line-height:28px;line-height:var(--accordion-regular-mobile-line-height,28px);font-weight:400;font-weight:var(--accordion-regular-mobile-font-weight,400);letter-spacing:.2px;letter-spacing:var(--accordion-regular-mobile-letter-spacing,.2px);margin-right:16px}}.nx-expansion-panel__chevron{pointer-events:none;font-size:24px;font-size:var(--accordion-chevron-size,24px)}:host(:not(.is-disabled)) .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-regular-chevron-color,#006192)}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:24px 32px;padding:var(--accordion-light-header-padding,24px 32px);margin-top:0;background:0 0}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-light-chevron-color,#006192)}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:20px;font-size:var(--accordion-light-font-size,20px);line-height:28px;line-height:var(--accordion-light-line-height,28px);font-weight:400;font-weight:var(--accordion-light-font-weight,400);letter-spacing:.2px;letter-spacing:var(--accordion-light-letter-spacing,.2px)}@media (max-width:703px){:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:14px;font-size:var(--accordion-light-mobile-font-size,14px);line-height:20px;line-height:var(--accordion-light-mobile-line-height,20px);font-weight:600;font-weight:var(--accordion-light-mobile-font-weight,600);letter-spacing:.2px;letter-spacing:var(--accordion-light-mobile-letter-spacing,.2px)}}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content{color:#006192;color:var(--accordion-light-header-text-color,#006192)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:#006192;color:var(--accordion-light-header-hover-text-color,#006192)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:#006192;color:var(--accordion-light-hover-chevron-color,#006192)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:#fff}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:#fff}:host.is-disabled.is-disabled .nx-expansion-panel__chevron,:host.is-disabled.is-disabled .nx-expansion-panel__header-content{cursor:not-allowed;color:#c2c2c2;color:var(--accordion-disabled-color,#c2c2c2)}:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6);z-index:1}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]):focus .nx-expansion-panel__header-content{box-shadow:0 0 0 2px background,0 0 0 6px windowText}:host{-ms-high-contrast-adjust:none}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:buttonText;background-color:buttonFace}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:buttonText}:host.is-disabled.is-disabled .nx-expansion-panel__header-content{color:GrayText;background-color:buttonFace}:host.is-disabled.is-disabled .nx-expansion-panel__header-content .nx-expansion-panel__chevron{color:GrayText}}"]
            }] }
];
/** @nocollapse */
NxExpansionPanelHeaderComponent.ctorParameters = () => [
    { type: NxExpansionPanelComponent, decorators: [{ type: Host }] },
    { type: ChangeDetectorRef }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxExpansionPanelHeaderComponent.prototype._parentChangeSubscription;
    /**
     * \@docs-private
     * @type {?}
     */
    NxExpansionPanelHeaderComponent.prototype.panel;
    /**
     * @type {?}
     * @private
     */
    NxExpansionPanelHeaderComponent.prototype._changeDetectorRef;
}
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export class NxExpansionPanelDescriptionDirective {
}
NxExpansionPanelDescriptionDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'nx-expansion-panel-description',
                host: {
                    class: 'nx-expansion-panel__header-description'
                }
            },] }
];
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export class NxExpansionPanelTitleDirective {
}
NxExpansionPanelTitleDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: 'nx-expansion-panel-title',
                host: {
                    class: 'nx-expansion-panel__header-title'
                }
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uL2V4cGFuc2lvbi1wYW5lbC1oZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUNsSCxPQUFPLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFeEMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0QsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFzQjlELE1BQU0sT0FBTywrQkFBK0I7Ozs7O0lBRzFDLFlBQ3NDLEtBQWdDLEVBQzVELGtCQUFxQztRQURULFVBQUssR0FBTCxLQUFLLENBQTJCO1FBQzVELHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFKdkMsOEJBQXlCLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQztRQU1yRCxJQUFJLENBQUMseUJBQXlCLEdBQUcsS0FBSyxDQUNwQyxLQUFLLENBQUMsTUFBTSxFQUNaLEtBQUssQ0FBQyxNQUFNLEVBQ1osS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTTs7OztRQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQVUsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUMsQ0FBQyxDQUN4RjthQUNBLFNBQVM7OztRQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsRUFBQyxDQUFDO0lBRTNELENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQy9DLENBQUM7Ozs7O0lBR0QsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDN0IsQ0FBQzs7Ozs7SUFHRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7SUFFRCxXQUFXO1FBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUtELE1BQU07UUFDSixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7OztJQUdELE9BQU8sQ0FBQyxLQUFvQjtRQUMxQixRQUFRLEtBQUssQ0FBQyxPQUFPLEVBQUU7WUFDckIsS0FBSyxLQUFLLENBQUM7WUFDWCxLQUFLLEtBQUs7Z0JBQ1IsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN2QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ2QsTUFBTTtZQUNSO2dCQUNFLE9BQU87U0FDVjtJQUNILENBQUM7OztZQXhFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsMFZBQTBDO2dCQUUxQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsVUFBVSxFQUFFLENBQUMscUJBQXFCLENBQUMsZUFBZSxDQUFDO2dCQUNuRCxJQUFJLEVBQUU7b0JBQ0oscUJBQXFCLEVBQUUsY0FBYztvQkFDckMsT0FBTyxFQUFFLDRCQUE0QjtvQkFDckMsTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLFdBQVcsRUFBRSxpQkFBaUI7b0JBQzlCLGlCQUFpQixFQUFFLHlCQUF5QjtvQkFDNUMsc0JBQXNCLEVBQUUsZUFBZTtvQkFDdkMsc0JBQXNCLEVBQUUsY0FBYztvQkFDdEMsc0JBQXNCLEVBQUUsZ0JBQWdCO29CQUN4QyxxQkFBcUIsRUFBRSxnQkFBZ0I7b0JBQ3ZDLFdBQVcsRUFBRSxpQkFBaUI7b0JBQzlCLFNBQVMsRUFBRSxVQUFVO2lCQUN0Qjs7YUFDRjs7OztZQXJCUSx5QkFBeUIsdUJBMEJSLElBQUk7WUEvQkksaUJBQWlCOzs7Ozs7O0lBNEJqRCxvRUFBdUQ7Ozs7O0lBR2hDLGdEQUErQzs7Ozs7SUFDcEUsNkRBQTZDOzs7OztBQTREakQsTUFBTSxPQUFPLG9DQUFvQzs7O1lBUGhELFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLGdDQUFnQztnQkFDMUMsSUFBSSxFQUFHO29CQUNMLEtBQUssRUFBRSx3Q0FBd0M7aUJBQ2hEO2FBQ0Y7Ozs7O0FBYUQsTUFBTSxPQUFPLDhCQUE4Qjs7O1lBUDFDLFNBQVMsU0FBQzs7Z0JBRVQsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsSUFBSSxFQUFHO29CQUNMLEtBQUssRUFBRSxrQ0FBa0M7aUJBQzFDO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFTlRFUiwgU1BBQ0UgfSBmcm9tICdAYW5ndWxhci9jZGsva2V5Y29kZXMnO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIERpcmVjdGl2ZSwgSG9zdCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBtZXJnZSwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IG54QWNjb3JkaW9uQW5pbWF0aW9ucyB9IGZyb20gJy4vYWNjb3JkaW9uLWFuaW1hdGlvbnMnO1xuaW1wb3J0IHsgTnhFeHBhbnNpb25QYW5lbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ2V4cGFuc2lvbi1wYW5lbC1oZWFkZXIuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgYW5pbWF0aW9uczogW254QWNjb3JkaW9uQW5pbWF0aW9ucy5pbmRpY2F0b3JSb3RhdGVdLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5ueC1leHBhbmRlZF0nOiAnaXNFeHBhbmRlZCgpJyxcbiAgICAnY2xhc3MnOiAnbngtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXInLFxuICAgICdyb2xlJzogJ2J1dHRvbicsXG4gICAgJ1thdHRyLmlkXSc6ICdwYW5lbC5faGVhZGVySWQnLFxuICAgICdbYXR0ci50YWJpbmRleF0nOiAncGFuZWwuZGlzYWJsZWQgPyAtMSA6IDAnLFxuICAgICdbYXR0ci5hcmlhLWNvbnRyb2xzXSc6ICdfZ2V0UGFuZWxJZCgpJyxcbiAgICAnW2F0dHIuYXJpYS1leHBhbmRlZF0nOiAnaXNFeHBhbmRlZCgpJyxcbiAgICAnW2F0dHIuYXJpYS1kaXNhYmxlZF0nOiAncGFuZWwuZGlzYWJsZWQnLFxuICAgICdbY2xhc3MuaXMtZGlzYWJsZWRdJzogJ3BhbmVsLmRpc2FibGVkJyxcbiAgICAnKGtleWRvd24pJzogJ2tleWRvd24oJGV2ZW50KScsXG4gICAgJyhjbGljayknOiAndG9nZ2xlKCknXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgX3BhcmVudENoYW5nZVN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqLyBASG9zdCgpIHB1YmxpYyBwYW5lbDogTnhFeHBhbnNpb25QYW5lbENvbXBvbmVudCxcbiAgICBwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWZcbiAgKSB7XG4gICAgdGhpcy5fcGFyZW50Q2hhbmdlU3Vic2NyaXB0aW9uID0gbWVyZ2UoXG4gICAgICBwYW5lbC5vcGVuZWQsXG4gICAgICBwYW5lbC5jbG9zZWQsXG4gICAgICBwYW5lbC5faW5wdXRDaGFuZ2VzLnBpcGUoZmlsdGVyKGNoYW5nZXMgPT4gISEoY2hhbmdlcy5oaWRlVG9nZ2xlIHx8IGNoYW5nZXMuZGlzYWJsZWQpKSlcbiAgICApXG4gICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKSk7XG5cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX3BhcmVudENoYW5nZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgaXNFeHBhbmRlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wYW5lbC5leHBhbmRlZDtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGdldE9wZW5TdGF0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnBhbmVsLmdldE9wZW5TdGF0ZSgpO1xuICB9XG5cbiAgX2dldFBhbmVsSWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5wYW5lbC5pZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBUb2dnbGUgdGhlIGV4cGFuc2lvbiBwYW5lbC5cbiAgICovXG4gIHRvZ2dsZSgpIHtcbiAgICB0aGlzLnBhbmVsLnRvZ2dsZSgpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAga2V5ZG93bihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuICAgICAgY2FzZSBTUEFDRTpcbiAgICAgIGNhc2UgRU5URVI6XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMudG9nZ2xlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFRoaXMgZGlyZWN0aXZlIGlzIHRvIGJlIHVzZWQgaW5zaWRlIG9mIHRoZSBOeEV4cGFuc2lvblBhbmVsSGVhZGVyIGNvbXBvbmVudC5cbiAqL1xuQERpcmVjdGl2ZSh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdueC1leHBhbnNpb24tcGFuZWwtZGVzY3JpcHRpb24nLFxuICBob3N0IDoge1xuICAgIGNsYXNzOiAnbngtZXhwYW5zaW9uLXBhbmVsX19oZWFkZXItZGVzY3JpcHRpb24nXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhFeHBhbnNpb25QYW5lbERlc2NyaXB0aW9uRGlyZWN0aXZlIHt9XG5cbi8qKlxuICogVGhpcyBkaXJlY3RpdmUgaXMgdG8gYmUgdXNlZCBpbnNpZGUgb2YgdGhlIE54RXhwYW5zaW9uUGFuZWxIZWFkZXIgY29tcG9uZW50LlxuICovXG5ARGlyZWN0aXZlKHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxuICBzZWxlY3RvcjogJ254LWV4cGFuc2lvbi1wYW5lbC10aXRsZScsXG4gIGhvc3QgOiB7XG4gICAgY2xhc3M6ICdueC1leHBhbnNpb24tcGFuZWxfX2hlYWRlci10aXRsZSdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeEV4cGFuc2lvblBhbmVsVGl0bGVEaXJlY3RpdmUge31cbiJdfQ==