/**
 * @fileoverview added by tsickle
 * Generated from: accordion/accordion.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NxIconModule } from '@allianz/ngx-ndbx/icon';
import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxAccordionDirective } from './accordion';
import { NxExpansionPanelComponent } from './expansion-panel';
import { NxExpansionPanelBodyDirective } from './expansion-panel-body';
import { NxExpansionPanelDescriptionDirective, NxExpansionPanelHeaderComponent, NxExpansionPanelTitleDirective, } from './expansion-panel-header';
export class NxAccordionModule {
}
NxAccordionModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    PortalModule,
                    NxIconModule
                ],
                exports: [
                    NxAccordionDirective,
                    NxExpansionPanelComponent,
                    NxExpansionPanelHeaderComponent,
                    NxExpansionPanelDescriptionDirective,
                    NxExpansionPanelTitleDirective,
                    NxExpansionPanelBodyDirective
                ],
                declarations: [
                    NxAccordionDirective,
                    NxExpansionPanelComponent,
                    NxExpansionPanelHeaderComponent,
                    NxExpansionPanelDescriptionDirective,
                    NxExpansionPanelTitleDirective,
                    NxExpansionPanelBodyDirective
                ],
                providers: [],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uL2FjY29yZGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNuRCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RSxPQUFPLEVBQ0wsb0NBQW9DLEVBQ3BDLCtCQUErQixFQUMvQiw4QkFBOEIsR0FDL0IsTUFBTSwwQkFBMEIsQ0FBQztBQTBCbEMsTUFBTSxPQUFPLGlCQUFpQjs7O1lBeEI3QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7b0JBQ1osWUFBWTtvQkFDWixZQUFZO2lCQUNiO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxvQkFBb0I7b0JBQ3BCLHlCQUF5QjtvQkFDekIsK0JBQStCO29CQUMvQixvQ0FBb0M7b0JBQ3BDLDhCQUE4QjtvQkFDOUIsNkJBQTZCO2lCQUM5QjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1osb0JBQW9CO29CQUNwQix5QkFBeUI7b0JBQ3pCLCtCQUErQjtvQkFDL0Isb0NBQW9DO29CQUNwQyw4QkFBOEI7b0JBQzlCLDZCQUE2QjtpQkFDOUI7Z0JBQ0QsU0FBUyxFQUFFLEVBQUU7YUFDZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE54SWNvbk1vZHVsZSB9IGZyb20gJ0BhbGxpYW56L25neC1uZGJ4L2ljb24nO1xuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgTnhBY2NvcmRpb25EaXJlY3RpdmUgfSBmcm9tICcuL2FjY29yZGlvbic7XG5pbXBvcnQgeyBOeEV4cGFuc2lvblBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwnO1xuaW1wb3J0IHsgTnhFeHBhbnNpb25QYW5lbEJvZHlEaXJlY3RpdmUgfSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbC1ib2R5JztcbmltcG9ydCB7XG4gIE54RXhwYW5zaW9uUGFuZWxEZXNjcmlwdGlvbkRpcmVjdGl2ZSxcbiAgTnhFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgTnhFeHBhbnNpb25QYW5lbFRpdGxlRGlyZWN0aXZlLFxufSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbC1oZWFkZXInO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFBvcnRhbE1vZHVsZSxcbiAgICBOeEljb25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE54QWNjb3JkaW9uRGlyZWN0aXZlLFxuICAgIE54RXhwYW5zaW9uUGFuZWxDb21wb25lbnQsXG4gICAgTnhFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgICBOeEV4cGFuc2lvblBhbmVsRGVzY3JpcHRpb25EaXJlY3RpdmUsXG4gICAgTnhFeHBhbnNpb25QYW5lbFRpdGxlRGlyZWN0aXZlLFxuICAgIE54RXhwYW5zaW9uUGFuZWxCb2R5RGlyZWN0aXZlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE54QWNjb3JkaW9uRGlyZWN0aXZlLFxuICAgIE54RXhwYW5zaW9uUGFuZWxDb21wb25lbnQsXG4gICAgTnhFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgICBOeEV4cGFuc2lvblBhbmVsRGVzY3JpcHRpb25EaXJlY3RpdmUsXG4gICAgTnhFeHBhbnNpb25QYW5lbFRpdGxlRGlyZWN0aXZlLFxuICAgIE54RXhwYW5zaW9uUGFuZWxCb2R5RGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogW10sXG59KVxuZXhwb3J0IGNsYXNzIE54QWNjb3JkaW9uTW9kdWxlIHsgfVxuIl19