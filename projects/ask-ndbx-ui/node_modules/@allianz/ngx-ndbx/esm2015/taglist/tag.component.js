/**
 * @fileoverview added by tsickle
 * Generated from: taglist/tag.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { DELETE, BACKSPACE, ENTER } from '@angular/cdk/keycodes';
export class NxTagComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._tabindex = -1;
        /**
         * An event is dispatched each time when the tag is clicked.
         */
        this.clicked = new EventEmitter();
        /**
         * An event is dispatched each time when the tag is removed.
         */
        this.removed = new EventEmitter();
    }
    /**
     * Whether the tag is removeable.
     * @param {?} value
     * @return {?}
     */
    set removable(value) {
        this._removable = coerceBooleanProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get removable() {
        return this._removable;
    }
    /**
     * Sets the tab-index of a tag. Default value: -1.
     *
     * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.
     * @param {?} value
     * @return {?}
     */
    set tabindex(value) {
        this._tabindex = coerceNumberProperty(value);
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get tabindex() {
        return this.removable ? 0 : this._tabindex;
    }
    /**
     * Sets the value of the tag.
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        if (this._value !== value) {
            this._value = value;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    // Emit the removed event that the parent can remove the value
    removeClickHandler(event) {
        event.stopPropagation();
        this.removed.emit(this.value);
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    removeKeyHandler(event) {
        if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {
            event.preventDefault();
            event.stopPropagation();
            this.removed.emit(this.value);
        }
        if (event.keyCode === ENTER) {
            this.clicked.emit(this.value);
        }
    }
    /**
     * \@docs-private
     * @return {?}
     */
    tagClickHandler() {
        this.clicked.emit(this.value);
    }
}
NxTagComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-tag',
                template: "{{ value }}\n<span role=\"link\" aria-label=\"close\" class=\"nx-tag__close\" *ngIf=\"removable\"\n    (click)=\"removeClickHandler($event)\">\n    <nx-icon class=\"nx-tag__close-icon\" name=\"close\"></nx-icon>\n</span>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '(click)': 'tagClickHandler()',
                    '(keydown)': 'removeKeyHandler($event)',
                    '[attr.tabindex]': 'tabindex'
                },
                styles: [":host{font-size:14px;font-size:var(--taglist-font-size,14px);line-height:16px;line-height:var(--taglist-line-height,16px);font-weight:600;font-weight:var(--taglist-font-weight,600);letter-spacing:1px;letter-spacing:var(--taglist-letter-spacing,1px);height:auto;max-width:100%;color:#767676;color:var(--taglist-color,#767676);background-color:transparent;background-color:var(--taglist-background-color,transparent);padding:6px 14px;display:flex;align-items:center;border:2px solid #d9d9d9;border:2px solid var(--taglist-border-color,#d9d9d9);border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:background-color .2s,box-shadow .2s;cursor:pointer}:host:hover{border-color:#c2c2c2;border-color:var(--taglist-hover-border-color,#c2c2c2);color:#5b5b5b;color:var(--taglist-hover-color,#5b5b5b);background-color:#ececec;background-color:var(--taglist-hover-background-color,#ececec)}:host:focus{outline:transparent solid 2px}:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6)}.nx-tag__close-icon{outline:0;display:block;font-size:16px;font-size:var(--taglist-close-icon-size,16px)}.nx-tag__close{margin-left:8px}:host-context(.nx-taglist--keyword){padding:14px 22px}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]):focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}:host,:host:focus,:host:hover{color:buttonText;background-color:buttonFace;border-color:buttonText;-ms-high-contrast-adjust:none}}"]
            }] }
];
/** @nocollapse */
NxTagComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxTagComponent.propDecorators = {
    removable: [{ type: Input }],
    tabindex: [{ type: Input }],
    value: [{ type: Input }],
    clicked: [{ type: Output }],
    removed: [{ type: Output }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._removable;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._tabindex;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._value;
    /**
     * An event is dispatched each time when the tag is clicked.
     * @type {?}
     */
    NxTagComponent.prototype.clicked;
    /**
     * An event is dispatched each time when the tag is removed.
     * @type {?}
     */
    NxTagComponent.prototype.removed;
    /**
     * @type {?}
     * @private
     */
    NxTagComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsidGFnbGlzdC90YWcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLHFCQUFxQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQWFqRSxNQUFNLE9BQU8sY0FBYzs7OztJQThDekIsWUFDVSxrQkFBcUM7UUFBckMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQWxDdkMsY0FBUyxHQUFXLENBQUMsQ0FBQyxDQUFDOzs7O1FBNkJaLFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQzs7OztRQUVyRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUFHckIsQ0FBQzs7Ozs7O0lBM0NwRCxJQUNJLFNBQVMsQ0FBQyxLQUFjO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFDRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQzs7Ozs7Ozs7SUFRRCxJQUNJLFFBQVEsQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFDRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUM3QyxDQUFDOzs7Ozs7SUFJRCxJQUNJLEtBQUssQ0FBQyxLQUFhO1FBQ3JCLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxLQUFLLEVBQUU7WUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDcEIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3hDO0lBQ0gsQ0FBQzs7OztJQUNELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDOzs7Ozs7O0lBWUQsa0JBQWtCLENBQUMsS0FBaUI7UUFDbEMsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7SUFHRCxnQkFBZ0IsQ0FBQyxLQUFvQjtRQUNuQyxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxLQUFLLE1BQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLFNBQVMsQ0FBQyxFQUFFO1lBQy9FLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQy9CO1FBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLEtBQUssRUFBRTtZQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDL0I7SUFDSCxDQUFDOzs7OztJQUdELGVBQWU7UUFDYixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7O1lBbkZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsd09BQWlDO2dCQUNqQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFFL0MsSUFBSSxFQUFFO29CQUNKLFNBQVMsRUFBRSxtQkFBbUI7b0JBQzlCLFdBQVcsRUFBRSwwQkFBMEI7b0JBQ3ZDLGlCQUFpQixFQUFFLFVBQVU7aUJBQzlCOzthQUNGOzs7O1lBYnlFLGlCQUFpQjs7O3dCQWtCeEYsS0FBSzt1QkFlTCxLQUFLO29CQVdMLEtBQUs7c0JBWUwsTUFBTTtzQkFFTixNQUFNOzs7Ozs7O0lBM0NQLG9DQUE0Qjs7Ozs7SUFZNUIsbUNBQStCOzs7OztJQWUvQixnQ0FBdUI7Ozs7O0lBY3ZCLGlDQUF3RTs7Ozs7SUFFeEUsaUNBQXdFOzs7OztJQUd0RSw0Q0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2VCb29sZWFuUHJvcGVydHksIGNvZXJjZU51bWJlclByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERFTEVURSwgQkFDS1NQQUNFLCBFTlRFUiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9rZXljb2Rlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LXRhZycsXG4gIHRlbXBsYXRlVXJsOiAndGFnLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0eWxlVXJsczogWyd0YWcuY29tcG9uZW50LnNjc3MnXSxcbiAgaG9zdDoge1xuICAgICcoY2xpY2spJzogJ3RhZ0NsaWNrSGFuZGxlcigpJyxcbiAgICAnKGtleWRvd24pJzogJ3JlbW92ZUtleUhhbmRsZXIoJGV2ZW50KScsXG4gICAgJ1thdHRyLnRhYmluZGV4XSc6ICd0YWJpbmRleCdcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBOeFRhZ0NvbXBvbmVudCB7XG4gIHByaXZhdGUgX3JlbW92YWJsZTogYm9vbGVhbjtcblxuICAvKiogV2hldGhlciB0aGUgdGFnIGlzIHJlbW92ZWFibGUuICovXG4gIEBJbnB1dCgpXG4gIHNldCByZW1vdmFibGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9yZW1vdmFibGUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9XG4gIGdldCByZW1vdmFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlbW92YWJsZTtcbiAgfVxuXG4gIHByaXZhdGUgX3RhYmluZGV4OiBudW1iZXIgPSAtMTtcbiAgLyoqXG4gICAqIFNldHMgdGhlIHRhYi1pbmRleCBvZiBhIHRhZy4gRGVmYXVsdCB2YWx1ZTogLTEuXG4gICAqXG4gICAqIElmIGBueEFsbG93VGFnRGVsZXRpb25gIG9mIHRoZSB0YWdsaXN0IGlzIHNldCB0byB0cnVlLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyAwLlxuICAgKi9cbiAgQElucHV0KClcbiAgc2V0IHRhYmluZGV4KHZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLl90YWJpbmRleCA9IGNvZXJjZU51bWJlclByb3BlcnR5KHZhbHVlKTtcbiAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgfVxuICBnZXQgdGFiaW5kZXgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5yZW1vdmFibGUgPyAwIDogdGhpcy5fdGFiaW5kZXg7XG4gIH1cblxuICBwcml2YXRlIF92YWx1ZTogc3RyaW5nO1xuICAvKiogU2V0cyB0aGUgdmFsdWUgb2YgdGhlIHRhZy4gKi9cbiAgQElucHV0KClcbiAgc2V0IHZhbHVlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5fdmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuICB9XG4gIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgfVxuXG4gIC8qKiBBbiBldmVudCBpcyBkaXNwYXRjaGVkIGVhY2ggdGltZSB3aGVuIHRoZSB0YWcgaXMgY2xpY2tlZC4gKi9cbiAgQE91dHB1dCgpIHJlYWRvbmx5IGNsaWNrZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIC8qKiBBbiBldmVudCBpcyBkaXNwYXRjaGVkIGVhY2ggdGltZSB3aGVuIHRoZSB0YWcgaXMgcmVtb3ZlZC4gKi9cbiAgQE91dHB1dCgpIHJlYWRvbmx5IHJlbW92ZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7IH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAvLyBFbWl0IHRoZSByZW1vdmVkIGV2ZW50IHRoYXQgdGhlIHBhcmVudCBjYW4gcmVtb3ZlIHRoZSB2YWx1ZVxuICByZW1vdmVDbGlja0hhbmRsZXIoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLnJlbW92ZWQuZW1pdCh0aGlzLnZhbHVlKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHJlbW92ZUtleUhhbmRsZXIoZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBpZiAodGhpcy5yZW1vdmFibGUgJiYgKGV2ZW50LmtleUNvZGUgPT09IERFTEVURSB8fCBldmVudC5rZXlDb2RlID09PSBCQUNLU1BBQ0UpKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB0aGlzLnJlbW92ZWQuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gRU5URVIpIHtcbiAgICAgIHRoaXMuY2xpY2tlZC5lbWl0KHRoaXMudmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHRhZ0NsaWNrSGFuZGxlcigpIHtcbiAgICB0aGlzLmNsaWNrZWQuZW1pdCh0aGlzLnZhbHVlKTtcbiAgfVxufVxuIl19