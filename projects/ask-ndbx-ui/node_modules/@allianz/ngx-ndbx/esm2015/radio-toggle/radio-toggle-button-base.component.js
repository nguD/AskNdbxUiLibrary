/**
 * @fileoverview added by tsickle
 * Generated from: radio-toggle/radio-toggle-button-base.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef, Input, ViewChild } from '@angular/core';
import { removeClasses } from '@allianz/ngx-ndbx/utils';
/** @type {?} */
let nextId = 0;
/**
 * \@docs-private
 */
export class NxRadioToggleButtonBaseComponent {
    /**
     * @param {?} renderer
     */
    constructor(renderer) {
        this.renderer = renderer;
        /**
         * \@docs-private
         */
        this.toggleButtonId = 'nx-radio-toggle-button-' + nextId++;
    }
    /**
     * \@docs-private
     * @param {?} event
     * @return {?}
     */
    triggerInputClick(event) {
        event.stopPropagation();
        this.toggleInput.nativeElement.click();
    }
    /**
     * \@docs-private
     * @return {?}
     */
    setFirstButton() {
        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');
    }
    /**
     * \@docs-private
     * @return {?}
     */
    setLastButton() {
        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');
    }
    /**
     * \@docs-private
     * @return {?}
     */
    resetClasses() {
        removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');
    }
}
NxRadioToggleButtonBaseComponent.propDecorators = {
    value: [{ type: Input, args: ['nxValue',] }],
    labelContainer: [{ type: ViewChild, args: ['toggleButtonLabelContainer', { static: true },] }],
    toggleInput: [{ type: ViewChild, args: ['toggleInput', { static: true },] }]
};
if (false) {
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.toggleButtonId;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.value;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.labelContainer;
    /**
     * \@docs-private
     * @type {?}
     */
    NxRadioToggleButtonBaseComponent.prototype.toggleInput;
    /**
     * \@docs-private
     * @type {?}
     * @protected
     */
    NxRadioToggleButtonBaseComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tdG9nZ2xlLWJ1dHRvbi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGxpYW56L25neC1uZGJ4LyIsInNvdXJjZXMiOlsicmFkaW8tdG9nZ2xlL3JhZGlvLXRvZ2dsZS1idXR0b24tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFFLEtBQUssRUFBYSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztJQUVwRCxNQUFNLEdBQUcsQ0FBQzs7OztBQUdkLE1BQU0sT0FBTyxnQ0FBZ0M7Ozs7SUFnQjNDLFlBRVksUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVzs7OztRQWhCL0IsbUJBQWMsR0FBVyx5QkFBeUIsR0FBRyxNQUFNLEVBQUUsQ0FBQztJQWlCOUQsQ0FBQzs7Ozs7O0lBR0QsaUJBQWlCLENBQUMsS0FBSztRQUNyQixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDekMsQ0FBQzs7Ozs7SUFHRCxjQUFjO1FBQ1osSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUseUNBQXlDLENBQUMsQ0FBQztJQUN2RyxDQUFDOzs7OztJQUdELGFBQWE7UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSx3Q0FBd0MsQ0FBQyxDQUFDO0lBQ3RHLENBQUM7Ozs7O0lBR0QsWUFBWTtRQUNWLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsZ0ZBQWdGLENBQUMsQ0FBQztJQUN0SSxDQUFDOzs7b0JBbkNBLEtBQUssU0FBQyxTQUFTOzZCQUlmLFNBQVMsU0FBQyw0QkFBNEIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7MEJBSXhELFNBQVMsU0FBQyxhQUFhLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzs7Ozs7O0lBWDFDLDBEQUE4RDs7Ozs7SUFHOUQsaURBQ1c7Ozs7O0lBR1gsMERBQzJCOzs7OztJQUczQix1REFDd0I7Ozs7OztJQUl0QixvREFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0VsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyByZW1vdmVDbGFzc2VzIH0gZnJvbSAnQGFsbGlhbnovbmd4LW5kYngvdXRpbHMnO1xuXG5sZXQgbmV4dElkID0gMDtcblxuLyoqIEBkb2NzLXByaXZhdGUgKi9cbmV4cG9ydCBjbGFzcyBOeFJhZGlvVG9nZ2xlQnV0dG9uQmFzZUNvbXBvbmVudCB7XG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHRvZ2dsZUJ1dHRvbklkOiBzdHJpbmcgPSAnbngtcmFkaW8tdG9nZ2xlLWJ1dHRvbi0nICsgbmV4dElkKys7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgQElucHV0KCdueFZhbHVlJylcbiAgdmFsdWU6IGFueTtcblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBAVmlld0NoaWxkKCd0b2dnbGVCdXR0b25MYWJlbENvbnRhaW5lcicsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGxhYmVsQ29udGFpbmVyOiBFbGVtZW50UmVmO1xuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIEBWaWV3Q2hpbGQoJ3RvZ2dsZUlucHV0JywgeyBzdGF0aWM6IHRydWUgfSlcbiAgdG9nZ2xlSW5wdXQ6IEVsZW1lbnRSZWY7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgdHJpZ2dlcklucHV0Q2xpY2soZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLnRvZ2dsZUlucHV0Lm5hdGl2ZUVsZW1lbnQuY2xpY2soKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHNldEZpcnN0QnV0dG9uKCkge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5sYWJlbENvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWZpcnN0Jyk7XG4gIH1cblxuICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICBzZXRMYXN0QnV0dG9uKCkge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5sYWJlbENvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWxhc3QnKTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIHJlc2V0Q2xhc3NlcygpIHtcbiAgICByZW1vdmVDbGFzc2VzKHRoaXMucmVuZGVyZXIsIHRoaXMubGFiZWxDb250YWluZXIsICdueC1yYWRpby10b2dnbGVfX2xhYmVsLWNvbnRhaW5lci0tZmlyc3QgbngtcmFkaW8tdG9nZ2xlX19sYWJlbC1jb250YWluZXItLWxhc3QnKTtcbiAgfVxufVxuIl19