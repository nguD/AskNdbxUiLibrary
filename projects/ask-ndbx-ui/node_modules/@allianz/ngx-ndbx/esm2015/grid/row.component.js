/**
 * @fileoverview added by tsickle
 * Generated from: row.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { mapClassNames } from '@allianz/ngx-ndbx/utils';
import { Component, ElementRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { addStylesFromDimensions } from './utils';
/** @type {?} */
const MAPPING_JUSTIFY = {
    'start': 'nx-justify-content-{tier}-start',
    'end': 'nx-justify-content-{tier}-end',
    'center': 'nx-justify-content-{tier}-center',
    'between': 'nx-justify-content-{tier}-between',
    'around': 'nx-justify-content-{tier}-around'
};
/** @type {?} */
const MAPPING_ALIGN_ITEMS = {
    'start': 'nx-align-items-{tier}-start',
    'end': 'nx-align-items-{tier}-end',
    'center': 'nx-align-items-{tier}-center',
    'baseline': 'nx-align-items-{tier}-baseline',
    'stretch': 'nx-align-items-{tier}-stretch'
};
/** @type {?} */
const MAPPING_ALIGN_CONTENT = {
    'start': 'nx-align-content-{tier}-start',
    'end': 'nx-align-content-{tier}-end',
    'center': 'nx-align-content-{tier}-center',
    'between': 'nx-align-content-{tier}-between',
    'around': 'nx-align-content-{tier}-around',
    'stretch': 'nx-align-content-{tier}-stretch'
};
/** @type {?} */
const MAPPING_WRAP = {
    'wrap': 'nx-flex-{tier}-wrap',
    'nowrap': 'nx-flex-{tier}-nowrap',
    'reverse': 'nx-flex-{tier}-wrap-reverse'
};
/** @type {?} */
const MAPPING_LAYOUT = {
    'row': 'nx-grid__row',
    'row-reverse': 'nx-grid__row-reverse'
};
export class NxRowComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        this.ROW = 'row';
        this.ROW_RESERVE = 'row-reverse';
        this._classNames = '';
        /**
         * General
         */
        this._nxRow = this.ROW;
        /* Input row variables */
        /**
         * Align items on the main axis (horizontally).
         */
        this.nxRowJustify = null;
        /**
         * Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines.
         */
        this.nxRowAlignContent = null;
        /**
         * The default alignment for items inside the flexible container.
         */
        this.nxRowAlignItems = null;
        /**
         * How the flexible items should be wrapped.
         */
        this.nxRowWrap = null;
    }
    /**
     * Values: row | row-reverse
     *
     * Default value: row
     * @param {?} value
     * @return {?}
     */
    set nxRow(value) {
        if (value !== '') {
            this._nxRow = value;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this._nxRow === this.ROW ||
            this._nxRow === this.ROW_RESERVE) {
            /** add row style */
            this._classNames = mapClassNames(this._nxRow, [], MAPPING_LAYOUT);
            /** if not empty nxRowWrap, split input and add style */
            if (this.nxRowWrap) {
                /** possibles atributes: wrap,reverse,no-wrap */
                this._classNames += addStylesFromDimensions(this.nxRowWrap, MAPPING_WRAP);
            }
            /** if not empty nxRowJustify, add style */
            if (this.nxRowJustify) {
                /** possibles atributes: start,end,center,between,around */
                this._classNames += addStylesFromDimensions(this.nxRowJustify, MAPPING_JUSTIFY);
            }
            /** if not empty nxRowAlignContent, add style */
            if (this.nxRowAlignContent) {
                /** possibles atributes: start,end,center,between,stetch */
                this._classNames += addStylesFromDimensions(this.nxRowAlignContent, MAPPING_ALIGN_CONTENT);
            }
            /** if not empty nxRowAlignItems, add style */
            if (this.nxRowAlignItems) {
                /** possibles atributes: start,end,center,around,stetch */
                this._classNames += addStylesFromDimensions(this.nxRowAlignItems, MAPPING_ALIGN_ITEMS);
            }
            this._classNames += ' ' + this.el.nativeElement.className;
            this._classNames = this._classNames.trim();
        }
        else {
            throw new Error('nxRow is incorrect');
        }
    }
}
NxRowComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line:component-selector
                selector: '[nxRow]',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class]': '_classNames'
                },
                styles: [":host{display:flex;flex-wrap:wrap;margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-row){flex-direction:row!important}:host(.nx-flex-column){flex-direction:column!important}:host(.nx-flex-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-wrap){flex-wrap:wrap!important}:host(.nx-flex-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-start){justify-content:flex-start!important}:host(.nx-justify-content-end){justify-content:flex-end!important}:host(.nx-justify-content-center){justify-content:center!important}:host(.nx-justify-content-between){justify-content:space-between!important}:host(.nx-justify-content-around){justify-content:space-around!important}:host(.nx-align-items-start){align-items:flex-start!important}:host(.nx-align-items-end){align-items:flex-end!important}:host(.nx-align-items-center){align-items:center!important}:host(.nx-align-items-baseline){align-items:baseline!important}:host(.nx-align-items-stretch){align-items:stretch!important}:host(.nx-align-content-start){align-content:flex-start!important}:host(.nx-align-content-end){align-content:flex-end!important}:host(.nx-align-content-center){align-content:center!important}:host(.nx-align-content-between){align-content:space-between!important}:host(.nx-align-content-around){align-content:space-around!important}:host(.nx-align-content-stretch){align-content:stretch!important}@media (min-width:320px){:host{margin-right:-8px;margin-left:-8px;position:relative}:host(.nx-flex-small-row){flex-direction:row!important}:host(.nx-flex-small-column){flex-direction:column!important}:host(.nx-flex-small-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-small-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-small-wrap){flex-wrap:wrap!important}:host(.nx-flex-small-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-small-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-small-start){justify-content:flex-start!important}:host(.nx-justify-content-small-end){justify-content:flex-end!important}:host(.nx-justify-content-small-center){justify-content:center!important}:host(.nx-justify-content-small-between){justify-content:space-between!important}:host(.nx-justify-content-small-around){justify-content:space-around!important}:host(.nx-align-items-small-start){align-items:flex-start!important}:host(.nx-align-items-small-end){align-items:flex-end!important}:host(.nx-align-items-small-center){align-items:center!important}:host(.nx-align-items-small-baseline){align-items:baseline!important}:host(.nx-align-items-small-stretch){align-items:stretch!important}:host(.nx-align-content-small-start){align-content:flex-start!important}:host(.nx-align-content-small-end){align-content:flex-end!important}:host(.nx-align-content-small-center){align-content:center!important}:host(.nx-align-content-small-between){align-content:space-between!important}:host(.nx-align-content-small-around){align-content:space-around!important}:host(.nx-align-content-small-stretch){align-content:stretch!important}}@media (min-width:704px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-medium-row){flex-direction:row!important}:host(.nx-flex-medium-column){flex-direction:column!important}:host(.nx-flex-medium-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-medium-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-medium-wrap){flex-wrap:wrap!important}:host(.nx-flex-medium-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-medium-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-medium-start){justify-content:flex-start!important}:host(.nx-justify-content-medium-end){justify-content:flex-end!important}:host(.nx-justify-content-medium-center){justify-content:center!important}:host(.nx-justify-content-medium-between){justify-content:space-between!important}:host(.nx-justify-content-medium-around){justify-content:space-around!important}:host(.nx-align-items-medium-start){align-items:flex-start!important}:host(.nx-align-items-medium-end){align-items:flex-end!important}:host(.nx-align-items-medium-center){align-items:center!important}:host(.nx-align-items-medium-baseline){align-items:baseline!important}:host(.nx-align-items-medium-stretch){align-items:stretch!important}:host(.nx-align-content-medium-start){align-content:flex-start!important}:host(.nx-align-content-medium-end){align-content:flex-end!important}:host(.nx-align-content-medium-center){align-content:center!important}:host(.nx-align-content-medium-between){align-content:space-between!important}:host(.nx-align-content-medium-around){align-content:space-around!important}:host(.nx-align-content-medium-stretch){align-content:stretch!important}}@media (min-width:992px){:host{margin-right:-16px;margin-left:-16px;position:relative}:host(.nx-flex-large-row){flex-direction:row!important}:host(.nx-flex-large-column){flex-direction:column!important}:host(.nx-flex-large-row-reverse){flex-direction:row-reverse!important}:host(.nx-flex-large-column-reverse){flex-direction:column-reverse!important}:host(.nx-flex-large-wrap){flex-wrap:wrap!important}:host(.nx-flex-large-nowrap){flex-wrap:nowrap!important}:host(.nx-flex-large-wrap-reverse){flex-wrap:wrap-reverse!important}:host(.nx-justify-content-large-start){justify-content:flex-start!important}:host(.nx-justify-content-large-end){justify-content:flex-end!important}:host(.nx-justify-content-large-center){justify-content:center!important}:host(.nx-justify-content-large-between){justify-content:space-between!important}:host(.nx-justify-content-large-around){justify-content:space-around!important}:host(.nx-align-items-large-start){align-items:flex-start!important}:host(.nx-align-items-large-end){align-items:flex-end!important}:host(.nx-align-items-large-center){align-items:center!important}:host(.nx-align-items-large-baseline){align-items:baseline!important}:host(.nx-align-items-large-stretch){align-items:stretch!important}:host(.nx-align-content-large-start){align-content:flex-start!important}:host(.nx-align-content-large-end){align-content:flex-end!important}:host(.nx-align-content-large-center){align-content:center!important}:host(.nx-align-content-large-between){align-content:space-between!important}:host(.nx-align-content-large-around){align-content:space-around!important}:host(.nx-align-content-large-stretch){align-content:stretch!important}}"]
            }] }
];
/** @nocollapse */
NxRowComponent.ctorParameters = () => [
    { type: ElementRef }
];
NxRowComponent.propDecorators = {
    nxRow: [{ type: Input }],
    nxRowJustify: [{ type: Input, args: ['nxRowJustify',] }],
    nxRowAlignContent: [{ type: Input, args: ['nxRowAlignContent',] }],
    nxRowAlignItems: [{ type: Input, args: ['nxRowAlignItems',] }],
    nxRowWrap: [{ type: Input, args: ['nxRowWrap',] }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.ROW;
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.ROW_RESERVE;
    /** @type {?} */
    NxRowComponent.prototype._classNames;
    /**
     * General
     * @type {?}
     * @private
     */
    NxRowComponent.prototype._nxRow;
    /**
     * Align items on the main axis (horizontally).
     * @type {?}
     */
    NxRowComponent.prototype.nxRowJustify;
    /**
     * Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowAlignContent;
    /**
     * The default alignment for items inside the flexible container.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowAlignItems;
    /**
     * How the flexible items should be wrapped.
     * @type {?}
     */
    NxRowComponent.prototype.nxRowWrap;
    /**
     * @type {?}
     * @private
     */
    NxRowComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,