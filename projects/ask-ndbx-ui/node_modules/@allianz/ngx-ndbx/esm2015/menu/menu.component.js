/**
 * @fileoverview added by tsickle
 * Generated from: menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
/**
 * This components is a collapsible menu for usage on smaller devices.
 * Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].
 */
export class NxMenuComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._open = false;
    }
    /**
     * Whether the menu is open or closed.
     * @param {?} value
     * @return {?}
     */
    set open(value) {
        /** @type {?} */
        const open = coerceBooleanProperty(value);
        if (open !== this._open) {
            this._open = open;
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get open() {
        return this._open;
    }
    /* Toggles the open state of the menu. */
    /**
     * @return {?}
     */
    toggle() {
        this.open = !this.open;
    }
}
NxMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-menu',
                template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n  <ng-content></ng-content>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[attr.aria-expanded]': 'open'
                },
                styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:#fff;background:var(--menu-background-color,#fff)}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:0}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6);border-radius:4px;outline:0}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{padding:24px;border-bottom:1px solid #d9d9d9;border-bottom:1px solid var(--menu-item-border-color,#d9d9d9)}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}@media screen and (-ms-high-contrast:active){::ng-deep [data-whatinput=keyboard] .nx-menu__link:focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}::ng-deep .nx-menu__item.nx-menu__item--large,::ng-deep .nx-menu__item.nx-menu__item--small{border-bottom-color:windowText}::ng-deep .nx-menu__link{text-decoration:none}}"]
            }] }
];
/** @nocollapse */
NxMenuComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxMenuComponent.propDecorators = {
    open: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._open;
    /**
     * @type {?}
     * @private
     */
    NxMenuComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC9tZW51LyIsInNvdXJjZXMiOlsibWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7QUFlOUQsTUFBTSxPQUFPLGVBQWU7Ozs7SUFzQjFCLFlBQW9CLGtCQUFxQztRQUFyQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW1CO1FBckJqRCxVQUFLLEdBQVksS0FBSyxDQUFDO0lBcUI2QixDQUFDOzs7Ozs7SUFsQjdELElBQ0ksSUFBSSxDQUFDLEtBQWM7O2NBQ2YsSUFBSSxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQztRQUN6QyxJQUFJLElBQUksS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUN4QztJQUNILENBQUM7Ozs7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7Ozs7SUFHRCxNQUFNO1FBQ0osSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDekIsQ0FBQzs7O1lBN0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsU0FBUztnQkFDbkIsa0dBQXdCO2dCQUV4QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsSUFBSSxFQUFFO29CQUNKLHNCQUFzQixFQUFFLE1BQU07aUJBQy9COzthQUNGOzs7O1lBZjRDLGlCQUFpQjs7O21CQW9CM0QsS0FBSzs7Ozs7OztJQUhOLGdDQUErQjs7Ozs7SUFxQm5CLDZDQUE2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcblxuLyoqXG4gIFRoaXMgY29tcG9uZW50cyBpcyBhIGNvbGxhcHNpYmxlIG1lbnUgZm9yIHVzYWdlIG9uIHNtYWxsZXIgZGV2aWNlcy5cbiAgQ2FuIGNvbnRhaW4gYW55IGNvbnRlbnQsIGJ1dCB1c3VhbGx5IFtueE1lbnVMaW5rXSwgW254TWVudUdyb3VwXSBhbmQgW254QWN0aW9uXS5cbiovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1tZW51JyxcbiAgdGVtcGxhdGVVcmw6ICdtZW51Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnbWVudS5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLmFyaWEtZXhwYW5kZWRdJzogJ29wZW4nXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTnhNZW51Q29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfb3BlbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIC8qKiBXaGV0aGVyIHRoZSBtZW51IGlzIG9wZW4gb3IgY2xvc2VkLiAqL1xuICBASW5wdXQoKVxuICBzZXQgb3Blbih2YWx1ZTogYm9vbGVhbikge1xuICAgIGNvbnN0IG9wZW4gPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIGlmIChvcGVuICE9PSB0aGlzLl9vcGVuKSB7XG4gICAgICB0aGlzLl9vcGVuID0gb3BlbjtcbiAgICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBvcGVuKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9vcGVuO1xuICB9XG5cbiAgLyogVG9nZ2xlcyB0aGUgb3BlbiBzdGF0ZSBvZiB0aGUgbWVudS4gKi9cbiAgdG9nZ2xlKCkge1xuICAgIHRoaXMub3BlbiA9ICF0aGlzLm9wZW47XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG4iXX0=