/**
 * @fileoverview added by tsickle
 * Generated from: expandable/toggle-button.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
/**
 * @record
 */
export function NxExpandable() { }
if (false) {
    /**
     * Indicates if this expandable instance is open or not.
     * @type {?}
     */
    NxExpandable.prototype.expanded;
    /**
     * Toggles the open state.
     * @type {?}
     */
    NxExpandable.prototype.toggle;
    /**
     * Expands this component.
     * @type {?}
     */
    NxExpandable.prototype.expand;
    /**
     * Closes this component.
     * @type {?}
     */
    NxExpandable.prototype.close;
}
/**
 * This toggle button can be clicked and toggles expandable elements.
 * e.g. it can toggle a expandable table row or anything else that implements the `NxExpandable` interface.
 */
export class NxToggleButtonComponent {
    /**
     * @param {?} _changeDetectorRef
     */
    constructor(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._expanded = false;
        this._ariaLabel = '';
    }
    /**
     * This is the expandable target that will be toggled when the user clicks the button.
     * @param {?} value
     * @return {?}
     */
    set target(value) {
        this._target = value;
        if (this._subscription) {
            this._subscription.unsubscribe();
        }
        if (this._target) {
            this._subscription = this._target.expanded.subscribe((/**
             * @param {?} expanded
             * @return {?}
             */
            expanded => {
                this._expanded = expanded;
                this._changeDetectorRef.markForCheck();
            }));
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set ariaLabel(value) {
        this._ariaLabel = value;
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    _onClick() {
        if (this._target) {
            this._target.toggle();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this._subscription) {
            this._subscription.unsubscribe();
        }
    }
}
NxToggleButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-toggle-button',
                template: "<button (click)=\"_onClick()\"\n    class=\"nx-toggle-button\"\n    [attr.aria-label]=\"_ariaLabel\"\n    [attr.aria-expanded]=\"_expanded\"\n    [class.is-expanded]=\"_expanded\">\n  <nx-icon name=\"chevron-down\"\n      aria-hidden=\"true\"\n      size=\"s\"\n      class=\"nx-toggle-button__icon\"></nx-icon>\n</button>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.nx-toggle-button{display:block;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;outline:0;background:0 0;padding:0;line-height:24px;height:24px}.nx-toggle-button .nx-toggle-button__icon{transform:rotateZ(0);transition:transform .2s;color:#414141;color:var(--expandable-table-arrow-icon-color,#414141)}.nx-toggle-button.is-expanded .nx-toggle-button__icon{transform:rotateZ(-180deg)}.nx-toggle-button::-moz-focus-inner{border:0}:host-context([data-whatinput=keyboard]) .nx-toggle-button:focus{border-radius:4px;box-shadow:0 0 0 2px #fff,0 0 0 6px #009de6;box-shadow:var(--focus-box-shadow,0 0 0 2px #fff,0 0 0 6px #009de6)}@media screen and (-ms-high-contrast:active){:host-context([data-whatinput=keyboard]) .nx-toggle-button:focus{box-shadow:0 0 0 2px background,0 0 0 6px windowText}}"]
            }] }
];
/** @nocollapse */
NxToggleButtonComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxToggleButtonComponent.propDecorators = {
    target: [{ type: Input }],
    ariaLabel: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NxToggleButtonComponent.prototype._expanded;
    /** @type {?} */
    NxToggleButtonComponent.prototype._target;
    /** @type {?} */
    NxToggleButtonComponent.prototype._ariaLabel;
    /**
     * @type {?}
     * @private
     */
    NxToggleButtonComponent.prototype._subscription;
    /**
     * @type {?}
     * @private
     */
    NxToggleButtonComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC90YWJsZS8iLCJzb3VyY2VzIjpbImV4cGFuZGFibGUvdG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBYSxNQUFNLGVBQWUsQ0FBQzs7OztBQUd4RyxrQ0FZQzs7Ozs7O0lBVkMsZ0NBQW1DOzs7OztJQUduQyw4QkFBbUI7Ozs7O0lBR25CLDhCQUFtQjs7Ozs7SUFHbkIsNkJBQWtCOzs7Ozs7QUFhcEIsTUFBTSxPQUFPLHVCQUF1Qjs7OztJQWdDbEMsWUFBb0Isa0JBQXFDO1FBQXJDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUEvQnpELGNBQVMsR0FBWSxLQUFLLENBQUM7UUEyQjNCLGVBQVUsR0FBVyxFQUFFLENBQUM7SUFJb0MsQ0FBQzs7Ozs7O0lBMUI3RCxJQUNJLE1BQU0sQ0FBQyxLQUFtQjtRQUM1QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUVyQixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNsQztRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFNBQVM7Ozs7WUFBQyxRQUFRLENBQUMsRUFBRTtnQkFDNUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUN6QyxDQUFDLEVBQUMsQ0FBQztTQUNOO0lBQ0gsQ0FBQzs7Ozs7SUFHRCxJQUNJLFNBQVMsQ0FBQyxLQUFhO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN6QyxDQUFDOzs7O0lBT0QsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ3ZCO0lBQ0gsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNsQztJQUNILENBQUM7OztZQWxERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsZ1ZBQTZDO2dCQUU3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozs7WUExQm1ELGlCQUFpQjs7O3FCQWlDbEUsS0FBSzt3QkFpQkwsS0FBSzs7OztJQXRCTiw0Q0FBMkI7O0lBb0IzQiwwQ0FBc0I7O0lBT3RCLDZDQUF3Qjs7Ozs7SUFFeEIsZ0RBQW9DOzs7OztJQUV4QixxREFBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uLCBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBOeEV4cGFuZGFibGUge1xuICAvKiogSW5kaWNhdGVzIGlmIHRoaXMgZXhwYW5kYWJsZSBpbnN0YW5jZSBpcyBvcGVuIG9yIG5vdC4gICovXG4gIGV4cGFuZGVkOiBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj47XG5cbiAgLyoqIFRvZ2dsZXMgdGhlIG9wZW4gc3RhdGUuICovXG4gIHRvZ2dsZTogKCkgPT4gdm9pZDtcblxuICAvKiogRXhwYW5kcyB0aGlzIGNvbXBvbmVudC4gKi9cbiAgZXhwYW5kOiAoKSA9PiB2b2lkO1xuXG4gIC8qKiBDbG9zZXMgdGhpcyBjb21wb25lbnQuICovXG4gIGNsb3NlOiAoKSA9PiB2b2lkO1xufVxuXG4vKipcbiAqIFRoaXMgdG9nZ2xlIGJ1dHRvbiBjYW4gYmUgY2xpY2tlZCBhbmQgdG9nZ2xlcyBleHBhbmRhYmxlIGVsZW1lbnRzLlxuICogZS5nLiBpdCBjYW4gdG9nZ2xlIGEgZXhwYW5kYWJsZSB0YWJsZSByb3cgb3IgYW55dGhpbmcgZWxzZSB0aGF0IGltcGxlbWVudHMgdGhlIGBOeEV4cGFuZGFibGVgIGludGVyZmFjZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbngtdG9nZ2xlLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi90b2dnbGUtYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdG9nZ2xlLWJ1dHRvbi5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE54VG9nZ2xlQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgX2V4cGFuZGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgdGhlIGV4cGFuZGFibGUgdGFyZ2V0IHRoYXQgd2lsbCBiZSB0b2dnbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIHRoZSBidXR0b24uXG4gICAqL1xuICBASW5wdXQoKVxuICBzZXQgdGFyZ2V0KHZhbHVlOiBOeEV4cGFuZGFibGUpIHtcbiAgICB0aGlzLl90YXJnZXQgPSB2YWx1ZTtcblxuICAgIGlmICh0aGlzLl9zdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl90YXJnZXQpIHtcbiAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbiA9IHRoaXMuX3RhcmdldC5leHBhbmRlZC5zdWJzY3JpYmUoZXhwYW5kZWQgPT4ge1xuICAgICAgICAgIHRoaXMuX2V4cGFuZGVkID0gZXhwYW5kZWQ7XG4gICAgICAgICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBfdGFyZ2V0OiBOeEV4cGFuZGFibGU7XG5cbiAgQElucHV0KClcbiAgc2V0IGFyaWFMYWJlbCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fYXJpYUxhYmVsID0gdmFsdWU7XG4gICAgdGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gIH1cbiAgX2FyaWFMYWJlbDogc3RyaW5nID0gJyc7XG5cbiAgcHJpdmF0ZSBfc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIF9vbkNsaWNrKCkge1xuICAgIGlmICh0aGlzLl90YXJnZXQpIHtcbiAgICAgIHRoaXMuX3RhcmdldC50b2dnbGUoKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fc3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLl9zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==