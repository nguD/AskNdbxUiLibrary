/**
 * @fileoverview added by tsickle
 * Generated from: badge.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
export class NxBadgeComponent {
    /**
     * @param {?} _changeDetRef
     */
    constructor(_changeDetRef) {
        this._changeDetRef = _changeDetRef;
        this._vibrant = false;
    }
    /**
     * Sets the class name for the badge element.
     * @param {?} value
     * @return {?}
     */
    set type(value) {
        if (value !== this._type) {
            this._type = value;
            this._changeDetRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get type() {
        return this._type;
    }
    /**
     * Change badge style to vibrant.
     * @param {?} value
     * @return {?}
     */
    set vibrant(value) {
        /** @type {?} */
        const newValue = coerceBooleanProperty(value);
        if (value !== this._vibrant) {
            this._vibrant = newValue;
            this._changeDetRef.markForCheck();
        }
    }
    /**
     * @return {?}
     */
    get vibrant() {
        return this._vibrant;
    }
}
NxBadgeComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-badge',
                template: '<ng-content></ng-content>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.nx-badge--active]': 'type === "active"',
                    '[class.nx-badge--positive]': 'type === "positive"',
                    '[class.nx-badge--critical]': 'type === "critical"',
                    '[class.nx-badge--negative]': 'type === "negative"',
                    '[class.nx-badge--vibrant]': 'vibrant'
                },
                styles: [":host{font-size:16px;font-size:var(--badge-font-size,16px);line-height:24px;line-height:var(--badge-line-height,24px);font-weight:400;font-weight:var(--badge-font-weight,400);letter-spacing:0;letter-spacing:var(--badge-letter-spacing,0);display:inline-block;padding:0 8px;white-space:nowrap;border-radius:12px;min-width:24px;color:#414141;color:var(--badge-color,#414141);background-color:#d9d9d9;background-color:var(--badge-background-color,#d9d9d9)}@media screen and (-ms-high-contrast:active){:host{border:1px solid windowText}}:host.nx-badge--active{background-color:#cfe9ee;background-color:var(--badge-active-background-color,#cfe9ee);color:#414141;color:var(--badge-active-color,#414141)}:host.nx-badge--positive{background-color:#e3ebaf;background-color:var(--badge-positive-background-color,#e3ebaf);color:#414141;color:var(--badge-positive-color,#414141)}:host.nx-badge--critical{background-color:#f7c7c3;background-color:var(--badge-critical-background-color,#f7c7c3);color:#414141;color:var(--badge-critical-color,#414141)}:host.nx-badge--negative{background-color:#ffe8b0;background-color:var(--badge-negative-background-color,#ffe8b0);color:#414141;color:var(--badge-negative-color,#414141)}:host.nx-badge--vibrant{color:#fff;color:var(--badge-vibrant-color,#fff);background-color:#414141;background-color:var(--badge-vibrant-background-color,#414141)}:host.nx-badge--vibrant.nx-badge--active{background-color:#007ab3;background-color:var(--badge-vibrant-active-background-color,#007ab3);color:#fff;color:var(--badge-vibrant-active-color,#fff)}:host.nx-badge--vibrant.nx-badge--positive{background-color:#1e8927;background-color:var(--badge-vibrant-positive-background-color,#1e8927);color:#fff;color:var(--badge-vibrant-positive-color,#fff)}:host.nx-badge--vibrant.nx-badge--critical{background-color:#dc3149;background-color:var(--badge-vibrant-critical-background-color,#dc3149);color:#fff;color:var(--badge-vibrant-critical-color,#fff)}:host.nx-badge--vibrant.nx-badge--negative{background-color:#efbe25;background-color:var(--badge-vibrant-negative-background-color,#efbe25);color:#414141;color:var(--badge-vibrant-negative-color,#414141)}"]
            }] }
];
/** @nocollapse */
NxBadgeComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
NxBadgeComponent.propDecorators = {
    type: [{ type: Input }],
    vibrant: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._type;
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._vibrant;
    /**
     * @type {?}
     * @private
     */
    NxBadgeComponent.prototype._changeDetRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsbGlhbnovbmd4LW5kYngvYmFkZ2UvIiwic291cmNlcyI6WyJiYWRnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQWlCOUQsTUFBTSxPQUFPLGdCQUFnQjs7OztJQUkzQixZQUFvQixhQUFnQztRQUFoQyxrQkFBYSxHQUFiLGFBQWEsQ0FBbUI7UUFGNUMsYUFBUSxHQUFZLEtBQUssQ0FBQztJQUVzQixDQUFDOzs7Ozs7SUFHekQsSUFDSSxJQUFJLENBQUMsS0FBa0I7UUFDekIsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLEtBQUssRUFBRTtZQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7OztJQUNELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDOzs7Ozs7SUFFRCxJQUNJLE9BQU8sQ0FBQyxLQUFjOztjQUNsQixRQUFRLEdBQUcscUJBQXFCLENBQUMsS0FBSyxDQUFDO1FBRTdDLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7WUFDekIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNuQztJQUNILENBQUM7Ozs7SUFDRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQzs7O1lBMUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBRS9DLElBQUksRUFBRTtvQkFDSiwwQkFBMEIsRUFBRSxtQkFBbUI7b0JBQy9DLDRCQUE0QixFQUFFLHFCQUFxQjtvQkFDbkQsNEJBQTRCLEVBQUUscUJBQXFCO29CQUNuRCw0QkFBNEIsRUFBRSxxQkFBcUI7b0JBQ25ELDJCQUEyQixFQUFFLFNBQVM7aUJBQ3ZDOzthQUNGOzs7O1lBakJtRCxpQkFBaUI7OzttQkF5QmxFLEtBQUs7c0JBV0wsS0FBSzs7Ozs7OztJQWpCTixpQ0FBMkI7Ozs7O0lBQzNCLG9DQUFrQzs7Ozs7SUFFdEIseUNBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG4vKiogUG9zc2libGUgYmFkZ2UgdHlwZXMuICovXG5leHBvcnQgdHlwZSBOeEJhZGdlVHlwZSA9ICdhY3RpdmUnIHwgJ3Bvc2l0aXZlJyB8ICdjcml0aWNhbCcgfCAnbmVnYXRpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdueC1iYWRnZScsXG4gIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdHlsZVVybHM6IFsnLi9iYWRnZS5jb21wb25lbnQuc2NzcyddLFxuICBob3N0OiB7XG4gICAgJ1tjbGFzcy5ueC1iYWRnZS0tYWN0aXZlXSc6ICd0eXBlID09PSBcImFjdGl2ZVwiJyxcbiAgICAnW2NsYXNzLm54LWJhZGdlLS1wb3NpdGl2ZV0nOiAndHlwZSA9PT0gXCJwb3NpdGl2ZVwiJyxcbiAgICAnW2NsYXNzLm54LWJhZGdlLS1jcml0aWNhbF0nOiAndHlwZSA9PT0gXCJjcml0aWNhbFwiJyxcbiAgICAnW2NsYXNzLm54LWJhZGdlLS1uZWdhdGl2ZV0nOiAndHlwZSA9PT0gXCJuZWdhdGl2ZVwiJyxcbiAgICAnW2NsYXNzLm54LWJhZGdlLS12aWJyYW50XSc6ICd2aWJyYW50J1xuICB9XG59KVxuZXhwb3J0IGNsYXNzIE54QmFkZ2VDb21wb25lbnQge1xuICBwcml2YXRlIF90eXBlOiBOeEJhZGdlVHlwZTtcbiAgcHJpdmF0ZSBfdmlicmFudDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NoYW5nZURldFJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHsgfVxuXG4gIC8qKiBTZXRzIHRoZSBjbGFzcyBuYW1lIGZvciB0aGUgYmFkZ2UgZWxlbWVudC4gICovXG4gIEBJbnB1dCgpXG4gIHNldCB0eXBlKHZhbHVlOiBOeEJhZGdlVHlwZSkge1xuICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5fdHlwZSkge1xuICAgICAgdGhpcy5fdHlwZSA9IHZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0UmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuICBnZXQgdHlwZSgpOiBOeEJhZGdlVHlwZSB7XG4gICAgcmV0dXJuIHRoaXMuX3R5cGU7XG4gIH1cbiAgLyoqIENoYW5nZSBiYWRnZSBzdHlsZSB0byB2aWJyYW50LiAqL1xuICBASW5wdXQoKVxuICBzZXQgdmlicmFudCh2YWx1ZTogYm9vbGVhbikge1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcblxuICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5fdmlicmFudCkge1xuICAgICAgdGhpcy5fdmlicmFudCA9IG5ld1ZhbHVlO1xuICAgICAgdGhpcy5fY2hhbmdlRGV0UmVmLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgfVxuICBnZXQgdmlicmFudCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fdmlicmFudDtcbiAgfVxufVxuIl19