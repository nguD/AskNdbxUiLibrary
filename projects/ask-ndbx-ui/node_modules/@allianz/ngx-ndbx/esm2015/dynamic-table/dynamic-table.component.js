/**
 * @fileoverview added by tsickle
 * Generated from: dynamic-table/dynamic-table.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ChangeDetectorRef } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { TableDataSource } from './tabledata-source';
export class NxDynamicTableComponent {
    /**
     * @param {?} el
     * @param {?} _changeDetectorRef
     */
    constructor(el, _changeDetectorRef) {
        this.el = el;
        this._changeDetectorRef = _changeDetectorRef;
        this._dataChange = new BehaviorSubject([]);
        /**
         * An event is dispatched when a row is clicked.
         */
        this.nxRowClick = new EventEmitter();
    }
    /**
     * Sets the data that it will show in the table.
     * @param {?} value
     * @return {?}
     */
    set data(value) {
        this._data = value
            .filter((/**
         * @param {?} element
         * @return {?}
         */
        element => element));
        // If user dont pass displayedColumns the table will show all data and the name of columns will be the key of data
        if (!this._displayedColumns) {
            /** @type {?} */
            const keys = [];
            /** @type {?} */
            const cArray = [];
            // For catch keys of data Objects and assing title, key and type string by default to displayedColumns
            this._data
                .forEach((/**
             * @param {?} element
             * @return {?}
             */
            element => {
                for (const key in element) {
                    if (keys.indexOf(key) === -1) {
                        keys.push(key);
                        cArray.push({ title: key, key: key, type: 'string' });
                    }
                }
            }));
            this._columnKeys = keys;
            this._displayedColumns = cArray;
            // need to call markForCheck as the setter changes displayedColumns here
            // sidenote: isn't needed for the data itself as it gets passed to the cdk-table
            // by the datasource observable
            this._changeDetectorRef.markForCheck();
        }
        this._dataChange.next(this._data);
    }
    /**
     * @return {?}
     */
    get data() {
        return this._data;
    }
    /**
     * Sets the name order and type of columns.
     * @param {?} value
     * @return {?}
     */
    set displayedColumns(value) {
        this._displayedColumns = value;
        this._columnKeys = value.map((/**
         * @param {?} column
         * @return {?}
         */
        column => column.key));
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @return {?}
     */
    get displayedColumns() {
        return this._displayedColumns;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get dataSource() {
        return this._dataSource;
    }
    /**
     * \@docs-private
     * @return {?}
     */
    get columnKeys() {
        return this._columnKeys;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this._data) {
            this._data = [];
            this._dataChange.next(this._data);
        }
        this._dataSource = new TableDataSource(this._dataChange);
    }
    /**
     * \@docs-private
     * @param {?} row
     * @return {?}
     */
    handleRowClick(row) {
        this.nxRowClick.emit(row);
    }
    /**
     * \@docs-private
     * @param {?} element
     * @return {?}
     */
    isNumeric(element) {
        if (element.type === 'numeric') {
            return true;
        }
        return false;
    }
}
NxDynamicTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'nx-dynamic-table',
                template: "<div class=\"nx-table__container\" *ngIf=\"data && data.length > 0\">\n  <div class=\"nx-table__scroll\">\n    <cdk-table [dataSource]=\"dataSource\" class=\"nx-table\">\n      <!-- Column Definition -->\n      <ng-container *ngFor=\"let element of displayedColumns\" cdkColumnDef=\"{{element.key}}\">\n        <cdk-header-cell *cdkHeaderCellDef class=\"nx-table__header-cell\"\n                         [ngClass]=\"{'nx-table__header-cell--number': isNumeric(element) }\">\n          <div class=\"nx-table__header-title--block\">\n            <span class=\"nx-table__header-title\"> {{element.title}}</span>\n          </div>\n        </cdk-header-cell>\n        <cdk-cell *cdkCellDef=\"let row\" class=\"nx-table__cell\"\n                  [ngClass]=\"{'nx-table__cell--number': isNumeric(element) }\" [innerHTML]=\"row[element.key]\"></cdk-cell>\n      </ng-container>\n\n      <!-- Header and Row Declarations -->\n      <cdk-header-row *cdkHeaderRowDef=\"columnKeys\" class=\"nx-table__header-row\"></cdk-header-row>\n      <cdk-row *cdkRowDef=\"let row; columns: columnKeys\" class=\"nx-table__row\"\n               (dblclick)=\"handleRowClick(row)\"></cdk-row>\n\n    </cdk-table>\n  </div>\n</div>\n<div class=\"nx-table__appendix\" *ngIf=\"data.length === 0\">\n  <ng-content></ng-content>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".nx-table{font-size:16px;font-size:var(--table-cell-font-size,16px);line-height:24px;line-height:var(--table-cell-line-height,24px);font-weight:400;font-weight:var(--table-cell-font-weight,400);letter-spacing:0;letter-spacing:var(--table-cell-letter-spacing,0);color:#414141;color:var(--table-cell-color,#414141);text-align:left;width:100%;display:table}.nx-table__container{margin:32px 0}.nx-table__scroll{max-width:100%;overflow:hidden;overflow-x:auto}.nx-table__header-cell{font-size:16px;font-size:var(--table-header-cell-font-size,16px);line-height:24px;line-height:var(--table-header-cell-line-height,24px);font-weight:600;font-weight:var(--table-header-cell-font-weight,600);letter-spacing:0;letter-spacing:var(--table-header-cell-letter-spacing,0);color:#414141;color:var(--table-header-cell-color,#414141);background:0 0;background:var(--table-header-cell-background-color,transparent);border-top:1px solid #d9d9d9;border-top:1px solid var(--table-cell-border-top-color,#d9d9d9);border-bottom:2px solid #414141;border-bottom:2px solid var(--table-header-border-bottom-color,#414141);padding:23px 16px 22px;position:relative}.nx-table__header-cell--number{display:flex;position:relative}.nx-table__header-cell--number .nx-table__header-title--block{justify-content:flex-end}.nx-table__cell--number,.nx-table__header-cell--number{text-align:right}.nx-table__header-row,.nx-table__row{display:table-row;vertical-align:inherit;background-color:transparent}.nx-table__row{background:0 0;background:var(--table-row-background-color,transparent)}.nx-table__cell{border-bottom:1px solid #d9d9d9;border-bottom:1px solid var(--table-header-border-top-color,#d9d9d9);padding:24px 16px 23px;vertical-align:top}.nx-table__row:last-child .nx-table__cell{padding-bottom:22px;border-bottom:2px solid #414141;border-bottom:2px solid var(--table-header-border-bottom-color,#414141)}.nx-table__cell,.nx-table__header-cell{display:table-cell;vertical-align:inherit}"]
            }] }
];
/** @nocollapse */
NxDynamicTableComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef }
];
NxDynamicTableComponent.propDecorators = {
    data: [{ type: Input, args: ['nxData',] }],
    displayedColumns: [{ type: Input, args: ['nxDisplayedColumns',] }],
    nxRowClick: [{ type: Output }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._dataChange;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._dataSource;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._data;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._displayedColumns;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._columnKeys;
    /**
     * An event is dispatched when a row is clicked.
     * @type {?}
     */
    NxDynamicTableComponent.prototype.nxRowClick;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    NxDynamicTableComponent.prototype._changeDetectorRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10YWJsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxsaWFuei9uZ3gtbmRieC8iLCJzb3VyY2VzIjpbImR5bmFtaWMtdGFibGUvZHluYW1pYy10YWJsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2SSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3ZDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVFyRCxNQUFNLE9BQU8sdUJBQXVCOzs7OztJQStEbEMsWUFBb0IsRUFBYyxFQUFVLGtCQUFxQztRQUE3RCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFtQjtRQTdEekUsZ0JBQVcsR0FBMkIsSUFBSSxlQUFlLENBQVEsRUFBRSxDQUFDLENBQUM7Ozs7UUFpRG5FLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBWTJDLENBQUM7Ozs7OztJQXREdEYsSUFDSSxJQUFJLENBQUMsS0FBWTtRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUs7YUFDZixNQUFNOzs7O1FBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUMsQ0FBQztRQUM5QixrSEFBa0g7UUFDbEgsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRTs7a0JBQ3JCLElBQUksR0FBRyxFQUFFOztrQkFBRSxNQUFNLEdBQUcsRUFBRTtZQUM1QixzR0FBc0c7WUFDdEcsSUFBSSxDQUFDLEtBQUs7aUJBQ1AsT0FBTzs7OztZQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNqQixLQUFLLE1BQU0sR0FBRyxJQUFJLE9BQU8sRUFBRTtvQkFDekIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO3dCQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO3dCQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7cUJBQ3ZEO2lCQUNGO1lBQ0gsQ0FBQyxFQUFDLENBQUM7WUFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztZQUN4QixJQUFJLENBQUMsaUJBQWlCLEdBQUcsTUFBTSxDQUFDO1lBQ2hDLHdFQUF3RTtZQUN4RSxnRkFBZ0Y7WUFDaEYsK0JBQStCO1lBQy9CLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUN4QztRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7O0lBQ0QsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7OztJQUdELElBQ0ksZ0JBQWdCLENBQUMsS0FBMkI7UUFDOUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEtBQUssQ0FBQztRQUMvQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxHQUFHOzs7O1FBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3pDLENBQUM7Ozs7SUFDRCxJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDOzs7OztJQU1ELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDOzs7OztJQUdELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDOzs7O0lBSUQsUUFBUTtRQUNOLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0QsQ0FBQzs7Ozs7O0lBR0QsY0FBYyxDQUFDLEdBQVc7UUFDeEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQzs7Ozs7O0lBR0QsU0FBUyxDQUFDLE9BQTJCO1FBQ25DLElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxTQUFTLEVBQUU7WUFDOUIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7O1lBMUZGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1Qix3eUNBQTZDO2dCQUM3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFFaEQ7Ozs7WUFYNEMsVUFBVTtZQUF1QyxpQkFBaUI7OzttQkFxQjVHLEtBQUssU0FBQyxRQUFROytCQStCZCxLQUFLLFNBQUMsb0JBQW9CO3lCQVcxQixNQUFNOzs7Ozs7O0lBakRQLDhDQUE2RTs7Ozs7SUFDN0UsOENBQTRDOzs7OztJQUM1Qyx3Q0FBcUI7Ozs7O0lBQ3JCLG9EQUFnRDs7Ozs7SUFDaEQsOENBQThCOzs7OztJQTZDOUIsNkNBQTBDOzs7OztJQVk5QixxQ0FBc0I7Ozs7O0lBQUUscURBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgTnhEaXNwbGF5ZWRDb2x1bW5zIH0gZnJvbSAnLi9kaXNwbGF5ZWRDb2x1bW5zJztcbmltcG9ydCB7IFRhYmxlRGF0YVNvdXJjZSB9IGZyb20gJy4vdGFibGVkYXRhLXNvdXJjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ254LWR5bmFtaWMtdGFibGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vZHluYW1pYy10YWJsZS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdHlsZVVybHM6IFsgJy4vZHluYW1pYy10YWJsZS5jb21wb25lbnQuc2NzcycgXVxufSlcbmV4cG9ydCBjbGFzcyBOeER5bmFtaWNUYWJsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHJpdmF0ZSBfZGF0YUNoYW5nZTogQmVoYXZpb3JTdWJqZWN0PGFueVtdPiA9IG5ldyBCZWhhdmlvclN1YmplY3Q8YW55W10+KFtdKTtcbiAgcHJpdmF0ZSBfZGF0YVNvdXJjZTogVGFibGVEYXRhU291cmNlIHwgbnVsbDtcbiAgcHJpdmF0ZSBfZGF0YTogYW55W107XG4gIHByaXZhdGUgX2Rpc3BsYXllZENvbHVtbnM6IE54RGlzcGxheWVkQ29sdW1uc1tdO1xuICBwcml2YXRlIF9jb2x1bW5LZXlzOiBzdHJpbmdbXTtcblxuICAvKiogU2V0cyB0aGUgZGF0YSB0aGF0IGl0IHdpbGwgc2hvdyBpbiB0aGUgdGFibGUuICovXG4gIEBJbnB1dCgnbnhEYXRhJylcbiAgc2V0IGRhdGEodmFsdWU6IGFueVtdKSB7XG4gICAgdGhpcy5fZGF0YSA9IHZhbHVlXG4gICAgICAuZmlsdGVyKGVsZW1lbnQgPT4gZWxlbWVudCk7XG4gICAgLy8gSWYgdXNlciBkb250IHBhc3MgZGlzcGxheWVkQ29sdW1ucyB0aGUgdGFibGUgd2lsbCBzaG93IGFsbCBkYXRhIGFuZCB0aGUgbmFtZSBvZiBjb2x1bW5zIHdpbGwgYmUgdGhlIGtleSBvZiBkYXRhXG4gICAgaWYgKCF0aGlzLl9kaXNwbGF5ZWRDb2x1bW5zKSB7XG4gICAgICBjb25zdCBrZXlzID0gW10sIGNBcnJheSA9IFtdO1xuICAgICAgLy8gRm9yIGNhdGNoIGtleXMgb2YgZGF0YSBPYmplY3RzIGFuZCBhc3NpbmcgdGl0bGUsIGtleSBhbmQgdHlwZSBzdHJpbmcgYnkgZGVmYXVsdCB0byBkaXNwbGF5ZWRDb2x1bW5zXG4gICAgICB0aGlzLl9kYXRhXG4gICAgICAgIC5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGlmIChrZXlzLmluZGV4T2Yoa2V5KSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgICAgICAgICAgIGNBcnJheS5wdXNoKHsgdGl0bGU6IGtleSwga2V5OiBrZXksIHR5cGU6ICdzdHJpbmcnIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB0aGlzLl9jb2x1bW5LZXlzID0ga2V5cztcbiAgICAgIHRoaXMuX2Rpc3BsYXllZENvbHVtbnMgPSBjQXJyYXk7XG4gICAgICAvLyBuZWVkIHRvIGNhbGwgbWFya0ZvckNoZWNrIGFzIHRoZSBzZXR0ZXIgY2hhbmdlcyBkaXNwbGF5ZWRDb2x1bW5zIGhlcmVcbiAgICAgIC8vIHNpZGVub3RlOiBpc24ndCBuZWVkZWQgZm9yIHRoZSBkYXRhIGl0c2VsZiBhcyBpdCBnZXRzIHBhc3NlZCB0byB0aGUgY2RrLXRhYmxlXG4gICAgICAvLyBieSB0aGUgZGF0YXNvdXJjZSBvYnNlcnZhYmxlXG4gICAgICB0aGlzLl9jaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG4gICAgdGhpcy5fZGF0YUNoYW5nZS5uZXh0KHRoaXMuX2RhdGEpO1xuICB9XG4gIGdldCBkYXRhKCk6IGFueVtdIHtcbiAgICByZXR1cm4gdGhpcy5fZGF0YTtcbiAgfVxuXG4gIC8qKiBTZXRzIHRoZSBuYW1lIG9yZGVyIGFuZCB0eXBlIG9mIGNvbHVtbnMuICovXG4gIEBJbnB1dCgnbnhEaXNwbGF5ZWRDb2x1bW5zJylcbiAgc2V0IGRpc3BsYXllZENvbHVtbnModmFsdWU6IE54RGlzcGxheWVkQ29sdW1uc1tdKSB7XG4gICAgdGhpcy5fZGlzcGxheWVkQ29sdW1ucyA9IHZhbHVlO1xuICAgIHRoaXMuX2NvbHVtbktleXMgPSB2YWx1ZS5tYXAoY29sdW1uID0+IGNvbHVtbi5rZXkpO1xuICAgIHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuICB9XG4gIGdldCBkaXNwbGF5ZWRDb2x1bW5zKCk6IE54RGlzcGxheWVkQ29sdW1uc1tdIHtcbiAgICByZXR1cm4gdGhpcy5fZGlzcGxheWVkQ29sdW1ucztcbiAgfVxuXG4gIC8qKiBBbiBldmVudCBpcyBkaXNwYXRjaGVkIHdoZW4gYSByb3cgaXMgY2xpY2tlZC4gKi9cbiAgQE91dHB1dCgpIG54Um93Q2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgZ2V0IGRhdGFTb3VyY2UoKTogVGFibGVEYXRhU291cmNlIHtcbiAgICByZXR1cm4gdGhpcy5fZGF0YVNvdXJjZTtcbiAgfVxuXG4gIC8qKiBAZG9jcy1wcml2YXRlICovXG4gIGdldCBjb2x1bW5LZXlzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gdGhpcy5fY29sdW1uS2V5cztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLl9kYXRhKSB7XG4gICAgICB0aGlzLl9kYXRhID0gW107XG4gICAgICB0aGlzLl9kYXRhQ2hhbmdlLm5leHQodGhpcy5fZGF0YSk7XG4gICAgfVxuICAgIHRoaXMuX2RhdGFTb3VyY2UgPSBuZXcgVGFibGVEYXRhU291cmNlKHRoaXMuX2RhdGFDaGFuZ2UpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgaGFuZGxlUm93Q2xpY2socm93OiBPYmplY3QpOiB2b2lkIHtcbiAgICB0aGlzLm54Um93Q2xpY2suZW1pdChyb3cpO1xuICB9XG5cbiAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgaXNOdW1lcmljKGVsZW1lbnQ6IE54RGlzcGxheWVkQ29sdW1ucyk6IGJvb2xlYW4ge1xuICAgIGlmIChlbGVtZW50LnR5cGUgPT09ICdudW1lcmljJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG59XG4iXX0=