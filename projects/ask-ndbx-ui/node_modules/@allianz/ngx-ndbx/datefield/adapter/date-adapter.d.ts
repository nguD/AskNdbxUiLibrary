import { Observable, Subject } from 'rxjs';
/** @docs-private */
export declare abstract class NxDateAdapter<D> {
    protected locale: string;
    protected _localeChanges: Subject<string>;
    abstract toIso8601(date: D): string;
    abstract format(date: D, displayFormat: any): string;
    abstract parse(value: any, format: string | string[], strict: boolean): D | null;
    abstract isValid(date: D): boolean;
    abstract clone(date: D): D;
    abstract isDateInstance(obj: any): boolean;
    abstract invalid(): D;
    abstract getYear(date: D): number;
    abstract getMonth(date: D): number;
    abstract getDate(date: D): number;
    readonly localeChanges: Observable<string>;
    deserialize(value: any): D | null;
    sameDate(first: D | null, second: D | null): boolean;
    compareDate(first: D, second: D): number;
    setLocale(locale: string): void;
    getLocale(): string;
    abstract getYearName(date: D): string;
    abstract createDate(year: number, month: number, date: number): D;
    abstract getNumDaysInMonth(date: D): number;
    abstract getDateNames(): string[];
    abstract getDayOfWeek(date: D): number;
    abstract getFirstDayOfWeek(): number;
    abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];
    abstract today(): D;
    abstract addCalendarMonths(date: D, months: number): D;
    abstract addCalendarYears(date: D, years: number): D;
    abstract addCalendarDays(date: D, days: number): D;
    abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];
    clampDate(date: D, min?: D | null, max?: D | null): D;
}
