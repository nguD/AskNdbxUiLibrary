{"version":3,"file":"allianz-ngx-ndbx-card.js","sources":["ng://@allianz/ngx-ndbx/card/card.component.ts","ng://@allianz/ngx-ndbx/card/card.module.ts","ng://@allianz/ngx-ndbx/card/selectable-card.ts","ng://@allianz/ngx-ndbx/card/selectable-card-change-event.ts","ng://@allianz/ngx-ndbx/card/selectable-card.component.ts","ng://@allianz/ngx-ndbx/card/card-header.component.ts","ng://@allianz/ngx-ndbx/card/card-footer.component.ts","ng://@allianz/ngx-ndbx/card/selectable-card.module.ts"],"sourcesContent":["import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, Attribute} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  template: '<ng-content></ng-content>',\n  styleUrls: ['card.scss'],\n  selector: 'nx-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'nx-card',\n    '[class.is-selectable]': 'selectable',\n    '[class.is-selected]': 'selected',\n    '[class.is-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled',\n    '(click)': '_toggleSelected()',\n    '(keydown.enter)': '_toggleSelected()',\n    '[attr.tabindex]': '_getTabindex()'\n  }\n})\nexport class NxCardComponent {\n  _tabindex: string;\n\n  /**\n   * Whether this card is selectable or not.\n   *\n   * The selectable property of the card is deprecated.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n   */\n  @Input()\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  private _selectable: boolean;\n\n  /**\n   * Whether this card is selected or not.\n   *\n   * The selected property of the card is deprecated.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Input()\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  private _selected: boolean;\n\n  /**\n   * Whether a selectable card is disabled or not.\n   *\n   * The disabled property of the card will be deprecated,\n   * as its selectable properties are deprecated as well.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private _disabled: boolean = false;\n\n  /**\n   * Event emitted when the selected value has changed.\n   *\n   * This output  property of the card is deprecated,\n   * as its selectable properties are deprecated as well.\n   * Please use the selectable card component instead.\n   *\n   * @deprecated\n   * @deletion-target 10.0.0\n  */\n  @Output() selectedChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Attribute('tabindex') tabindex: string) {\n    this._tabindex = tabindex;\n  }\n\n  _toggleSelected(): void {\n    if (this.selectable && !this.disabled) {\n      this.selected = !this.selected;\n      this.selectedChange.emit(this.selected);\n    }\n  }\n\n  _getTabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    if (this.selectable) {\n      return this._tabindex || '0';\n    }\n\n    return this._tabindex || '';\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NxCardComponent} from './card.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [ NxCardComponent ],\n  exports: [ NxCardComponent ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NxCardModule { }\n","/** @docs-private */\nexport abstract class SelectableCard {\n  id;\n  value;\n  checked;\n  name;\n  negative;\n  disabled;\n  checkedChange;\n  selectionChange;\n}\n","import { NxSelectableCardComponent } from './selectable-card.component';\n\nexport class NxSelectableCardChangeEvent {\n  constructor(\n    /** The checked value of the selectable card. */\n    public checked: boolean,\n    /** The value of the selectable card. */\n    public value: string,\n    /** The component instance of the selectable card which emitted the change event. */\n    public card: NxSelectableCardComponent\n  ) {}\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  DoCheck,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\n\nimport {\n  ControlValueAccessor,\n  FormControl,\n  FormGroupDirective,\n  NgControl,\n  NgForm\n} from '@angular/forms';\nimport { SelectableCard } from './selectable-card';\nimport { NxSelectableCardChangeEvent } from './selectable-card-change-event';\nimport { NxErrorComponent } from '@allianz/ngx-ndbx/base';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'nx-selectable-card',\n  templateUrl: './selectable-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./selectable-card.component.scss'],\n  providers: [{provide: SelectableCard, useExisting: forwardRef(() => NxSelectableCardComponent)}],\n  host: {\n    '[class.is-checked]': 'checked',\n    '[class.is-disabled]': 'disabled',\n    '[class.has-error]': 'errorState',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.role]': '\"checkbox\"',\n    '[attr.aria-checked]': 'checked'\n  }\n})\n\nexport class NxSelectableCardComponent extends SelectableCard implements ControlValueAccessor, DoCheck, AfterContentInit {\n  private _id: string = (nextId++).toString();\n  private _checked = false;\n  private _disabled: boolean = false;\n  private _value: string;\n  private _name: string;\n  private _negative: boolean = false;\n  private _tabindex: string = '0';\n  private _required: boolean;\n  /** @docs-private */\n  _errorListIds: string = '';\n\n  /** @docs-private */\n  @ContentChildren(NxErrorComponent) _errorList: QueryList<NxErrorComponent>;\n\n  /** @docs-private */\n  errorState: boolean = false;\n\n  /** @docs-private */\n  stateChanges = new Subject<void>();\n\n  /** An event is dispatched each time the selectable card value is changed */\n  @Output()\n  selectionChange: EventEmitter<NxSelectableCardChangeEvent> = new EventEmitter<NxSelectableCardChangeEvent>();\n\n  /** An event is dispatched each time the selectable card value is changed */\n  @Output() checkedChange = new EventEmitter<boolean>();\n\n  /**\n   * Id of the selectable card.\n   *\n   * If not set, the selectable card gets an incremented value by default.\n   */\n  @Input()\n  set id(value: string) {\n    if (value !== this._id) {\n      this._id = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get id() {\n    return `nx-selectable-card-${this._id}`;\n  }\n\n  /** Whether the selectable card  is checked. */\n  @Input()\n  set checked(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._checked) {\n      this._checked = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  /** The value attribute of the native input element  */\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n\n  set value(value: string) {\n    if (value) {\n      this._value = value;\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Whether the selectable card is disabled. */\n  @Input()\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get disabled(): boolean {\n    return this._disabled || null;\n  }\n\n  /** Whether the selectable card is negative. */\n  @Input()\n  set negative(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._negative) {\n      this._negative = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  get negative(): boolean {\n    return this._negative || null;\n  }\n\n  /** Whether the selectable card is required. */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n\n  /** Name of the selectable card. */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  /** The tabIndex of the element */\n  @Input()\n  get tabindex(): string {\n    if (this.disabled) {\n      return '-1';\n    }\n\n    return this._tabindex;\n  }\n\n  set tabindex(value: string) {\n    this._tabindex = value;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              private _errorStateMatcher: ErrorStateMatcher,\n              @Self() @Optional() public ngControl: NgControl,\n              @Optional() private _parentForm: NgForm,\n              @Optional() private _parentFormGroup: FormGroupDirective\n  ) {\n    super();\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._errorList.changes.subscribe((value) => {\n      this._errorListIds = value.map((errorItem: NxErrorComponent) => {\n        return errorItem.id;\n      }).join(' ');\n      this._changeDetectorRef.markForCheck();\n    });\n\n    this._errorListIds = this._errorList.map((errorItem: NxErrorComponent) => {\n      return errorItem.id;\n    }).join(' ');\n  }\n\n  /** @docs-private */\n  onChangeCallback = (_: any) => {};\n\n  registerOnChange(fn: any): void {\n    this.onChangeCallback = fn;\n  }\n\n  onTouchedCallback = (_: any) => {};\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  writeValue(value: any): void {\n    this.checked = !!value;\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** @docs-private */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const control = this.ngControl ? this.ngControl.control as FormControl : null;\n    const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n\n  /** Toggles the checked state of the selectable card . */\n  public toggle() {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n\n  /** @docs-private */\n  _onInputClick(event: Event): void {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n    if (!this.disabled) {\n      this.toggle();\n      this._emitChangeEvent();\n    }\n  }\n\n  /** @docs-private */\n  _onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n\n  /** @docs-private */\n  private _emitChangeEvent() {\n    const event = new NxSelectableCardChangeEvent(this.checked, this.value, this);\n    this.onChangeCallback(this.checked);\n    this.selectionChange.emit(event);\n    this.checkedChange.emit(this.checked);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-card-header',\n  templateUrl: './card-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxCardHeaderComponent {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'nx-card-footer',\n  templateUrl: './card-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NxCardFooterComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NxSelectableCardComponent } from './selectable-card.component';\nimport { NxCardHeaderComponent } from './card-header.component';\nimport { NxCardFooterComponent } from './card-footer.component';\nimport { NxIconModule } from '@allianz/ngx-ndbx/icon';\nimport { NxErrorModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  declarations: [\n    NxSelectableCardComponent,\n    NxCardHeaderComponent,\n    NxCardFooterComponent\n  ],\n  exports: [\n    NxSelectableCardComponent,\n    NxCardHeaderComponent,\n    NxCardFooterComponent\n  ],\n  imports: [\n    CommonModule,\n    NxIconModule,\n    NxErrorModule\n  ]\n})\nexport class NxSelectableCardModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}