{"version":3,"file":"allianz-ngx-ndbx-grid.js","sources":["ng://@allianz/ngx-ndbx/grid/utils.ts","ng://@allianz/ngx-ndbx/grid/col.component.ts","ng://@allianz/ngx-ndbx/grid/layout.component.ts","ng://@allianz/ngx-ndbx/grid/row.component.ts","ng://@allianz/ngx-ndbx/grid/grid.module.ts"],"sourcesContent":["import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { Element } from '@angular/compiler';\n\n/** is udefined or empty? */\nexport function isEmpty(value: any): boolean {\n    return (value === undefined || value === '');\n}\n\nexport function isEmptyArray(value: any[]): boolean {\n    return (value === undefined || value.length === 0);\n}\n\n/** add space and return mapClassNames (css) */\nexport function addStyles(aux: string, map: {}): string {\n    return ' ' + mapClassNames(aux, [], map);\n}\n\n/** input='small,medium,large'\n *  map = MAPPING\n */\nexport function addStylesFromDimensions(input: string, map: {}): string {\n    const aux = processSplit(input);\n    let output = '';\n    if (aux.length >= 1 && aux.length <= 4) {\n        const auxTiny = addStyles(aux[0], map).replace('-{tier}', '');\n        let auxSmall = '';\n        let auxMedium = '';\n        let auxLarge = '';\n        switch (aux.length) {\n          case 1:\n            auxSmall = addStyles(aux[0], map).replace('{tier}', 'small');\n            auxMedium = addStyles(aux[0], map).replace('{tier}', 'medium');\n            auxLarge = addStyles(aux[0], map).replace('{tier}', 'large');\n            break;\n          case 2:\n            auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n            auxMedium = addStyles(aux[1], map).replace('{tier}', 'medium');\n            auxLarge = addStyles(aux[1], map).replace('{tier}', 'large');\n            break;\n          case 3:\n            auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n            auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');\n            auxLarge = addStyles(aux[2], map).replace('{tier}', 'large');\n            break;\n          default:\n            auxSmall = addStyles(aux[1], map).replace('{tier}', 'small');\n            auxMedium = addStyles(aux[2], map).replace('{tier}', 'medium');\n            auxLarge = addStyles(aux[3], map).replace('{tier}', 'large');\n            break;\n        }\n        output += ' ' + auxTiny.trim() + ' '\n                      + auxSmall.trim() + ' '\n                      + auxMedium.trim() + ' '\n                      + auxLarge.trim();\n    }\n    return output;\n}\n\n// Simple split\nexport function processSplit(aux: string, char: string = ','): Array<string> {\n    return aux.split(char).map(item => item.trim());\n}\n\nexport function validateClassInElement(el: any, aux: string): boolean {\n    return el.hasAttribute(aux);\n}\n","import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { Component, ElementRef, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { addStylesFromDimensions, isEmptyArray, processSplit, validateClassInElement } from './utils';\n\nconst MAPPING = {\n  '': 'nx-grid__column-',\n  'xs': 'nx-grid__column-',\n  'sm': 'nx-grid__column-small-',\n  'md': 'nx-grid__column-medium-',\n  'lg': 'nx-grid__column-large-'\n};\n\nconst MAPPING_ALIGN_SELF = {\n  'auto': 'nx-align-self-{tier}-auto',\n  'start': 'nx-align-self-{tier}-start',\n  'end': 'nx-align-self-{tier}-end',\n  'center': 'nx-align-self-{tier}-center',\n  'baseline': 'nx-align-self-{tier}-baseline',\n  'stretch': 'nx-align-self-{tier}-stretch'\n};\n\nconst MAPPING_ORDER = {\n  'first': 'nx-flex-{tier}-first',\n  'last': 'nx-flex-{tier}-last',\n  'unordered': 'nx-flex-{tier}-unordered',\n};\n\nconst OFFSET_MAPPING = {\n  '': 'nx-grid--offset-',\n  'xs': 'nx-grid--offset-',\n  'sm': 'nx-grid--offset-small-',\n  'md': 'nx-grid--offset-medium-',\n  'lg': 'nx-grid--offset-large-'\n};\n\nconst MIN = 0;\nconst MAX = 12;\n\n/** Type for the available alignment values of a column inside the flexible container. */\nexport type ColSelfAlignment = 'auto' | 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n\n/** Type for the available values for setting the order of a column within a row. */\nexport type ColOrder = 'first' | 'last' | 'unordered';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxCol]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['col.component.scss'],\n  host: {\n    '[class]': '_columnClasses'\n  }\n})\nexport class NxColComponent implements OnInit {\n  private _classNames: Array<string> = [];\n\n  /**\n   * Number of columns used.\n   *\n   * Values: 1 - 12, default value: 12.\n   */\n  @Input('nxCol') col: string = '';\n\n  /**\n   * The number of columns the column should be offset.\n   *\n   * Values: 1 - 12, default value: 12.\n   */\n  @Input('nxColOffset') offset: string = '';\n\n  /** The alignment for a column inside the flexible container. */\n  @Input('nxAlignSelf') itemSelf: ColSelfAlignment = null;\n\n  /** Order of the column within the row. */\n  @Input('nxColOrder') order: ColOrder = null;\n\n  get _columnClasses(): string {\n    return this._classNames.join(' ').trim();\n  }\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    if (validateClassInElement(this.el.nativeElement.parentElement, 'nxRow')) {\n\n      // create an array of all classes to not worry about the spaces between the classes\n      // in all logic functions all the time :)\n      // gets joined in get _columnClasses()\n      this._classNames = [\n        ...this._getColClasses(),\n        ...this._getOffsetClasses(),\n        ...this._getAlignSelfClasses(),\n        ...this._getOrderClasses(),\n        // add custom classes set by the user and append it to the end\n        ...this.el.nativeElement.className.split(' ')\n      ];\n    } else {\n      this.generateError('Exception: NxColDirective. nxRow don\\'t exist');\n    }\n  }\n\n  private _getColClasses() {\n    const columnClasses = this._mapTiers(this.col, [], MAPPING, ['0']);\n    if (columnClasses.length === 0) {\n      this.generateError('Exception: NxColDirective. Empty nxCol attribute.');\n    }\n    return columnClasses;\n  }\n\n  private _getAlignSelfClasses() {\n    /** if itemSelf contains values */\n    if (this.itemSelf) {\n      /** Values: auto, start, end, center, baseline, stretch */\n      return addStylesFromDimensions(this.itemSelf, MAPPING_ALIGN_SELF).split(' ');\n    }\n    return [];\n  }\n\n  private _getOrderClasses() {\n    /** if order-flex */\n    if (this.order) {\n      /** Values: first, last or unordered */\n      return addStylesFromDimensions(this.order, MAPPING_ORDER).split(' ');\n    }\n    return [];\n  }\n\n  private _getOffsetClasses() {\n    return this._mapTiers(this.offset, [], OFFSET_MAPPING);\n  }\n\n  private _mapTiers(input: string, defaults?: any[], mapping?: {}, exclude?: string[]): string[] {\n    const givenTiers = processSplit(input);\n    let mappedClasses: string[] = [];\n    if (input && !isEmptyArray(givenTiers) && this.checkNotAllowedValues(givenTiers, exclude)) {\n      switch (givenTiers.length) {\n        case 1:\n          this.validateInput(givenTiers[0]);\n          mappedClasses = [mapClassNames('', defaults, mapping) + givenTiers[0]];\n          break;\n        case 2:\n          this.validateInput(givenTiers[0], givenTiers[1]);\n          mappedClasses = [\n            mapClassNames('xs', defaults, mapping) + givenTiers[0],\n            mapClassNames('sm', defaults, mapping) + givenTiers[1],\n            mapClassNames('md', defaults, mapping) + givenTiers[1],\n            mapClassNames('lg', defaults, mapping) + givenTiers[1]\n          ];\n          break;\n        case 3:\n          this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2]);\n          mappedClasses = [\n            mapClassNames('xs', defaults, mapping) + givenTiers[0],\n            mapClassNames('sm', defaults, mapping) + givenTiers[1],\n            mapClassNames('md', defaults, mapping) + givenTiers[2],\n            mapClassNames('lg', defaults, mapping) + givenTiers[2]\n          ];\n          break;\n        case 4:\n          this.validateInput(givenTiers[0], givenTiers[1], givenTiers[2], givenTiers[3]);\n          mappedClasses = [\n            mapClassNames('xs', defaults, mapping) + givenTiers[0],\n            mapClassNames('sm', defaults, mapping) + givenTiers[1],\n            mapClassNames('md', defaults, mapping) + givenTiers[2],\n            mapClassNames('lg', defaults, mapping) + givenTiers[3]\n          ];\n          break;\n        default:\n          mappedClasses = [mapClassNames('', defaults, mapping) + '12'];\n          break;\n      }\n    }\n\n    return mappedClasses;\n  }\n\n  /** @docs-private */\n  isValueBetween(min: number, max: number, value: string): boolean {\n    try {\n      const parsed = parseInt(value, 10);\n      return (max >= parsed && min <= parsed);\n    } catch (error) {\n      this.generateError('Exception: NxColDirective. One argument is not number');\n    }\n  }\n\n  /** @docs-private */\n  checkNotAllowedValues(values: string[], excludes: string[]): boolean {\n    if (!excludes) {\n      return true;\n    }\n    const found = values.find(val => excludes.indexOf(val) > -1);\n    if (found) {\n      this.generateError(`Exception: NxColDirective. Incorrect parameter. ${found} is not allowed here`);\n    }\n    return !found;\n  }\n\n  /** @docs-private */\n  generateError(err: string) {\n    throw new Error(err);\n  }\n\n  /** @docs-private */\n  validateInput(...value: Array<string>) {\n    value.forEach(element => {\n      if (!this.isValueBetween(MIN, MAX, element)) {\n        this.generateError(`Exception: NxColDirective. Incorrect parameters, values must be between ${MIN} and ${MAX}`);\n      }\n    });\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxLayout]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['layout.component.scss'],\n  host: {\n    '[class.nx-grid]': 'grid',\n    '[class.nx-grid--no-gutters]': 'noGutters',\n    '[class.nx-grid--max-width]': 'maxWidth'\n  }\n})\nexport class NxLayoutComponent {\n  private _classNames: string = '';\n\n  /** @docs-private */\n  grid: boolean = true;\n\n  /** @docs-private */\n  noGutters: boolean;\n\n  /** @docs-private */\n  maxWidth: boolean;\n\n  /**\n   * Type of layout.\n   *\n   * Values: grid | grid nogutters | grid maxwidth. Default value: grid.\n   */\n  @Input('nxLayout')\n  set classNames(value: string) {\n    if (this._classNames === value) {\n      return;\n    }\n\n    this._classNames = value;\n    this.grid = !!this._classNames.match(/grid/);\n    this.noGutters = !!this._classNames.match(/nogutters/);\n    this.maxWidth = !!this._classNames.match(/maxwidth/);\n  }\n\n  get classNames(): string {\n    return this._classNames;\n  }\n}\n","import { mapClassNames } from '@allianz/ngx-ndbx/utils';\nimport { Component, ElementRef, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { addStylesFromDimensions, isEmpty } from './utils';\n\nconst MAPPING_JUSTIFY = {\n    'start': 'nx-justify-content-{tier}-start',\n    'end': 'nx-justify-content-{tier}-end',\n    'center': 'nx-justify-content-{tier}-center',\n    'between': 'nx-justify-content-{tier}-between',\n    'around': 'nx-justify-content-{tier}-around'\n  };\n\nconst MAPPING_ALIGN_ITEMS = {\n    'start': 'nx-align-items-{tier}-start',\n    'end': 'nx-align-items-{tier}-end',\n    'center': 'nx-align-items-{tier}-center',\n    'baseline': 'nx-align-items-{tier}-baseline',\n    'stretch': 'nx-align-items-{tier}-stretch'\n  };\n\nconst MAPPING_ALIGN_CONTENT = {\n    'start': 'nx-align-content-{tier}-start',\n    'end': 'nx-align-content-{tier}-end',\n    'center': 'nx-align-content-{tier}-center',\n    'between': 'nx-align-content-{tier}-between',\n    'around': 'nx-align-content-{tier}-around',\n    'stretch': 'nx-align-content-{tier}-stretch'\n  };\n\nconst MAPPING_WRAP = {\n    'wrap': 'nx-flex-{tier}-wrap',\n    'nowrap': 'nx-flex-{tier}-nowrap',\n    'reverse': 'nx-flex-{tier}-wrap-reverse'\n};\n\nconst MAPPING_LAYOUT = {\n    'row': 'nx-grid__row',\n    'row-reverse': 'nx-grid__row-reverse'\n};\n\nexport type RowJustification = 'start' | 'end' | 'center' | 'between' | 'around';\nexport type RowContentAlignment = 'start' | 'end' | 'center' | 'between' | 'around' | 'stretch';\nexport type RowItemsAlignment = 'start' | 'end' | 'center' | 'between' | 'stretch';\nexport type RowWrapping = 'wrap' | 'nowrap' | 'reverse';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[nxRow]',\n  template: '<ng-content></ng-content>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['row.component.scss'],\n  host: {\n    '[class]': '_classNames'\n  }\n})\nexport class NxRowComponent implements OnInit {\n  private ROW  = 'row';\n  private ROW_RESERVE  = 'row-reverse';\n\n  _classNames: string = '';\n\n  /** General */\n  private _nxRow: string = this.ROW;\n\n  /**\n   * Values: row | row-reverse\n   *\n   * Default value: row\n   */\n  @Input()\n  set nxRow(value: string) {\n    if (value !== '') {\n      this._nxRow = value;\n    }\n  }\n\n  /* Input row variables */\n\n  /** Align items on the main axis (horizontally). */\n  @Input('nxRowJustify') nxRowJustify: RowJustification = null;\n\n  /** Similar to nxRowAlignItems, but instead of aligning flex items, it aligns flex lines. */\n  @Input('nxRowAlignContent') nxRowAlignContent: RowContentAlignment = null;\n\n  /** The default alignment for items inside the flexible container. */\n  @Input('nxRowAlignItems') nxRowAlignItems: RowItemsAlignment = null;\n\n  /** How the flexible items should be wrapped. */\n  @Input('nxRowWrap') nxRowWrap: RowWrapping = null;\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    if (this._nxRow === this.ROW ||\n      this._nxRow === this.ROW_RESERVE) {\n      /** add row style */\n      this._classNames = mapClassNames(this._nxRow, [], MAPPING_LAYOUT);\n      /** if not empty nxRowWrap, split input and add style */\n      if (this.nxRowWrap) {\n        /** possibles atributes: wrap,reverse,no-wrap */\n        this._classNames += addStylesFromDimensions(this.nxRowWrap, MAPPING_WRAP);\n      }\n      /** if not empty nxRowJustify, add style */\n      if (this.nxRowJustify) {\n        /** possibles atributes: start,end,center,between,around */\n        this._classNames += addStylesFromDimensions(this.nxRowJustify, MAPPING_JUSTIFY);\n      }\n      /** if not empty nxRowAlignContent, add style */\n      if (this.nxRowAlignContent) {\n        /** possibles atributes: start,end,center,between,stetch */\n        this._classNames += addStylesFromDimensions(this.nxRowAlignContent, MAPPING_ALIGN_CONTENT);\n      }\n      /** if not empty nxRowAlignItems, add style */\n      if (this.nxRowAlignItems) {\n        /** possibles atributes: start,end,center,around,stetch */\n        this._classNames += addStylesFromDimensions(this.nxRowAlignItems, MAPPING_ALIGN_ITEMS);\n      }\n      this._classNames += ' ' + this.el.nativeElement.className;\n      this._classNames = this._classNames.trim();\n    } else {\n      throw new Error('nxRow is incorrect');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NxColComponent } from './col.component';\nimport { NxLayoutComponent } from './layout.component';\nimport { CommonModule } from '@angular/common';\nimport { NxRowComponent } from './row.component';\n\n@NgModule({\n  declarations: [\n      NxLayoutComponent,\n      NxRowComponent,\n      NxColComponent\n   ],\n  exports: [\n    NxLayoutComponent,\n    NxRowComponent,\n    NxColComponent\n   ],\n   imports: [\n     CommonModule\n   ]\n})\nexport class NxGridModule { }\n"],"names":[],"mappings":"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"}