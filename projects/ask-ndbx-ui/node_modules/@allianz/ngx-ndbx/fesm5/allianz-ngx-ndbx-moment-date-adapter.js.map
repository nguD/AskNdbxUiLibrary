{"version":3,"file":"allianz-ngx-ndbx-moment-date-adapter.js","sources":["ng://@allianz/ngx-ndbx/moment-date-adapter/adapter/moment-date-adapter.ts","ng://@allianz/ngx-ndbx/moment-date-adapter/adapter/moment-date-formats.ts","ng://@allianz/ngx-ndbx/moment-date-adapter/adapter/index.ts"],"sourcesContent":["import { NX_DATE_LOCALE, NxDateAdapter } from '@allianz/ngx-ndbx/datefield';\n\nimport { NgModule, Optional, Inject } from '@angular/core';\n\n// rollup vs default import.\n// https://github.com/rollup/rollup/issues/670#issuecomment-281139978\nimport * as momentNs from 'moment';\nconst moment = momentNs;\nimport { Moment } from 'moment';\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/**\n * @docs-private\n */\nexport class NxMomentDateAdapter extends NxDateAdapter<Moment> {\n\n  private _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n\n  constructor(@Optional() @Inject(NX_DATE_LOCALE) dateLocale: string) {\n    super();\n    this.setLocale(dateLocale || moment.locale());\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n\n    const momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n    };\n  }\n\n  toIso8601(date: Moment): string {\n    return this.clone(date).format();\n  }\n\n  parse(value: any, format: string | string[], strict: boolean): Moment | null {\n    if (value && typeof value === 'string') {\n      return moment(value, format, this.locale, strict);\n    }\n    return value ? moment(value).locale(this.locale) : null;\n  }\n\n  format(date: Moment, displayFormat: string): string {\n    date = this.clone(date);\n    if (!this.isValid(date)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n    return date.format(displayFormat);\n  }\n\n  isValid(date: Moment): boolean {\n    return this.clone(date).isValid();\n  }\n\n  clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  isDateInstance(obj: any): boolean {\n    return moment.isMoment(obj);\n  }\n\n  getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  deserialize(value: any): Moment | null {\n    let date;\n    if (value instanceof Date) {\n      date = moment(value);\n    }\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      date = moment(value, moment.ISO_8601).locale(this.locale);\n    }\n    if (date && this.isValid(date)) {\n      return date;\n    }\n    return super.deserialize(value);\n  }\n\n  invalid(): Moment {\n    return moment.invalid();\n  }\n\n  getYearName(date: Moment): string {\n    return this.clone(date).format('YYYY');\n  }\n\n  createDate(year: number, month: number, date: number): Moment {\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\n    // explicitly check each case so we can throw more descriptive errors.\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = moment({year, month, date}).locale(this.locale);\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  getNumDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  getDateNames(): string[] {\n    return this._localeData.dates;\n  }\n\n  getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  getFirstDayOfWeek(): number {\n    return this._localeData.firstDayOfWeek;\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n\n  today(): Moment {\n    return moment().locale(this.locale);\n  }\n\n  addCalendarMonths(date: Moment, months: number): Moment {\n    return this.clone(date).add({months});\n  }\n\n  addCalendarDays(date: Moment, days: number): Moment {\n    return this.clone(date).add({days});\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (style === 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n    if (style === 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n    return this._localeData.narrowDaysOfWeek;\n  }\n\n  addCalendarYears(date: Moment, years: number): Moment {\n    return this.clone(date).add({years});\n  }\n}\n","import { NX_DATE_FORMATS, NxDateFormats } from '@allianz/ngx-ndbx/datefield';\n\nexport const NX_MOMENT_DATE_FORMATS: NxDateFormats = {\n  parse: {\n    dateInput: 'L',\n  },\n  display: {\n    dateInput: 'L',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n","import { NxDateAdapter, NX_DATE_LOCALE, NX_DATE_FORMATS, NX_DATE_LOCALE_PROVIDER } from '@allianz/ngx-ndbx/datefield';\nimport {NgModule} from '@angular/core';\nimport {NxMomentDateAdapter} from './moment-date-adapter';\nimport {NX_MOMENT_DATE_FORMATS} from './moment-date-formats';\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n  providers: [\n    NX_DATE_LOCALE_PROVIDER,\n    {provide: NxDateAdapter, useClass: NxMomentDateAdapter, deps: [NX_DATE_LOCALE]}\n  ],\n})\nexport class MomentDateModule {}\n\n@NgModule({\n  imports: [MomentDateModule],\n  providers: [{provide: NX_DATE_FORMATS, useValue: NX_MOMENT_DATE_FORMATS}],\n})\nexport class NxMomentDateModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}