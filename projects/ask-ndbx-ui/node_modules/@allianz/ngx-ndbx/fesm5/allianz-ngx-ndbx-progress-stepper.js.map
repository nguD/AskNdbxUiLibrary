{"version":3,"file":"allianz-ngx-ndbx-progress-stepper.js","sources":["ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step-item.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress-stepper.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step-group.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/multi/multi-step.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/single/single-step.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress/progress.component.ts","ng://@allianz/ngx-ndbx/progress-stepper/buttons.ts","ng://@allianz/ngx-ndbx/progress-stepper/progress-stepper.module.ts"],"sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NxMultiStepperDirection } from './multi-step.component';\n\n/** @docs-private */\n@Component({\n  selector: 'nx-multi-step-item',\n  templateUrl: './multi-step-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./multi-step-item.component.scss'],\n  host: {\n    '[class.nx-multi-step-item--vertical]': 'direction === \"vertical\"',\n    '[class.is-selected]': 'selected',\n    '[class.is-completed]': 'completed',\n    '[class.is-active]': 'active',\n    '[class.is-disabled]': 'disabled',\n    '[class.is-last]': 'last',\n    '[attr.aria-disabled]': 'disabled ? \"true\" : null'\n  }\n})\nexport class NxMultiStepItemComponent {\n  /** The direction of the step */\n  @Input()\n  get direction(): NxMultiStepperDirection {\n    return this._direction;\n  }\n  set direction(value: NxMultiStepperDirection) {\n    this._direction = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _direction: NxMultiStepperDirection = 'horizontal';\n\n  /** The label of the step. */\n  @Input() label: string;\n\n  /** Sets the selected step. */\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n  set selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _selected: boolean;\n\n  /** Sets the active step. */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _active: boolean;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _disabled: boolean;\n\n  /** Sets the last step. */\n  @Input()\n  get last(): boolean {\n    return this._last;\n  }\n  set last(value: boolean) {\n    this._last = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _last: boolean;\n\n  /** Sets the step completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completed;\n  }\n  set completed(value: boolean) {\n    this._completed = coerceBooleanProperty(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  private _completed: boolean;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { DOCUMENT } from '@angular/common';\nimport { CdkStep, CdkStepper } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Inject,\n  Input,\n  QueryList,\n  SkipSelf,\n  OnDestroy,\n  ElementRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { takeUntil, takeWhile } from 'rxjs/operators';\nimport { ErrorStateMatcher } from '@allianz/ngx-ndbx/utils';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\n\n// tslint:disable:use-input-property-decorator\n\n// We need to reference steps in stepper and stepper in steps. To prevent circular depenedency errors\n// Provide both components in a single file. Otherwise we would have to introduce interface/abstract classes\n// shared between both implementations.\n\n@Component({\n  selector: 'nx-step',\n  templateUrl: 'progress-stepper.component.html',\n  exportAs: 'nxStep',\n  providers: [{provide: ErrorStateMatcher, useExisting: NxStepComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxStepComponent extends CdkStep implements ErrorStateMatcher, OnDestroy {\n  _destroyed: Subject<boolean> = new Subject();\n\n  constructor(\n      @Inject(forwardRef(() => NxProgressStepperDirective)) private stepper: NxProgressStepperDirective,\n      @SkipSelf() private _errorStateMatcher: ErrorStateMatcher) {\n    super(stepper);\n  }\n\n  set stepControl(value: any) {\n    this._stepControl = value;\n\n    // If a step control changes its state, the stepper needs to update.\n    if (this._stepControl) {\n      this._stepControl.statusChanges\n        .pipe(\n          takeUntil(this._destroyed),\n          takeWhile(() => this._stepControl === value)\n        )\n        .subscribe(() => {\n          this.stepper._stateChanged();\n        });\n    }\n  }\n  /** The top level abstract control of the step. */\n  get stepControl() {\n    return this._stepControl;\n  }\n  private _stepControl: any;\n\n  set interacted(value: boolean) {\n    this._interacted = value;\n\n    if (this.stepper) {\n      this.stepper._stateChanged();\n    }\n  }\n\n  /** Whether the user has seen the expanded step content or not. */\n  get interacted(): boolean {\n    return this._interacted;\n  }\n  private _interacted: boolean = false;\n\n  /** Custom error state matcher that checks for validity of the step form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Checks for the validity of a step form that is not submitted or touched,\n    // e.g when the user directly clicks the \"next\" button or directly on the step\n    const customErrorState = !!(control && control.invalid && this.interacted);\n    return originalErrorState || customErrorState;\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next(true);\n    this._destroyed.complete();\n  }\n}\n\n/** @docs-private */\n@Directive({\n  selector: '[nxProgressStepper]',\n  exportAs: 'nxProgressStepper',\n})\nexport class NxProgressStepperDirective extends CdkStepper implements AfterContentInit {\n  // Do not initialize with an empty QueryList or the hasNext() function produces\n  // wrong results on init\n  @ContentChildren(NxStepComponent, { descendants: true }) _steps: QueryList<NxStepComponent>;\n  _stepHeader: QueryList<null> = new QueryList();\n\n  /** Sets the label on the left side showing the current step label. Used for mobile viewports. */\n  @Input() currentStepLabel: string;\n\n  /** Sets the title to be rendered above the progress bar.\n   * @deletion-target 10.0.0\n   * @deprecated Use `nx-label` instead */\n  @Input() title: string;\n\n  constructor(\n    private _cdRef: ChangeDetectorRef,\n    _dir: Directionality,\n    _elementRef: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n      super(_dir, _cdRef, _elementRef, _document);\n    }\n\n  ngAfterContentInit() {\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._stateChanged();\n      });\n\n    // If a step control changes its state, the stepper needs to update.\n    this._steps.filter(s => !!s.stepControl)\n      .forEach(step => {\n        step.stepControl.statusChanges\n          .pipe(takeUntil(step._destroyed))\n          .subscribe(() => {\n            this._stateChanged();\n          });\n      });\n\n    // we need to defer change detection that the nxStepperNext and NxStepperPrevious buttons\n    // can run change detection again, because they are initialized before the stepper content\n    Promise.resolve().then(() => {\n      this._cdRef.detectChanges();\n    });\n  }\n\n  /** @docs-private */\n  get hasPrevious() {\n    return (this.selectedIndex - 1) >= 0;\n  }\n\n  /** @docs-private */\n  get hasNext() {\n    return (this.selectedIndex + 1) < this.count;\n  }\n\n  /** @docs-private */\n  get count() {\n    return this._steps ? this._steps.length : 0;\n  }\n\n  /** @docs-private */\n  get currentStep(): NxStepComponent | null {\n    if (this.count === 0 || this.selectedIndex === -1) {\n      return null;\n    }\n\n    const steps = this._steps.toArray();\n    return steps[this.selectedIndex];\n  }\n\n  /** @docs-private */\n  get nextStep(): NxStepComponent | null {\n    if (this.selectedIndex + 1 >= this._steps.length) {\n      return null;\n    }\n\n    return this._steps.toArray()[this.selectedIndex + 1];\n  }\n\n  /** @docs-private */\n  get steps() {\n    return this._steps;\n  }\n\n  /** @docs-private */\n  get currentLabel() {\n    const step = this.currentStep;\n    const label = step.stepLabel || step.label;\n\n    return `${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}`;\n  }\n}\n","import { Component, Input, QueryList, ContentChildren, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NxStepComponent } from '../progress-stepper.component';\n\n@Component({\n  templateUrl: './multi-step-group.component.html',\n  selector: 'nx-step-group',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxMultiStepperGroupComponent {\n  /** @docs-private */\n  @ContentChildren(NxStepComponent, { descendants: true }) steps: QueryList<NxStepComponent>;\n\n  /** Sets the label of a group that is shown to the user. */\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  get label(): string {\n    return this._label;\n  }\n  private _label;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  AfterContentInit,\n  QueryList,\n  ContentChildren\n} from '@angular/core';\nimport { NxProgressStepperDirective, NxStepComponent } from './../progress-stepper.component';\nimport { NxMultiStepperGroupComponent } from './multi-step-group.component';\n\n/** Direction of the multi stepper */\nexport type NxMultiStepperDirection = 'vertical' | 'horizontal';\n\n@Component({\n  selector: 'nx-multi-stepper',\n  templateUrl: './multi-step.component.html',\n  styleUrls: [\n    '../progress-stepper.component.scss',\n    './multi-step.component.scss'\n  ],\n  providers: [\n    {\n      provide: NxProgressStepperDirective,\n      useExisting: NxMultiStepperComponent\n    }\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.nx-multi-stepper--vertical]': 'direction === \"vertical\"'\n  }\n})\nexport class NxMultiStepperComponent extends NxProgressStepperDirective\n  implements AfterContentInit {\n\n  /** @docs-private */\n  @ContentChildren(NxMultiStepperGroupComponent, { descendants: true })\n  groups: QueryList<NxMultiStepperGroupComponent>;\n\n  /** Sets the direction of the multi stepper. */\n  @Input()\n  get direction(): NxMultiStepperDirection {\n    return this._direction;\n  }\n  set direction(value: NxMultiStepperDirection) {\n    this._direction = value;\n  }\n  private _direction: NxMultiStepperDirection = 'horizontal';\n\n  ngAfterContentInit() {\n    if (this.groups.length) {\n      this._steps.reset(this._stepsInGroups);\n    }\n\n    this.groups.changes.subscribe(() => {\n      this._steps.reset(this._stepsInGroups);\n    });\n  }\n\n  _stepDisabled(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    if (this.linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control\n          ? control.invalid || control.pending || !step.interacted\n          : !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private get _stepsInGroups(): NxStepComponent[] {\n    if (this.groups.length) {\n      return this.groups\n        .reduce((steps, group) => steps.concat(group.steps.toArray()), []);\n    }\n\n    return [];\n  }\n\n  _getIndex(step: NxStepComponent): number {\n    return this.steps.toArray().indexOf(step);\n  }\n\n  _isGroupActive(groupIndex: number) {\n    return this.selectedIndex >= this.getGroupItemIndex(groupIndex);\n  }\n\n  _isGroupDisabled(groupIndex: number) {\n    return this._stepDisabled(this.getGroupItemIndex(groupIndex));\n  }\n\n  private getGroupItemIndex(groupIndex: number): number {\n    let count = 0;\n    const groups = this.groups.toArray();\n\n    for (let i = 0; i < groupIndex; i++) {\n      count += groups[i].steps.length;\n    }\n\n    return count;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './../progress-stepper.component';\n\n@Component({\n  selector: 'nx-single-stepper',\n  templateUrl: './single-step.component.html',\n  styleUrls: ['../progress-stepper.component.scss', './single-step.component.scss'],\n  providers: [{provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NxSingleStepperComponent extends NxProgressStepperDirective {\n  /** Sets the label on the right showing the next step. */\n  @Input('nextLabel')\n  get rightLabel(): string { return this._rightLabel; }\n  set rightLabel(v) { this._rightLabel = v; }\n\n  private _rightLabel: string = 'Next step:';\n\n  /** @docs-private */\n  get progress() {\n    return (this.selectedIndex + 1) / this.count;\n  }\n\n  /** @docs-private */\n  get currentLabel() {\n    const step = this.currentStep;\n    const label = step.stepLabel || step.label;\n\n    return `\n    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}\n    `;\n  }\n\n  /** @docs-private */\n  get nextLabel() {\n    const step = this.nextStep;\n\n    if (step) {\n      const label = step.stepLabel || step.label;\n\n      return `\n        ${this.rightLabel} ${label}\n      `;\n    }\n\n    return null;\n  }\n\n}\n","import { clamp } from '@allianz/ngx-ndbx/utils';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './../progress-stepper.component';\n\n@Component({\n  selector: 'nx-progress-stepper',\n  templateUrl: 'progress.component.html',\n  styleUrls: ['../progress-stepper.component.scss', './progress.component.scss'],\n  providers: [{provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent}],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxProgressStepperComponent extends NxProgressStepperDirective {\n\n  /** Sets the current value/progress of the progress bar. */\n  @Input()\n  get progress(): number { return this._progress; }\n  set progress(value: number) { this._progress = clamp(value || 0); }\n  private _progress: number = 0;\n}\n","import { CdkStepper, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport { ChangeDetectorRef, Directive, DoCheck } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './progress-stepper.component';\n\n// tslint:disable:use-input-property-decorator\n\n@Directive({\n  selector: 'button[nxStepperNext]',\n  host: {\n    '[type]': 'type',\n    '[disabled]': 'disabled'\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: NxProgressStepperDirective}]\n})\nexport class NxStepperNextDirective extends CdkStepperNext implements DoCheck {\n\n  /** @docs-private */\n  disabled = false;\n\n  constructor(_stepper: CdkStepper, private changeDetectorRef: ChangeDetectorRef) {\n    super(_stepper);\n  }\n\n  /**\n   * Implemented to prevent changed after checked error after stepper init.\n   * When the stepper initializes the directive is checked first before\n   * the stepper can check its content thus it doesn't know about it's children yet\n   * so _stepper.hasNext returns false and disables the buttons. In the same CD cycle\n   * after the stepper has checked its contents the button needs to be enabled resulting\n   * in the error.\n   */\n  ngDoCheck() {\n    const stepper = this._stepper as any as NxProgressStepperDirective;\n    if (this.disabled !== !stepper.hasNext) {\n      this.disabled = !stepper.hasNext;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n}\n\n@Directive({\n  selector: 'button[nxStepperPrevious]',\n  host: {\n    '[type]': 'type',\n    '[disabled]': '!stepper.hasPrevious'\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: NxProgressStepperDirective}]\n})\nexport class NxStepperPreviousDirective extends CdkStepperPrevious {\n  constructor(_stepper: CdkStepper) {\n    super(_stepper);\n  }\n\n  get stepper(): NxProgressStepperDirective {\n    return this._stepper as NxProgressStepperDirective;\n  }\n\n}\n","import { NxProgressbarModule } from '@allianz/ngx-ndbx/progressbar';\nimport { NxMultiStepItemComponent } from './multi/multi-step-item.component';\nimport { NxMultiStepperComponent } from './multi/multi-step.component';\nimport { NxSingleStepperComponent } from './single/single-step.component';\nimport { NxProgressStepperComponent } from './progress/progress.component';\nimport { NxStepperNextDirective, NxStepperPreviousDirective } from './buttons';\nimport { NxProgressStepperDirective, NxStepComponent } from './progress-stepper.component';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NxIconModule} from '@allianz/ngx-ndbx/icon';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport { NxMultiStepperGroupComponent } from './multi/multi-step-group.component';\nimport { NxLabelModule } from '@allianz/ngx-ndbx/base';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkStepperModule,\n    NxIconModule,\n    NxProgressbarModule,\n    NxLabelModule\n  ],\n  declarations: [\n    NxProgressStepperDirective,\n    NxMultiStepperComponent,\n    NxStepComponent,\n    NxStepperNextDirective,\n    NxStepperPreviousDirective,\n    NxProgressStepperComponent,\n    NxSingleStepperComponent,\n    NxMultiStepItemComponent,\n    NxMultiStepperGroupComponent\n  ],\n  exports: [\n    NxProgressStepperDirective,\n    NxSingleStepperComponent,\n    NxProgressStepperComponent,\n    NxMultiStepperComponent,\n    NxStepComponent,\n    NxStepperNextDirective,\n    NxStepperPreviousDirective,\n    NxMultiStepperGroupComponent\n  ]\n})\nexport class NxProgressStepperModule {\n\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}