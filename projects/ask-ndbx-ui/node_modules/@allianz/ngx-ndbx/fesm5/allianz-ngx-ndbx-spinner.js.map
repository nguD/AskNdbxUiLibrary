{"version":3,"file":"allianz-ngx-ndbx-spinner.js","sources":["ng://@allianz/ngx-ndbx/spinner/spinner.component.ts","ng://@allianz/ngx-ndbx/spinner/spinner.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/** Options for sizing of the spinner. */\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nconst DEFAULT_SIZE = 'small';\n\n@Component({\n  selector: 'nx-spinner',\n  templateUrl: './spinner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./spinner.component.scss'],\n  host: {\n    '[class.nx-spinner--small]': 'size === \"small\"',\n    '[class.nx-spinner--medium]': 'size === \"medium\"',\n    '[class.nx-spinner--large]': 'size === \"large\"',\n    '[class.nx-spinner--negative]': 'negative',\n    '[attr.role]': '\"status\"',\n    '[attr.aria-busy]': '\"true\"',\n    '[attr.aria-live]': '\"assertive\"',\n  }\n})\nexport class NxSpinnerComponent {\n  private _size: SpinnerSize = DEFAULT_SIZE;\n\n  /** Sets the size of the spinner. Default is 'small'. */\n  @Input('nxSize')\n  set size(value: SpinnerSize) {\n    if (value !== this._size) {\n      this._size = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get size(): SpinnerSize {\n    return this._size;\n  }\n\n  private _negative: boolean = false;\n\n  /** Whether the spinner should use a negative styling. */\n  @Input()\n  set negative(value: boolean) {\n    if (value !== this._negative) {\n      this._negative = coerceBooleanProperty(value);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  get negative(): boolean {\n    return this._negative;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule  } from '@angular/core';\n\nimport { NxSpinnerComponent } from './spinner.component';\n\n@NgModule({\n  declarations: [\n    NxSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NxSpinnerComponent\n  ],\n  bootstrap: [],\n  providers: []\n})\nexport class NxSpinnerModule { }\n"],"names":[],"mappings":";;;;;;;;;AAAA;IAMM,YAAY,GAAG,OAAO;AAE5B;IA4CE,4BAAoB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;QA5BjD,UAAK,GAAgB,YAAY,CAAC;QAclC,cAAS,GAAY,KAAK,CAAC;KAc0B;IAzB7D,sBACI,oCAAI;;;;QAMR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;;;;;;;QATD,UACS,KAAkB;YACzB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;SACF;;;OAAA;IAQD,sBACI,wCAAQ;;;;QAMZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;;;QATD,UACa,KAAc;YACzB,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;aACxC;SACF;;;OAAA;;gBAvCF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,yJAAuC;oBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAE/C,IAAI,EAAE;wBACJ,2BAA2B,EAAE,kBAAkB;wBAC/C,4BAA4B,EAAE,mBAAmB;wBACjD,2BAA2B,EAAE,kBAAkB;wBAC/C,8BAA8B,EAAE,UAAU;wBAC1C,aAAa,EAAE,UAAU;wBACzB,kBAAkB,EAAE,QAAQ;wBAC5B,kBAAkB,EAAE,aAAa;qBAClC;;iBACF;;;;gBAtBmD,iBAAiB;;;uBA2BlE,KAAK,SAAC,QAAQ;2BAcd,KAAK;;IAYR,yBAAC;CA7CD,IA6CC;;;;;;IA7BC,mCAA0C;;;;;IAc1C,uCAAmC;;;;;IAcvB,gDAA6C;;;;;;;;ACpD3D;IAKA;KAagC;;gBAb/B,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,kBAAkB;qBACnB;oBACD,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,OAAO,EAAE;wBACP,kBAAkB;qBACnB;oBACD,SAAS,EAAE,EAAE;oBACb,SAAS,EAAE,EAAE;iBACd;;IAC8B,sBAAC;CAbhC;;;;;;;;;;;;;;;;"}