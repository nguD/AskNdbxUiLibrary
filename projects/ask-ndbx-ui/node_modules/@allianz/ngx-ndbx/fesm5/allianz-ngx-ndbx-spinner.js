import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, NgModule } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * Generated from: spinner.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var DEFAULT_SIZE = 'small';
var NxSpinnerComponent = /** @class */ (function () {
    function NxSpinnerComponent(_changeDetectorRef) {
        this._changeDetectorRef = _changeDetectorRef;
        this._size = DEFAULT_SIZE;
        this._negative = false;
    }
    Object.defineProperty(NxSpinnerComponent.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        /** Sets the size of the spinner. Default is 'small'. */
        set: /**
         * Sets the size of the spinner. Default is 'small'.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._size) {
                this._size = value;
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NxSpinnerComponent.prototype, "negative", {
        get: /**
         * @return {?}
         */
        function () {
            return this._negative;
        },
        /** Whether the spinner should use a negative styling. */
        set: /**
         * Whether the spinner should use a negative styling.
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._negative) {
                this._negative = coerceBooleanProperty(value);
                this._changeDetectorRef.markForCheck();
            }
        },
        enumerable: true,
        configurable: true
    });
    NxSpinnerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'nx-spinner',
                    template: "<div class=\"nx-spinner__spin-block\">\n  <div class=\"nx-spinner__edge-left\"></div>\n  <div class=\"nx-spinner__edge-right\"></div>\n</div>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class.nx-spinner--small]': 'size === "small"',
                        '[class.nx-spinner--medium]': 'size === "medium"',
                        '[class.nx-spinner--large]': 'size === "large"',
                        '[class.nx-spinner--negative]': 'negative',
                        '[attr.role]': '"status"',
                        '[attr.aria-busy]': '"true"',
                        '[attr.aria-live]': '"assertive"',
                    },
                    styles: ["@-webkit-keyframes spin{0%{transform:rotate(45deg)}100%{transform:rotate(405deg)}}@keyframes spin{0%{transform:rotate(45deg)}100%{transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:#007ab3 #ececec #ececec;border-color:var(--spinner-background-color,#ececec);border-top-color:var(--spinner-indicator-color,#007ab3);-webkit-animation-name:spin;animation-name:spin;-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-timing-function:linear;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:calc(1.6px)}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:calc(2.4px)}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:calc(4px)}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:#007ab3;background-color:var(--spinner-indicator-color,#007ab3);position:absolute;top:4%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:#fff rgba(250,247,239,.35) rgba(250,247,239,.35)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:#fff}@media screen and (-ms-high-contrast:active){.nx-spinner__spin-block{border-color:window highlight highlight}}"]
                }] }
    ];
    /** @nocollapse */
    NxSpinnerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    NxSpinnerComponent.propDecorators = {
        size: [{ type: Input, args: ['nxSize',] }],
        negative: [{ type: Input }]
    };
    return NxSpinnerComponent;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    NxSpinnerComponent.prototype._size;
    /**
     * @type {?}
     * @private
     */
    NxSpinnerComponent.prototype._negative;
    /**
     * @type {?}
     * @private
     */
    NxSpinnerComponent.prototype._changeDetectorRef;
}

/**
 * @fileoverview added by tsickle
 * Generated from: spinner.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NxSpinnerModule = /** @class */ (function () {
    function NxSpinnerModule() {
    }
    NxSpinnerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        NxSpinnerComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    exports: [
                        NxSpinnerComponent
                    ],
                    bootstrap: [],
                    providers: []
                },] }
    ];
    return NxSpinnerModule;
}());

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: allianz-ngx-ndbx-spinner.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NxSpinnerComponent, NxSpinnerModule };
//# sourceMappingURL=allianz-ngx-ndbx-spinner.js.map
