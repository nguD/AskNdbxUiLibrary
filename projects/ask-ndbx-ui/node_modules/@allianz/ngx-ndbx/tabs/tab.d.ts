import { NxTabGroupBase } from './tab-group-base';
import { OnChanges, OnDestroy, SimpleChanges, TemplateRef, EmbeddedViewRef, AfterContentInit } from '@angular/core';
import { Subject } from 'rxjs';
export declare class NxTabComponent implements OnChanges, OnDestroy, AfterContentInit {
    private _tabGroup;
    private _label;
    private _disabled;
    /** Emits whenever the internal state of the tab changes. */
    readonly _stateChanges: Subject<void>;
    /**
     * Content for the tab label given by `<ng-template nxTabLabel>`.
     * @docs-private
     * */
    templateLabel: TemplateRef<any>;
    private _templateLabel;
    /** Template inside the NxTab view that contains an `<ng-content>`. */
    _implicitContent: TemplateRef<any>;
    /**
     * Template provided in the tab content that will be used if present, used to enable lazy-loading
     */
    _explicitContent: TemplateRef<any>;
    /** Sets the label of the tab shown in the tablist. */
    label: string;
    /** Sets the tab to disabled. */
    disabled: boolean;
    private _headerViewRef;
    private _contentViewRef;
    /** @docs-private */
    readonly headerViewRef: EmbeddedViewRef<any>;
    /** @docs-private */
    readonly contentViewRef: EmbeddedViewRef<any>;
    /**
     * Whether the tab is currently active.
     */
    isActive: boolean;
    constructor(_tabGroup: NxTabGroupBase);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
}
